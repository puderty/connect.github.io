{"version":3,"file":"js/app.b2ce5684.js","mappings":"oDAAYA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,iCAAmCA,EAC3CF,EAAQG,+CAAiDA,EACzDH,EAAQI,uBAAyBA,EACjC,MAAMC,EAAQR,EAAQ,OACtB,SAASK,EAAiCI,GACtC,IAAIC,EAA2BJ,EAA+CG,GAC9E,OAAOC,CACX,CACA,SAASJ,EAA+CG,GACpD,IAAIE,EAAS,CAAC,GACd,EAAIH,EAAMI,UAAU,4EAA6EC,KAAKC,UAAUL,IAChH,IAAIM,EAAoBN,EAAgBO,QAAQC,UAAUC,MAAKC,GAAsB,oBAAdA,EAAKC,OAC5E,GAAIL,GAAqBA,EAAkBM,SAAU,CACjD,IAAIC,EAAgB,GACpB,IAAK,MAAMH,KAAQJ,EAAkBM,SACV,QAAnBF,EAAKI,UACDJ,EAAKK,MAAQL,EAAKK,KAAKC,UACnBN,EAAKK,KAAKC,SAASC,SAAWP,EAAKK,KAAKC,SAASC,QAAQC,OAAS,KAClE,EAAInB,EAAMI,UAAU,6DAA8DC,KAAKC,UAAUK,IACjGG,EAAcM,KAAKT,MAK3B,EAAIX,EAAMI,UAAU,+DAAgEC,KAAKC,UAAUK,IACnGG,EAAcM,KAAKT,IAG3BJ,EAAkBM,SAAWC,CACjC,CACA,MAAMO,EAAapB,EAAgBO,QAAQC,UAAUC,MAAKC,GAAsB,aAAdA,EAAKC,OACjEU,EAAWrB,EAAgBO,QAAQC,UAAUC,MAAKC,GAAsB,cAAdA,EAAKC,OACrE,GAAIS,IAAed,EAAmB,EAClC,EAAIP,EAAMI,UAAU,oEACpB,IAAIc,EAAUG,EAAWH,QACzBA,EAAU,OAASG,EAAWE,QAAU,IAAML,EAC9C,IAAIF,EAAO,CACPC,SAAUI,GAEVC,IACAN,EAAKQ,UAAYF,GAErBf,EAAoB,CAChBK,KAAM,kBACNC,SAAU,CAAC,CACHE,UAAW,MACXU,UAAW,CAACP,GACZQ,QAAS,CAAC,uBACVC,MAAO,CAAC,EACRX,KAAMA,IAGtB,CAGA,OAFA,EAAIhB,EAAMI,UAAU,0EAA2EC,KAAKC,UAAUC,IAC9GR,EAAuBQ,EAAkBM,SAAUV,GAC5CA,CACX,CACA,SAASJ,EAAuBc,EAAUV,GACtCU,EAASe,SAAQjB,IACb,IAAIkB,EAAS,GACThB,EAAW,GACfF,EAAKc,UAAUG,SAAQE,IACnB,IAAIC,EAAaD,EAAYE,MAAM,KAEnC,IADA,EAAIhC,EAAMI,UAAU,8DAA+D2B,EAAWZ,QAC1FY,EAAWZ,QAAU,EAAG,CACxB,IAAIc,EAAQF,EAAWG,MAAM,EAAG,GAAGC,KAAK,KACxCN,EAAOT,KAAKa,GACZpB,EAASO,KAAKU,IACd,EAAI9B,EAAMI,UAAU,0DAA2D6B,EAAO,eAAgBH,EAC1G,KAEAnB,EAAKK,MAAQL,EAAKK,KAAKC,WACvBN,EAAKK,KAAKC,SAASL,KAAO,YAE1BD,EAAKK,MAAQL,EAAKK,KAAKQ,YACvBb,EAAKK,KAAKQ,UAAUZ,KAAO,aAE/BT,EAAOQ,EAAKI,WAAa,CACrBc,OAAQA,EACRhB,SAAUA,EACVa,QAASf,EAAKe,QACdC,MAAOhB,EAAKgB,MACZnB,QAASG,EAAKK,OAElB,EAAIhB,EAAMI,UAAU,0DAA2DC,KAAKC,UAAUH,GAAQ,GAE9G,C,kCCrFA,IAAIiC,EAFJ3C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQyC,cAAW,EAEnB,SAAWA,GACPA,EAAS,WAAa,MACzB,CAFD,CAEGA,IAAazC,EAAQyC,SAAWA,EAAW,CAAC,G,oCCkB/C,SAASC,IACL,OAAOC,OAAOC,aAClB,CACA,SAASC,IACL,OAAOF,OAAOG,eAClB,CACA,SAASC,EAAqBC,GAC1B,MAAMC,EAAS,IAAIC,IAAIF,GACjBG,EAAgBF,EAAOG,SAASf,MAAM,KAAKgB,OAAOC,SACxD,GAAIH,EAAc3B,QAAU,EAAG,CAC3B,MAAM+B,EAAUJ,EAAc,GACxBK,EAAUL,EAAc,GAC9B,MAAO,CAAEI,UAASC,UACtB,CACJ,CAtCY3D,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQyD,qBAAuBzD,EAAQ0D,oBAAsB1D,EAAQ2D,cAAgB3D,EAAQ4D,gBAAkB5D,EAAQ6D,aAAe7D,EAAQ8D,qBAAuB9D,EAAQ+D,iBAAmB/D,EAAQgE,YAAchE,EAAQiE,mBAAqBjE,EAAQkE,sBAAwBlE,EAAQmE,iBAAc,EACzSnE,EAAQ0C,cAAgBA,EACxB1C,EAAQ6C,gBAAkBA,EAC1B7C,EAAQ+C,qBAAuBA,EAC/B/C,EAAQmE,YAAc,aACtBnE,EAAQkE,sBAA0C,qBAAXvB,QAA0BA,OAAOyB,SAASC,SAASC,SAAS,WAC7F,gCACA,+BACNtE,EAAQiE,mBAAuC,qBAAXtB,QAA0BA,OAAOyB,SAASC,SAASC,SAAS,WAC1F,kCACA,iCACNtE,EAAQgE,YAAc,+BAEtBhE,EAAQ+D,iBAAmB,GAAG/D,EAAQmE,6BAEtCnE,EAAQ8D,qBAAuB,IAE/B9D,EAAQ6D,aAAe,iBACvB7D,EAAQ4D,gBAAkB,QAE1B5D,EAAQ2D,cAAgB,wBAiBxB3D,EAAQ0D,oBAAsB,aAC9B1D,EAAQyD,qBAAuB,iB,oCCvC/B3D,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuE,aAAevE,EAAQwE,wBAAqB,EACpDxE,EAAQyE,QAAUA,EAClB,MAAMC,EAAa7E,EAAQ,OAC3B,IAAI2E,EAcAD,EATJ,SAASE,EAAQE,GACb,GAAwB,kBAAbA,GAAsC,OAAbA,GAAqB,WAAYA,EAAU,CAC3E,GAAIA,EAASC,SAAWJ,EAAmBK,SACvC,MAAM,IAAIH,EAAWI,gBAAgBJ,EAAWK,wBAAwBC,oBAE5E,OAAOL,EAASM,IACpB,CACA,OAAON,CACX,EAZA,SAAWH,GACPA,EAAmB,YAAc,WACjCA,EAAmB,YAAc,UACpC,EAHD,CAGGA,IAAuBxE,EAAQwE,mBAAqBA,EAAqB,CAAC,IAW7E,SAAWD,GACPA,EAAa,WAAa,UAC1BA,EAAa,WAAa,UAC1BA,EAAa,UAAY,QAC5B,CAJD,CAIGA,IAAiBvE,EAAQuE,aAAeA,EAAe,CAAC,G,oCCvB3D,IAAIW,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsF,SAAWA,EACnBtF,EAAQuF,cAAgBA,EACxBvF,EAAQwF,yBAA2BA,EACnCxF,EAAQyF,kBAAoBA,EAC5BzF,EAAQ0F,aAAeA,EACvB1F,EAAQ2F,KAAOA,EACf3F,EAAQ4F,UAAYA,EACpB,MAAMC,EAAiBX,EAAgBrF,EAAQ,QACzCQ,EAAQR,EAAQ,OAChBiG,EAAYjG,EAAQ,OAC1B,SAASyF,EAASS,EAAMC,EAAS,UAC7B,EAAI3F,EAAMI,UAAU,WAAYsF,EAAMC,GACtCrD,OAAOsD,KAAKF,EAAMC,EAAQ,sBAC9B,CACA,SAAST,EAAcQ,GACnBT,EAASS,EAAM,SACnB,CACA,SAASP,EAAyBO,EAAMG,GACpC,MAAMC,EAAaA,KACXP,EAAU,WAAcD,EAAK,YAAcC,EAAU,YAIzDM,GAAU,EAERE,EAAkBC,YAAW,IAAMF,KAAc,KACvDxD,OAAO2D,iBAAiB,QAAQ,IAAMC,aAAaH,IAAkB,CAAEI,MAAM,IACzEb,EAAK,aAAc,EAAIG,EAAUW,QACjCnB,EAASS,EAAM,UAGfT,EAASS,EAAM,QAEvB,CACA,SAASN,IACL,IAAIiB,GAAQ,EAQZ,OAPA,SAAWC,IACH,2TAA2TC,KAAKD,IAChU,0kDAA0kDC,KAAKD,EAAEpE,MAAM,EAAG,OAC1lDmE,GAAQ,EACf,CAJD,CAIGG,UAAUC,WACTD,UAAUE,QACVpE,OAAOqE,OACJN,CACX,CACA,SAAShB,IACL,IAAIuB,EAAIC,EAAIC,EACZ,MAAMC,GAAU,IAAIvB,EAAewB,SAAUC,YACvCC,EAAoC,QAA1BN,EAAKG,EAAQI,GAAGvG,YAAyB,IAAPgG,OAAgB,EAASA,EAAGQ,cACxEC,EAA8C,QAA/BR,EAAKE,EAAQO,OAAOC,aAA0B,IAAPV,OAAgB,EAASA,EAAGO,cACxF,IAAID,EACJ,QAAQ,GACJ,IAAqB,SAAhBE,EACDF,EAAK,OACL,MACJ,IAAgB,QAAXD,EACDC,EAAK,MACL,MACJ,IAAgB,YAAXD,EACDC,EAAK,UACL,MACJ,IAAgB,WAAXD,EACDC,EAAK,QACL,MACJ,IAAgB,UAAXD,EACDC,EAAK,QACL,MACJ,KAAgB,OAAXD,QAA8B,IAAXA,OAAoB,EAASA,EAAOjD,SAAS,WACjEkD,EAAK,UACL,MAER,MAAMK,EAA8C,QAA/BV,EAAKC,EAAQU,QAAQ7G,YAAyB,IAAPkG,OAAgB,EAASA,EAAGM,cACxF,IAAIK,EACJ,QAAQ,GACJ,IAAqB,WAAhBD,EACDC,EAAU,SACV,MACJ,IAAqB,YAAhBD,EACDC,EAAU,UACV,MACJ,KAAqB,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYvD,SAAS,UAChFwD,EAAU,SACV,MACJ,KAAqB,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYvD,SAAS,SAChFwD,EAAU,QACV,MAER,MAAO,CACHN,KACAM,UAER,CACA,SAASnC,KAAQ6B,GACb,OAAOA,EAAGlD,SAASoB,IAAe8B,GACtC,CACA,SAAS5B,KAAakC,GAClB,OAAOA,EAAQxD,SAASoB,IAAeoC,QAC3C,C,oCCrGA,IAAIC,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,MAAqBG,GAC1C4I,EAAa/I,EAAQ,OAAsBG,E,oCChB3C,IAAI+H,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiJ,yBAA2BjJ,EAAQkJ,+BAAiClJ,EAAQmJ,yBAA2BnJ,EAAQoJ,YAAcpJ,EAAQqJ,kBAAoBrJ,EAAQsJ,gBAAkBtJ,EAAQuJ,wBAAqB,EACxN,IAAIC,EAAuB3J,EAAQ,OACnCC,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOa,EAAqBD,kBAAoB,IAC5IX,EAAa/I,EAAQ,OAAiBG,GACtC,IAAIyJ,EAAoB5J,EAAQ,OAChCC,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOc,EAAkBH,eAAiB,IACnI,IAAII,EAAsB7J,EAAQ,OAClCC,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOe,EAAoBL,iBAAmB,IACzI,IAAIM,EAAgB9J,EAAQ,OAC5BC,OAAOC,eAAeC,EAAS,cAAe,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgB,EAAcP,WAAa,IACvH,IAAIQ,EAA6B/J,EAAQ,OACzCC,OAAOC,eAAeC,EAAS,2BAA4B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOiB,EAA2BT,wBAA0B,IAC9J,IAAIU,EAAmChK,EAAQ,OAC/CC,OAAOC,eAAeC,EAAS,iCAAkC,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOkB,EAAiCX,8BAAgC,IAChL,IAAIY,EAA6BjK,EAAQ,OACzCC,OAAOC,eAAeC,EAAS,2BAA4B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmB,EAA2Bb,wBAA0B,G,oCC9B9JnJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+J,cAAgBA,EACxB,MAAMrF,EAAa7E,EAAQ,OAC3B,SAASkK,EAAcC,GACnB,IAAKA,EACD,MAAM,IAAItF,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,uDAE/F,IAAKD,EAAa/I,KACd,MAAM,IAAIyD,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,wBAK/F,OAAO,CACX,C,oCCdA,IAAIlC,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkK,oBAAsBlK,EAAQmK,gBAAkBnK,EAAQoK,eAAiBpK,EAAQqK,kBAAoBrK,EAAQsK,eAAiBtK,EAAQuK,0BAAuB,EACrK3B,EAAa/I,EAAQ,OAAqBG,GAC1C4I,EAAa/I,EAAQ,OAAeG,GACpC,IAAIwK,EAAyB3K,EAAQ,OACrCC,OAAOC,eAAeC,EAAS,uBAAwB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO6B,EAAuBD,oBAAsB,IAClJ,IAAIE,EAAmB5K,EAAQ,OAC/BC,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAiBH,cAAgB,IAChI,IAAII,EAAsB7K,EAAQ,OAClCC,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO+B,EAAoBL,iBAAmB,IACzI,IAAIM,EAAmB9K,EAAQ,OAC/BC,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgC,EAAiBP,cAAgB,IAChI,IAAIQ,EAAoB/K,EAAQ,OAChCC,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOiC,EAAkBT,eAAiB,IACnI,IAAIU,EAAwBhL,EAAQ,MACpCC,OAAOC,eAAeC,EAAS,sBAAuB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOkC,EAAsBX,mBAAqB,IAC/ItB,EAAa/I,EAAQ,OAAqBG,E,kCC9B1CF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,oCCAtDH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8K,aAAe9K,EAAQ+K,WAAa/K,EAAQgL,cAAgBhL,EAAQiL,aAAejL,EAAQkL,WAAalL,EAAQmL,cAAgBnL,EAAQoL,gBAAa,EAC7J,MAAMC,EAASxL,EAAQ,OACvBG,EAAQoL,WAAa,CACjBE,QAAS,cACTC,QAAS,mBAEbvL,EAAQmL,cAAgB,CACpBG,QAAS,0CACTE,QAAS,0CACTC,cAAe,0CAEnBzL,EAAQkL,WAAa,CACjBI,QAAS,eAEbtL,EAAQiL,aAAe,CACnBK,QAAS,gBACTI,iBAAkB,mBAClBC,iBAAkB,oBAEtB3L,EAAQgL,cAAgB,CACpBY,eAAgB,sBAEpB5L,EAAQ+K,WAAa,CACjBO,QAAS,YAEbtL,EAAQ8K,aAAe,CACnB,CAACO,EAAOQ,iBAAkB/L,OAAOgM,OAAO9L,EAAQoL,YAChD,CAACC,EAAOU,iBAAkBjM,OAAOgM,OAAO9L,EAAQmL,eAChD,CAACE,EAAOW,iBAAkBlM,OAAOgM,OAAO9L,EAAQ+K,YAChD,CAACM,EAAOY,iBAAkBnM,OAAOgM,OAAO9L,EAAQkL,YAChD,CAACG,EAAOa,mBAAoBpM,OAAOgM,OAAO9L,EAAQiL,cAClD,CAACI,EAAOc,oBAAqBrM,OAAOgM,OAAO9L,EAAQgL,e,oCCjC3CnL,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkK,yBAAsB,EAC9B,MAAMmD,EAASxN,EAAQ,OACvB,MAAMqK,EACFoD,WAAAA,CAAYC,GACRpI,KAAKqI,kBAAoB,mBACzBrI,KAAKoI,SAAWA,CACpB,CACAE,QAAAA,CAASC,GAIL,GAHe,MAAXA,IACAA,EAAUvI,KAAKqI,mBAEfE,GAAWvI,KAAKqI,kBAChB,MAAM,IAAIH,EAAOvI,gBAAgBuI,EAAOtI,wBAAwB4I,oBAAqB,eAAiBD,EAAU,oCAEpH,OAAOA,CACX,CACAE,UAAAA,CAAWF,GACP,IAAIzG,EAAIC,EAAIC,EAAI0G,EAAIC,EACpB,IAAIC,EAAkI,QAAvH7G,EAAsC,QAAhCD,EAAK9B,KAAKoI,SAASS,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,WAAWZ,EAAOa,6BAA0C,IAAPhH,OAAgB,EAASA,EAAGhG,SAASmC,QAAO,SAAU0K,GAChM,OAAOA,EAAQI,WAAWT,EAC9B,IAAG,GACH,IAAKK,EAID,OAEJ,MAAMK,EAAeL,EAAQ1L,MAAM,KAC7Bd,EAAUwM,EAAQ1L,MAAM,KAAK,GACnC,IAAIL,EAAqL,QAA5K8L,EAA6H,QAAvHD,EAAsC,QAAhC1G,EAAKhC,KAAKoI,SAASS,eAA4B,IAAP7G,OAAgB,EAASA,EAAG8G,WAAWZ,EAAOa,6BAA0C,IAAPL,OAAgB,EAASA,EAAG7L,aAA0B,IAAP8L,OAAgB,EAASA,EAAI,GAAGM,EAAa,MAAMA,EAAa,MAC7PC,EAAY,GAIhB,YAHahG,GAATrG,IACAqM,EAAYrM,EAAM,cAEjBT,EAME,CACHA,QAASA,EACT+M,OAAQD,QARZ,CAUJ,CAQAE,WAAAA,CAAYC,EAAeC,EAAWf,GAClC,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACI,GAAxBc,EAAchN,SACdgN,EAAgBrJ,KAAKyI,WAAWF,GAAS,YAE7C,IAAIgB,EAAW,CACX,QAAWhB,EACX,OAAU,uBACV,OAAU,CACN,eAAkBc,EAClB,UAAaC,IAGrB,IACI,MAAME,QAAYxJ,KAAKoI,SAASqB,QAAQF,EAAUhB,GAClD,GAAI,WAAYiB,EAAK,CACjB,IAAIvH,EAAUuH,EAAInO,OAIlB,MAHsB,iBAAX4G,IACPA,EAAU1G,KAAKmO,MAAMzH,IAElB,CAACA,EAAQ,eAAgBA,EAAQ,eAC5C,CACK,CACD,IAAI0H,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAQAC,eAAAA,CAAgBR,EAAeS,EAAavB,GACxC,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,IAAIwB,EAAkB,CAClB,eAAkBV,EAClB,iBAAoBS,GAEpB5N,EAAO,CACP,OAAU,2BACV,OAAU,CACN,KAAQX,KAAKC,UAAUuO,GACvB,KAAQV,IAGhB,IACI,MAAMG,QAAYxJ,KAAKoI,SAASqB,QAAQvN,EAAMqM,GAC9C,GAAI,WAAYiB,EACZ,MAAO,CAAEQ,iBAAkBR,EAAInO,QAE9B,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAQAK,iCAAAA,CAAkCvO,EAAS6M,GACvC,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,IACI,IAAIrM,EAAO,CACP,OAAU,uBACV,OAAUR,GAEd,MAAM8N,QAAYxJ,KAAKoI,SAASqB,QAAQvN,EAAMqM,GAC9C,GAAI,WAAYiB,EACZ,MAAO,CACH,iBAAoBA,EAAInO,OAAO,UAC/B,WAAcmO,EAAInO,OAAO,cAG5B,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAaAM,mCAAAA,CAAoCb,EAAec,EAAOC,EAAMC,EAAoB9B,GAChF,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,MAAM+B,EAAeC,MAAMC,QAAQL,GAASA,EAAQ,CAACA,GAC/CM,EAAmB,CACrB,MAASH,EACT,KAAQF,EACR,mBAAsB,CAClB,MAAgC,OAAvBC,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBK,MACpG,OAAiC,OAAvBL,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBK,MACrG,QAAkC,OAAvBL,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBM,UAG9G,OAAO3K,KAAK6J,gBAAgBR,EAAeoB,EAAkBlC,EACjE,GACJ,EAEJ1N,EAAQkK,oBAAsBA,C,oCCpMlBrK,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIkI,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI4H,EAAsB5K,MAAQA,KAAK4K,qBAAwBjQ,OAAOkI,OAAU,SAASC,EAAG+H,GACxFlQ,OAAOC,eAAekI,EAAG,UAAW,CAAES,YAAY,EAAMzI,MAAO+P,GACnE,EAAK,SAAS/H,EAAG+H,GACb/H,EAAE,WAAa+H,CACnB,GACIC,EAAgB9K,MAAQA,KAAK8K,cAAkB,WAC/C,IAAIC,EAAU,SAASjI,GAMnB,OALAiI,EAAUpQ,OAAOqQ,qBAAuB,SAAUlI,GAC9C,IAAImI,EAAK,GACT,IAAK,IAAIjI,KAAKF,EAAOnI,OAAOgJ,UAAUC,eAAeC,KAAKf,EAAGE,KAAIiI,EAAGA,EAAG5O,QAAU2G,GACjF,OAAOiI,CACX,EACOF,EAAQjI,EACnB,EACA,OAAO,SAAU7C,GACb,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAI5E,EAAS,CAAC,EACd,GAAW,MAAP4E,EAAa,IAAK,IAAI+C,EAAI+H,EAAQ9K,GAAMiL,EAAI,EAAGA,EAAIlI,EAAE3G,OAAQ6O,IAAkB,YAATlI,EAAEkI,IAAkBtI,EAAgBvH,EAAQ4E,EAAK+C,EAAEkI,IAE7H,OADAN,EAAmBvP,EAAQ4E,GACpB5E,CACX,CACJ,CAhBmD,GAiB/C4L,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsQ,uBAAoB,EAC5B,MAAMC,EAAY1Q,EAAQ,OACpB2Q,EAAa3Q,EAAQ,OACrB4Q,EAAqB5Q,EAAQ,OAC7B6Q,EAAiB7Q,EAAQ,OACzB8Q,EAAc9Q,EAAQ,OACtB+Q,EAAkB/Q,EAAQ,OAC1BgR,EAAYhR,EAAQ,OACpBiR,EAAUjR,EAAQ,OAClBkR,EAAWlR,EAAQ,OACnBmR,EAAQnR,EAAQ,OAChBoR,EAAapR,EAAQ,OACrBqR,EAAMjB,EAAapQ,EAAQ,QAC3BQ,EAAQR,EAAQ,OAChBsR,EAAWtR,EAAQ,OACnBuR,EAAQvR,EAAQ,OAChBwR,EAA4BxR,EAAQ,OAC1C,MAAMyQ,EACFhD,WAAAA,CAAYgE,OAAUjJ,GAClBlD,KAAKoM,OAAS,IAAIX,EAAgBY,aAClCrM,KAAKsM,aAAe,IAAIJ,EAA0BK,wBAAwB,QAC1EvM,KAAKwM,iBAAkB,EAEvBxM,KAAKyM,eAAiB,IAAIf,EAAUgB,QAAQpB,EAAmBqB,4BAA8BR,EAASb,EAAmBqB,6BACzH3M,KAAK4M,qBAAuB,IAAIlB,EAAUgB,QAAQpB,EAAmBuB,qBAAuBV,EAASb,EAAmBuB,sBACxH7M,KAAK8M,OAAS,IAAIlB,EAASmB,cAC3B,IAAIC,GAAQ,EAAIf,EAAMgB,WAGtB,IAFA,EAAI/R,EAAMI,UAAU,WAAY0R,GAChCjB,EAAImB,UAAU,8BACVF,EAEA,IACI,MAAMG,EAAcnN,KAAKoN,0BACzB,EAAIlS,EAAMI,UAAU,eAAgB6R,GACpCnN,KAAK8M,OAAS,IAAIlB,EAASmB,cAAcI,EAC7C,CACA,MAAOvD,GACH5J,KAAKyM,eAAeY,aACpBtB,EAAIuB,YAAYtB,EAASuB,cAAcC,IAAK,aAAc,eAC9D,CAEJxN,KAAKyN,WAAazN,KAAK0N,sBACvB1N,KAAK2N,eAAe3N,KAAKyN,YAEzBzN,KAAK4N,UAAY,IAAIxC,EAAUyC,mBAAmBrC,EAAYsC,uBAC9D9N,KAAK+N,UAAYC,KAAKC,MAEtBjO,KAAKkO,kBAAoB,GACzBlO,KAAKmO,aAAe,GACpBpC,EAAIzQ,SAAS,yCAAyC0E,KAAKkO,oBAC/D,CACAE,gBAAAA,GACI,IAAIC,EAAUL,KAAKC,MACfI,GAAWrO,KAAK+N,YAChB/N,KAAK+N,UAAYM,EAAU,GAE/BrO,KAAK+N,UAAYM,CACrB,CACAC,iBAAAA,CAAkBC,GACd,IAAIC,GAAY,EAAI1C,EAAW2C,mBAAmBF,GAElDvO,KAAKyM,eAAeiC,gBAAgBF,EAAWlD,EAAmBqD,wBACtE,CACAvB,sBAAAA,GAEI,MAAMwB,EAAK5O,KAAKyM,eAAeoC,cAAcvD,EAAmBqD,yBAC1DG,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAC5B/C,EAAIzQ,SAAS,0BACbyQ,EAAIzQ,SAASwT,GACb,IAAI3B,GAAc,EAAIrB,EAAWiD,eAAeD,GAChD,OAAO3B,CACX,CAGI,OADAnN,KAAKyM,eAAeY,aACb,IAEf,CACAM,cAAAA,CAAeY,GACX,IAAIS,EAAa,CACb9F,WAAW,EAAIyC,EAAQsD,aAAaV,EAAQrF,WAC5CgG,WAAW,EAAIvD,EAAQsD,aAAaV,EAAQW,YAEhDnD,EAAIzQ,SAAS,eACb,IAAIkT,GAAY,EAAI1C,EAAW2C,mBAAmBO,GAClDjD,EAAIzQ,SAASkT,GAEbxO,KAAKyM,eAAeiC,gBAAgBF,EAAWlD,EAAmB6D,qBACtE,CACAzB,mBAAAA,GACI,IACI,MAAMkB,EAAK5O,KAAKyM,eAAeoC,cAAcvD,EAAmB6D,sBAC1DL,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAE5B/C,EAAIzQ,SAAS,sBACbyQ,EAAIzQ,SAASwT,GACb,IAAIM,GAAiB,EAAItD,EAAWiD,eAAeD,GACnD/C,EAAIzQ,SAAS,eACbyQ,EAAIzQ,SAAS8T,GACb,IAAIb,EAAU,CACVrF,WAAW,EAAIyC,EAAQ0D,gBAAgBD,EAAelG,WACtDgG,WAAW,EAAIvD,EAAQ0D,gBAAgBD,EAAeF,YAE1D,OAAOX,CACX,CAEI,OAAO,EAAI1C,EAAMyD,kBAEzB,CACA,MAAO1F,GAEH,OADAmC,EAAIuB,YAAYtB,EAASuB,cAAcC,IAAK,aAAc,iBACnD,EAAI3B,EAAMyD,kBACrB,CACJ,CACAC,eAAAA,GAEI,OADAxD,EAAIzQ,SAAS,yBAAyB0E,KAAKkO,qBACpClO,KAAKkO,kBAAkB7R,OAAS,CAC3C,CACAmT,OAAAA,CAAQC,GACJ,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,aAAa,EAAI6L,EAAM6D,SAASD,EAAOlE,EAAeoE,sBAAuBpE,EAAeqE,qBAC5F5P,KAAKyN,WACT,GACJ,CACAoC,YAAAA,CAAaC,GACT,OAAO7I,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWC,EAAOC,GAAY,GACpE,IAAInO,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAGpD,GAFAzQ,KAAKoM,OAAOsE,KAAKV,EAAMW,GAAIX,IAEtBC,EAAW,OACNjQ,KAAK4Q,QAAQZ,EAAMW,IAAI,GAC7B,IAAIlB,EAA4F,QAAnF3N,EAAK9B,KAAKyM,eAAeoE,QAAQvF,EAAmBwF,iCAA8C,IAAPhP,OAAgB,EAASA,EAAGgN,QACpI,GAAIW,EAAO,CACP,IAAIsB,EAAWf,EACf,GAAmF,QAA9EhO,EAAgC,QAA1BD,EAAKgP,EAASC,cAA2B,IAAPjP,OAAgB,EAASA,EAAG7F,YAAyB,IAAP8F,OAAgB,EAASA,EAAGiP,UAAW,CAC1HF,EAASG,QAAUH,EAASG,SAAW7F,EAAW8F,uBAElD,EAAIjW,EAAMI,UAAU,4CACpB0E,KAAKoR,kBAAkB3B,IAG3B,IAAI4B,EAAoBrR,KAAKsM,aAAagF,4BAA2G,QAA9E3I,EAAgC,QAA1BD,EAAKqI,EAASC,cAA2B,IAAPtI,OAAgB,EAASA,EAAGxM,YAAyB,IAAPyM,OAAgB,EAASA,EAAG4I,SACzL,GAAIF,EAAmB,CACnB,IAAIG,EAAY,CACZC,QAAwF,QAA9EtB,EAAgC,QAA1BD,EAAKa,EAASC,cAA2B,IAAPd,OAAgB,EAASA,EAAGhU,YAAyB,IAAPiU,OAAgB,EAASA,EAAGV,MAC5HwB,UAA0F,QAA9EZ,EAAgC,QAA1BD,EAAKW,EAASC,cAA2B,IAAPZ,OAAgB,EAASA,EAAGlU,YAAyB,IAAPmU,OAAgB,EAASA,EAAGY,UAC9HS,cAAeL,EACfM,YAA4F,QAA9EpB,EAAgC,QAA1BD,EAAKS,EAASC,cAA2B,IAAPV,OAAgB,EAASA,EAAGpU,YAAyB,IAAPqU,OAAgB,EAASA,EAAGoB,aAEhIC,QAAoB5R,KAAKsM,aAAauF,uBAAuBL,GAC7DI,EAAYE,uBACZF,EAAYE,sBAAsBhV,SAASiV,GAAU9K,EAAUjH,UAAM,OAAQ,GAAQ,YAEjFA,KAAKoO,yBACCpO,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAAYF,EAAOtC,EAC7D,KAER,MAEIzP,KAAKoO,yBACCpO,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAA2F,QAA9ExB,EAAgC,QAA1BD,EAAKO,EAASC,cAA2B,IAAPR,OAAgB,EAASA,EAAGtU,YAAyB,IAAPuU,OAAgB,EAASA,EAAGQ,UAAWxB,EAExL,CACJ,CACJ,CACJ,GACJ,CACAyC,cAAAA,CAAezC,GACX,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,GAFA+L,EAAImB,UAAU,yCACdnB,EAAIzQ,SAAS,uCAAuCmU,KAC9B,kBAAVA,GAAwC,IAAjBA,EAAMpT,OACrC,MAAM,IAAI8V,MAAM,6BAEpBpG,EAAIzQ,SAAS,wDACP0E,KAAKoS,YAAW,GACtBpS,KAAKyM,eAAe4F,YAAY5C,EAAOnE,EAAmBwF,0BAC1D/E,EAAIzQ,SAAS,oDACP0E,KAAKsS,SAAQ,EACvB,GACJ,CACAC,cAAAA,GACI,IAAI9C,GAAQ,EAAI9D,EAAQ6G,iBACxBzG,EAAIzQ,SAAS,yBAAyBmU,KACtC1D,EAAImB,UAAU,+CACdlN,KAAKmO,aAAesB,EACpB,MAAMgD,EAAO,CACTC,UAAWjD,EACXkD,SAAU3S,KAAK8M,OAAO8F,mBAAmB1J,WAE7C,OAAOuJ,CACX,CACAH,OAAAA,GACI,OAAOrL,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW8C,GAAc,GAC/D7S,KAAK8S,SAAU,IAAI9E,MAAO+E,WAC1B,EAAI7X,EAAMI,UAAU,wBAAyB0E,KAAK8S,SAClD/G,EAAImB,UAAU,oCACd,IAAI8F,EAAgBhT,KAAKyM,eAAeoE,QAAQvF,EAAmBwF,0BAEnE,IAAIrB,EAAQzP,KAAKmO,aAGjB,GAFApC,EAAIzQ,SAAS,yBAAyBmU,KAElCoD,EAAa,CACgB,qBAAlBG,GAAmD,OAAlBA,IACxCjH,EAAIzQ,SAAS,yBAAyB0X,KACtCvD,EAAQuD,EAAclE,SAE1B,IAAImE,EAAwBjT,KAAKyM,eAAeoE,QAAQvF,EAAmB4H,qCACvED,IACAjT,KAAKkO,kBAAoB+E,EAAsBnE,SAC/C,EAAI5T,EAAMI,UAAU,wDAAwD0E,KAAKkO,sBAErFnC,EAAImB,UAAU,2CAClB,CACA,GAAI2F,EAEA,IACI,MAAM1F,EAAcnN,KAAKoN,yBACrBD,IACAnN,KAAK8M,OAAS,IAAIlB,EAASmB,cAAcI,GAEjD,CACA,MAAOvD,GAIH,MAHAmC,EAAIoH,SAAS,yCACbpH,EAAIuB,YAAYtB,EAASuB,cAAcC,IAAK,aAAc,gBAC1DxN,KAAKyM,eAAeY,aACd,IAAI8E,MAAM,sBACpB,CAEJpG,EAAIzQ,SAAS,yBAAyB0E,KAAK8M,OAAO8F,mBAAmB1J,aAErElJ,KAAKyM,eAAe4F,YAAY5C,EAAOnE,EAAmBwF,0BAC1D,IAAIsC,QAAiBpT,KAAKwP,QAAQC,GAGlC,OAFA1D,EAAIzQ,SAAS,uBAAuB8X,KACpCpT,KAAKyM,eAAe4F,YAAYe,EAAU,OACnC,IAAI5L,SAAQ,CAACD,EAASE,KAEzBzH,KAAK4N,UAAUyF,QAAO,IAAMpM,EAAUjH,UAAM,OAAQ,GAAQ,YACxD+L,EAAIzQ,SAAS,wBACbyQ,EAAImB,UAAU,sBACd,MAAMoG,GAAU,IAAItF,MAAO+E,WAC3B,EAAI7X,EAAMI,UAAU,uBAAwBgY,EAAUtT,KAAK8S,SAE3D9S,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAEjF,GAAIuT,GAAOA,EAAI3J,MAAO,CAClBmC,EAAIoH,SAAS,qBACbpH,EAAImB,UAAU,iCACRlN,KAAK4N,UAAUwE,aACrB,IAAIxI,EAAQ,IAAIuI,MAChBvI,EAAM2H,QAAUgC,EAAI3J,MAAM2H,QAC1B3H,EAAM9N,KAAOyX,EAAI3J,MAAM4J,KAAKvB,WAE5BxK,EAAOmC,EACX,CAEA5J,KAAKoO,mBACLpO,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAEjF,GAAIuT,GAAOA,EAAI3J,MAAO,CAClBmC,EAAIoH,SAAS,yBACbpH,EAAImB,UAAU,qCACRlN,KAAK4N,UAAUwE,aACrB,IAAIxI,EAAQ,IAAIuI,MAChBvI,EAAM2H,QAAUgC,EAAI3J,MAAM2H,QAC1B3H,EAAM9N,KAAOyX,EAAI3J,MAAM4J,KAAKvB,WAE5BxK,EAAOmC,EACX,CACA5J,KAAKoO,mBACLrC,EAAIzQ,SAAS,0CAA0C0E,KAAK+N,aAC5DhC,EAAImB,UAAU,yCACd,MAAMuG,GAAQ,IAAIzF,MAAO+E,UASzB,IARA,EAAI7X,EAAMI,UAAU,oCAAqCmY,EAAQzT,KAAK8S,eAEhE9S,KAAK0T,4BAA4B1T,KAAK+N,UAAUkE,WAAYxC,GAElE1D,EAAIzQ,SAAS,yBAAyB0E,KAAK+N,aAC3ChC,EAAImB,UAAU,8BACRlN,KAAKsM,aAAaqH,KAAK3T,KAAK4T,QAAQC,KAAK7T,OAE3C6S,EAAa,CACb,IAAIiB,EAAe9T,KAAK+T,YAAYtE,GAChCqE,IACA,EAAI5Y,EAAMI,UAAU,gCACpB4F,YAAW,KACPlB,KAAKgU,oBAAoB,GAC1B,QAGH,EAAI9Y,EAAMI,UAAU,wBACpB0E,KAAKoR,kBAAkB3B,GAE/B,CACAlI,GACJ,MACAwE,EAAIzQ,SAAS,0CAA0C0E,KAAK+N,aAC5DhC,EAAImB,UAAU,+BACd,MAAM+G,GAAS,IAAIjG,MAAO+E,WAC1B,EAAI7X,EAAMI,UAAU,iCAAkC2Y,EAASjU,KAAK8S,eAC9D9S,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAC5D+L,EAAIzQ,SAAS,wCACP0E,KAAK4N,UAAU0E,UAChB6B,OAAOC,KACR,EAAIlZ,EAAMI,UAAU,kCAAmC8Y,GACvD3M,EAAO2M,EAAI,GAEnB,KAAI,CACAzD,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWkJ,mBACnBvD,OAAQ,CACJvB,MAAOA,IAGnB,MACA1D,EAAIzQ,SAAS,mBACbyQ,EAAImB,UAAU,kDACRlN,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAC5D+L,EAAIzQ,SAAS,wCACP0E,KAAK4N,UAAU0E,UAChB6B,OAAOC,KACR,EAAIlZ,EAAMI,UAAU,kCAAmC8Y,GACvD3M,EAAO2M,EAAI,GAEnB,KAAI,CACAzD,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWmJ,qBACnBxD,OAAQ,CACJyD,MAAOrB,KAIfpT,KAAK4N,UAAU8G,iBAAiBC,IAC5B,IAAI7S,EAGJ,GAFAiK,EAAIzQ,SAAS,0BACbyQ,EAAIzQ,SAASqZ,KACP,WAAYA,MAAY,SAAUA,EAAM,WAE1C,YADA3U,KAAK6P,aAAa8E,GAAO,GAG7B,IAAIC,EAAsC,QAA5B9S,EAAK6S,EAAM3D,OAAO9U,YAAyB,IAAP4F,OAAgB,EAASA,EAAGyP,QAC9E,GAAsB,qBAAXqD,GAA0BA,EAAOvY,OAAS,EAAG,CACpDuY,EAASA,EAAOC,QAAQ,KAAM,KAC9B,IAAIC,GAAgB,EAAIhJ,EAAWiD,eAAe6F,GACrB,kBAAlBE,GAA8B,aAAcA,GAAiBA,EAAcnC,UAAYmC,EAAcnC,SAAStW,OAAS,IAC9H2D,KAAKkO,kBAAoB4G,EAAcnC,SACvC5G,EAAIzQ,SAAS,6CAA6C0E,KAAKkO,qBAG/DlO,KAAKyM,eAAe4F,YAAYrS,KAAKkO,kBAAmB5C,EAAmB4H,qCAE3ElT,KAAKsO,kBAAkBtO,KAAK8M,OAAO8F,oBAE3C,CAEA5S,KAAK6P,aAAa8E,EAAOA,EAAMzD,SAAW7F,EAAW0J,uBAAuB,GAEpF,MACA/U,KAAK4N,UAAU0E,UAAU6B,OAAOC,KAC5B,EAAIlZ,EAAMI,UAAU,kCAAmC8Y,GACvD3M,EAAO2M,EAAI,IAEfpU,KAAKwM,iBAAkB,CAAI,GAEnC,GACJ,CACAwI,cAAAA,CAAevF,GACX,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YAEpE,GADAA,KAAKoO,oBACApO,KAAKwM,gBAGN,OAFAT,EAAIzQ,SAAS,+CACbiM,IAGJvH,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YACjF+L,EAAIzQ,SAAS,oCACb0E,KAAKwM,iBAAkB,EACvBjF,GACJ,MACA,MAAM7L,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAW4J,0BACnBjE,OAAQ,CACJO,QAAS,CACL9B,MAAOA,EACPyF,IAAK1J,EAAY2J,6CAIvBnV,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAC5D+L,EAAIzQ,SAAS,+BAEjB,KAAII,EACR,KACJ,GACJ,CACA0Z,kBAAAA,CAAmB3F,GACf,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAKoO,mBACL,MAAM1S,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWgK,+BACnBrE,OAAQ,CACJvB,MAAOA,UAGTzP,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACA0W,UAAAA,GACI,OAAOnL,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW8C,GAAc,GAC/D,UACU7S,KAAKgV,eAAehV,KAAKmO,aACnC,CACA,MAAOvE,GACHmC,EAAIoH,SAAS,iCAAkCvJ,EACnD,OACM5J,KAAK4N,UAAUwE,aACrBrG,EAAImB,UAAU,sBAGdlN,KAAKyM,eAAeY,WAAW/B,EAAmBwF,0BAC7C+B,IACD7S,KAAKyM,eAAeY,WAAW/B,EAAmB4H,qCAClDlT,KAAKkO,kBAAoB,IACzB,EAAIhT,EAAMI,UAAU,2DAA2D0E,KAAKkO,qBAE5F,GACJ,CACAoH,qBAAAA,CAAsB7F,EAAO8F,GACzBvV,KAAKsM,aAAakJ,yBAAyB/F,EAAO8F,EACtD,CACAE,WAAAA,CAAYd,EAAOe,EAASC,GACxB3V,KAAK4N,UAAU6H,aAAY,EAAI3J,EAAW2C,mBAAmBkG,IAASC,IAGlE,GAFAA,EAASA,EAAOC,QAAQ,KAAM,KAC9B9I,EAAIzQ,SAAS,oBAAoBsZ,KACX,qBAAXA,GAA0BA,EAAOvY,OAAS,EAAG,CACpD,IAAIuZ,GAAS,EAAI9J,EAAWiD,eAAe6F,GACvCiB,EAAMD,EAAOrE,QACjB,IAAIlW,EAgBJ,OAfIwa,EAAIC,YAAY9M,WAAW,KAC3B3N,EAASwa,GAGLD,EAAOjD,UAAYiD,EAAOjD,SAAStW,OAAS,IAC5C2D,KAAKkO,kBAAoB0H,EAAOjD,SAChC3S,KAAKyM,eAAe4F,YAAYrS,KAAKkO,kBAAmB5C,EAAmB4H,qCAC3EnH,EAAIzQ,SAAS,yCAAyC0E,KAAKkO,qBAC3DnC,EAAIzQ,SAAS,kCAAiC,EAAIqQ,EAAQsD,aAAajP,KAAK8M,OAAOyB,QAAQrF,cAE3FlJ,KAAKsO,kBAAkBtO,KAAK8M,OAAO8F,qBAEvCvX,EAAS2E,KAAK8M,OAAOiJ,QAAQF,EAAK7V,KAAKkO,oBAE3CnC,EAAIzQ,SAAS,oBAAoBD,KAC1BA,CACX,CACgB,GACjBqa,EAASC,GAAOK,GAER,IAAIxO,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAIqR,EAAoBrR,KAAKsM,aAAagF,4BAA4B0E,EAAazE,SACnF,GAAIF,EAAmB,CACnB,IAAIG,EAAY,CACZC,QAASuE,EAAavG,MACtBwB,UAA4B,OAAjB+E,QAA0C,IAAjBA,OAA0B,EAASA,EAAa/E,UACpFS,cAAeL,EACfM,YAA8B,OAAjBqE,QAA0C,IAAjBA,OAA0B,EAASA,EAAarE,aAEtFsE,QAAkBjW,KAAKsM,aAAauF,uBAAuBL,GAC/DjK,EAAQ0O,EACZ,MAEI1O,EAAQ,CACJ2O,gBAAgB,GAG5B,OAER,CACAtC,OAAAA,CAAQiC,GACJ,OAAO5O,EAAUjH,UAAM,OAAQ,GAAQ,YACnC+L,EAAIzQ,SAAS,uBAAuBua,KACpC9J,EAAImB,UAAU,wBACd,IAAIqE,EAAUsE,EACd9J,EAAIzQ,SAAS,gDAAgDiW,EAAQlV,UAErE,IAAIoT,EAAQzP,KAAKyM,eAAeoE,QAAQvF,EAAmBwF,0BAC3D/E,EAAIzQ,SAAS,+BAAyC,OAAVmU,QAA4B,IAAVA,OAAmB,EAASA,EAAMX,WAChG9O,KAAKoO,mBACL,MAAM1S,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBf,OAAQ7F,EAAW8K,uBACnB9B,QAAS7I,EAAY8I,oBACrBtD,OAAQ,CACJO,QAAS,CACL9B,MAAiB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAMX,QAC3DyC,QAASA,EACT2D,IAAK1J,EAAY4K,4BAiB7B,OAbApW,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAE7EuT,GAAOA,EAAI3J,MACXmC,EAAIoH,SAAS,KAAI,IAAInF,MAAOqI,0CAEvB9C,IAAQA,EAAI3J,OACjBmC,EAAIzQ,SAAS,iBAAgB,IAAI0S,MAAOqI,uCAAuCrW,KAAK+N,sBAE5F,YACM/N,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,GACGsE,KAAK+N,SAChB,GACJ,CACAuI,gBAAAA,CAAiBC,EAASC,GACtB,OAAOvP,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWN,EAAOgH,EAAcvB,EAAM1J,EAAY4K,0BACxFpW,KAAKoO,mBACL,MAAM1S,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBf,OAAQ7F,EAAW8K,uBACnB9B,QAAS7I,EAAY8I,oBACrBtD,OAAQ,CACJO,QAAS,CACL9B,MAAOA,EACP8B,QAASkF,EACTvB,IAAKA,KAIjBlV,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAE7EuT,GAAOA,EAAI3J,MACXmC,EAAIoH,SAAS,KAAI,IAAInF,MAAOqI,0CAEvB9C,IAAQA,EAAI3J,OACjBmC,EAAIzQ,SAAS,iBAAgB,IAAI0S,MAAOqI,uCAAuCrW,KAAK+N,sBAE5F,YACM/N,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACAwY,IAAAA,CAAKwC,GACD,OAAOzP,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW8F,EAAKX,EAAM1J,EAAY4K,0BAIxE,GAFArK,EAAIzQ,SAAS,uBAAuBua,KACpC9J,EAAImB,UAAU,qBACTlN,KAAKuP,kBAEN,MAAM,IAAI4C,MAAM,yBAEpB,IAAIZ,EAAUvR,KAAK8M,OAAO6J,QAAQd,EAAK7V,KAAKkO,mBAC5CnC,EAAIzQ,SAAS,gDAAgDiW,EAAQlV,UACrE0P,EAAIuB,YAAYtB,EAASuB,cAAcC,IAAK,WAAY+D,EAAQlV,OAAO4V,YAEvE,IAAIxC,EAAQzP,KAAKyM,eAAeoE,QAAQvF,EAAmBwF,0BA8B3D,OA7BA/E,EAAIzQ,SAAS,+BAAyC,OAAVmU,QAA4B,IAAVA,OAAmB,EAASA,EAAMX,iBAE1F9O,KAAKsM,aAAasK,kBAA4B,OAAVnH,QAA4B,IAAVA,OAAmB,EAASA,EAAMX,QAASyC,EAASvR,KAAKsW,iBAAiBzC,KAAK7T,MAAOA,KAAK4T,QAAQC,KAAK7T,OA2B7JA,KAAK+N,SAChB,GACJ,CACA6C,OAAAA,CAAQiG,EAASC,GACb,OAAO7P,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWgC,EAAO2D,EAASqB,OAAS7T,GAC1E,IAAgB,IAAZwS,EAAkB,CAClB,MAAMha,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrBjZ,QAAQ,SAEN2E,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,MACK,GAAIqb,EAAQ,CACb,MAAMrb,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrB1K,MAAO,CACH4J,KAAMuD,EAAOvD,KACbjC,QAASwF,EAAOxF,gBAGlBvR,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,CACJ,GACJ,CAEAsW,WAAAA,CAAYD,EAAOd,EAAWxB,GAC1B,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMtE,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAW0J,uBACnB/D,OAAQ,CACJ9U,KAAM,CACF+U,UAAWA,EACXxB,MAAOA,WAIbzP,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CAKAgY,2BAAAA,CAA4B3B,EAAOtC,GAC/B,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YAEnCA,KAAKoM,OAAO/K,KAAK0Q,GAAQiF,GAAoB/P,EAAUjH,UAAM,OAAQ,GAAQ,YACzE,IAAI8B,EAAIC,EAER,GAAIiV,EAAgB3b,OAAQ,CACxB,IAAI4b,EAAUD,EAAgB3b,OAAO4b,QACjCC,EAAeF,EAAgB3b,OAAOa,KAC1C,MAAMib,EAAqBH,EAAgB3b,OAAO8b,mBAClD,GAAIA,EACA,IACI,IAAK,IAAIjM,EAAI,EAAGA,EAAIiM,EAAmB9a,OAAQ6O,IAAK,CAChD,MAAMkM,EAAYD,EAAmBjM,GACrC,GAAIkM,EAAU3H,MAAO,EACjB,EAAIvU,EAAMI,UAAU,2BAA4B8b,EAAU3H,aACpDzP,KAAKoV,mBAAmBgC,EAAU3H,OAExC,IAAI4H,GAAoB,EAAIvL,EAAW2C,mBAAmB,CACtD6I,UAAWF,EAAUzF,YAAYM,WACjCf,OAAQ,eAERqG,EAAgB,CAChBtG,UAAWmG,EAAUzF,YAAYM,WACjCV,SAAS,EAAIzF,EAAW2C,mBAAmB,CACvC8C,QAAS8F,IAEb5H,MAAO2H,EAAU3H,MACjBkC,YAAayF,EAAUzF,mBAErB3R,KAAK4N,UAAU4J,yBAAyBD,EAClD,CACJ,CACJ,CACA,MAAO3N,GACHmC,EAAIoH,SAAS,yBAA0BvJ,EAC3C,CAEJ,GAAIsN,EACA,IAAK,IAAIhM,EAAI,EAAGA,EAAIgM,EAAa7a,OAAQ6O,IAAK,CAC1C,IAAI2K,EAAMqB,EAAahM,GACvB,GAAI2K,GAAOA,EAAIpG,OAASA,EAAO,CAC3B,IAAIwB,EAAY4E,EAAI5E,UACpBlF,EAAImB,UAAU,uBAEd,IAAImE,EAAoBrR,KAAKsM,aAAagF,4BAA4BuE,EAAItE,SACtEF,SACMrR,KAAK4N,UAAU4J,yBAAyB3B,GAC9C9J,EAAIzQ,SAAS,wBAGP0E,KAAK4N,UAAU4J,yBAAyB3B,GAE9C7V,KAAKoO,yBACCpO,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAAYhB,EAAWxB,GAErE,CACJ,CAGAwH,IACAjX,KAAKoO,yBACCpO,KAAK0T,4BAA4B1T,KAAK+N,UAAUkE,WAAYxC,GAE1E,MAEI1D,EAAIzQ,SAAS,0BAA2D,QAAhCwG,EAAKkV,EAAgBpN,aAA0B,IAAP9H,OAAgB,EAASA,EAAG0R,UAA2C,QAAhCzR,EAAKiV,EAAgBpN,aAA0B,IAAP7H,OAAgB,EAASA,EAAGwP,UAEnM,MACAxF,EAAIzQ,SAAS,sBACbyQ,EAAImB,UAAU,sBACd,MAAMuK,GAAW,IAAIzJ,MAAO+E,WAC5B,EAAI7X,EAAMI,UAAU,oBAAqBmc,EAAWzX,KAAK8S,SACzD,MAAMpX,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWqM,wBACnB1G,OAAQ,CACJ9U,KAAM,CACFuT,MAAOA,WAIbzP,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACAic,UAAAA,GACI5L,EAAImB,UAAU,iCACdlN,KAAKyM,eAAeY,YACxB,CACAuK,kBAAAA,CAAmBC,EAAK3b,GACfA,GACD8D,KAAKyM,eAAeY,WAAW/B,EAAmBwM,gCAAkCD,GAExF,IAAIE,GAAW,EAAIjM,EAAW2C,mBAAmBvS,GACjD8D,KAAKyM,eAAeiC,gBAAgBqJ,EAAUzM,EAAmBwM,gCAAkCD,EACvG,CACAG,iBAAAA,CAAkBH,GACd,IACI,IAAII,EAAUjY,KAAKyM,eAAeoC,cAAcvD,EAAmBwM,gCAAkCD,GACrG,GAAII,EAAS,CACT,IAAIC,GAAS,EAAIpM,EAAWiD,eAAekJ,GAC3C,OAAOC,CACX,CACJ,CACA,MAAOtO,GACH5J,KAAKyM,eAAeY,WAAW/B,EAAmBwM,gCAAkCD,EACxF,CAEJ,CACAM,yBAAAA,GACI,IAAIC,GAAiB,EACrB,IACI,MAAMC,EAAgBrY,KAAKoN,yBACvBiL,IACAD,GAAiB,EAEzB,CACA,MAAOxO,GACHmC,EAAIoH,SAAS,gCACjB,CACA,OAAOnT,KAAKuP,mBAAqB6I,CACrC,CACAE,kBAAAA,GACI,IAAIF,GAAiB,EACrB,IACI,MAAMC,EAAgBrY,KAAKoN,yBACvBiL,IACAD,GAAiB,EAEzB,CACA,MAAOxO,GACHmC,EAAIoH,SAAS,gCACjB,CACA,OAAOiF,CACX,CAIArE,WAAAA,CAAYtE,GACR,IAAI8I,GAAY,EAChB,GAAoB,GAAhB9I,EAAMpT,OAEN,OADA,EAAInB,EAAMI,UAAU,8BACbid,EAEX,IAAIC,EAAmBxY,KAAKgY,kBAAkB1M,EAAmBmN,yCACjE,GAAID,GAAoBA,EAAiB/I,MAAO,CAC5C,IAAIiJ,EAAYF,EAAiB/I,MAC7BiJ,GAAajJ,EACTzB,KAAKC,MAAQuK,EAAiBG,aAC9B,EAAIzd,EAAMI,UAAU,sCACpBid,GAAY,KAIhB,EAAIrd,EAAMI,UAAU,oCACpBid,GAAY,EAEpB,MAEI,EAAIrd,EAAMI,UAAU,kCACpB0E,KAAKoR,kBAAkB3B,GACvB8I,GAAY,EAEhB,OAAOA,CACX,CACAnH,iBAAAA,CAAkB3B,IACd,EAAIvU,EAAMI,UAAU,kCAAkCmU,KACtD,IAAImJ,EAAiB,CACjBnJ,MAAOA,EACPkJ,UAAW3K,KAAKC,MAAQzC,EAAYqN,+BAExC7Y,KAAK4X,mBAAmBtM,EAAmBmN,wCAAyCG,EACxF,CACA5E,kBAAAA,GACI,OAAO/M,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,IAAIqX,GAAoB,EAAIvL,EAAW2C,mBAAmB,CACtD6I,UAAW,GACXpG,OAAQ,eAERqG,EAAgB,CAChBtG,UAAW,GACXM,SAAS,EAAIzF,EAAW2C,mBAAmB,CACvC8C,QAAS8F,IAEb5H,MAAOzP,KAAKmO,aACZwD,YAAa,SAEX3R,KAAK4N,UAAU4J,yBAAyBD,EAClD,GACJ,EAEJ1c,EAAQsQ,kBAAoBA,C,qCC/3B5B,IAAIvI,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQie,cAAgBje,EAAQke,yBAA2Ble,EAAQme,0BAA4Bne,EAAQoe,mBAAqBpe,EAAQqe,kBAAoBre,EAAQse,QAAUte,EAAQue,cAAgBve,EAAQwe,YAAcxe,EAAQye,eAAiBze,EAAQ0e,qBAAuB1e,EAAQ2e,eAAiB3e,EAAQ4e,kBAAoB5e,EAAQ6e,qBAAuB7e,EAAQ8e,UAAY9e,EAAQ+e,wBAAqB,EACrZ,IAAIC,EAAanf,EAAQ,OACzBC,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWD,kBAAoB,IAClIjf,OAAOC,eAAeC,EAAS,YAAa,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWF,SAAW,IAChHhf,OAAOC,eAAeC,EAAS,uBAAwB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWH,oBAAsB,IACtI/e,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWJ,iBAAmB,IAChI9e,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWL,cAAgB,IAC1H7e,OAAOC,eAAeC,EAAS,uBAAwB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWN,oBAAsB,IACtI5e,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOqW,EAAWP,cAAgB,IAC1H,IAAIQ,EAAWpf,EAAQ,OACvBC,OAAOC,eAAeC,EAAS,cAAe,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsW,EAAST,WAAa,IAClH1e,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsW,EAASV,aAAe,IACtHze,OAAOC,eAAeC,EAAS,UAAW,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsW,EAASX,OAAS,IAC1Gxe,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsW,EAASZ,iBAAmB,IAC9HzV,EAAa/I,EAAQ,OAAUG,GAC/B,IAAIkf,EAAgBrf,EAAQ,OAC5BC,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOuW,EAAcd,kBAAoB,IACrIte,OAAOC,eAAeC,EAAS,4BAA6B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOuW,EAAcf,yBAA2B,IACnJre,OAAOC,eAAeC,EAAS,2BAA4B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOuW,EAAchB,wBAA0B,IACjJpe,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOuW,EAAcjB,aAAe,G,qCCnC/Gpe,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuK,0BAAuB,EAC/B,MAAM4U,EAAWtf,EAAQ,OACnBuf,EAAQvf,EAAQ,OAChB8Q,EAAc9Q,EAAQ,OACtB+Q,EAAkB1L,EAAgBrF,EAAQ,QAC1Cwf,EAAWxf,EAAQ,OACnBwN,EAASxN,EAAQ,OACjByf,EAAezf,EAAQ,OACvB0f,EAAWra,EAAgBrF,EAAQ,QACnC2f,EAAQta,EAAgBrF,EAAQ,QAChC4f,EAAUva,EAAgBrF,EAAQ,QAClC6f,EAAQxa,EAAgBrF,EAAQ,QAChC8f,EAAWza,EAAgBrF,EAAQ,QACnC+f,EAAS1a,EAAgBrF,EAAQ,QACjCiR,EAAUjR,EAAQ,OAClBggB,EAAahgB,EAAQ,OACrBigB,EAAajgB,EAAQ,OACrBkgB,EAAa7a,EAAgBrF,EAAQ,QAC3C,MAAM0K,EACF,WAAOuO,CAAKkH,GACR,OAAO5T,EAAUjH,UAAM,OAAQ,GAAQ,YAKnC,IAAIoI,EAcJ,OAlBA,EAAIF,EAAO5M,UAAU,uCACrB,EAAI4M,EAAOtD,eAAeiW,EAAKhW,eAE/B,EAAI8G,EAAQmP,WAAW,uBAAuB,IAE9C,EAAI5S,EAAO6S,sBAAsBC,qBAAqB,oBAAqB,OAAQH,EAAKhW,aAAa/I,MACjG0B,QAAUA,OAAOyd,6BAA+Bzd,OAAOyd,uCAAuC7V,IAC9F,EAAI8C,EAAO5M,UAAU,yCACrB8M,EAAW5K,OAAOyd,+BAGlB,EAAI/S,EAAO5M,UAAU,yCACrB8M,EAAW,IAAIhD,EAAqByV,GAChCrd,SACAA,OAAOyd,4BAA8B7S,SAEnCA,EAAS8S,cAEZ9S,CACX,GACJ,CACAD,WAAAA,CAAY0S,GACR7a,KAAKmb,aAAe,CAAC,EACrBnb,KAAKoM,OAAS,IAAIX,EAAgBvJ,QAC7B2Y,EAAKjN,WAAsC,GAAzBiN,EAAKjN,UAAUvR,SAClCwe,EAAKjN,UAAY,CAAC,IAAI1F,EAAO9D,mBAAsB,IAAI8D,EAAOhE,oBAElElE,KAAKob,aAAeP,EACpB7a,KAAKqb,oBAAoBrb,KAAKob,eAC9B,EAAIlT,EAAO5M,UAAU,kCAAmCC,KAAKC,UAAUwE,KAAKob,eAC5E,IAAIE,EAAWpT,EAAOqT,gBAAgBC,cACtC,OAAQX,EAAKY,iBACT,IAAK,gBACDH,EAAWpT,EAAOqT,gBAAgBC,cAClC,MACJ,IAAK,WACDF,EAAWpT,EAAOqT,gBAAgBG,SAClC,MACJ,QACIJ,EAAWpT,EAAOqT,gBAAgBC,cAClC,MAERxb,KAAKob,aAAaK,gBAAkBH,GACpC,EAAIpT,EAAO5M,UAAU,+CAAgDggB,EACzE,CACAD,mBAAAA,CAAoBR,GAChB,IAAIc,EAAOne,OAAOyB,SAAS0c,KAC3B,GAAIA,EAAM,CACN,IAAIC,EAAYD,EAAKxc,SAAS,kBAAoBwc,EAAKxc,SAAS,oBAC5Dyc,IAAcf,EAAKY,mBACnB,EAAIvT,EAAO5M,UAAU,mCAAiCqgB,GACtDd,EAAKY,gBAAkBvT,EAAOqT,gBAAgBG,SAEtD,CACJ,CACAG,kBAAAA,GACI,IAAI/Z,EACJ,OAAoD,QAA5CA,EAAK9B,KAAKob,aAAaK,uBAAoC,IAAP3Z,EAAgBA,EAAKoG,EAAOqT,gBAAgBC,aAC5G,CACA/R,OAAAA,CAAQ3J,EAAM3C,GACV,OAAO8J,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,0CACrB,EAAI4M,EAAOgF,WAAW,0CACjBlN,KAAK8b,YACN,MAAM,IAAI5T,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,sBAEpE,EAAI7T,EAAO5M,UAAU,8CACrB,MAAM,UAAEW,EAAS,aAAE+f,GAAiBhc,KAAKic,6BAA6Bnc,EAAM3C,GAC5E,aAAa6C,KAAKkc,YAAYjgB,GAAWwN,QAAQuS,EACrD,GACJ,CACAC,4BAAAA,CAA6Bnc,EAAM3C,GAC/B,IAAI2E,GACJ,EAAIoG,EAAO5M,UAAU,2CAA4C6B,GAAO,EAAI+K,EAAOuG,mBAAmB3O,IACtG,IAAK7D,EAAWsM,GAAWvI,KAAKmc,cAAchf,GAC9C,IAAK6C,KAAK6I,QACN,MAAM,IAAIX,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,0CAEnF,IAAIC,EAAS1hB,OAAO2hB,KAAKtc,KAAK6I,QAAQC,YACtC,IAAK3L,GAASkf,GAAUA,EAAOhgB,OAAS,EACpC,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,uEAEzF,IAAIQ,GAAY,EAAIrU,EAAOsU,2BAA2B,GAAGvgB,KAAasM,KACrD,MAAbgU,IACAtgB,EAAYsgB,EAAUrf,MAAM,KAAK,GACjCqL,EAAUgU,EAAUrf,MAAM,KAAK,IAUnC,MAAM8e,EAAerhB,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAG3c,GAAO,CAAEyI,QAAS,GAAGtM,KAAasM,IAAWmU,SAAmC,QAAxB5a,EAAKhC,EAAK4c,gBAA6B,IAAP5a,EAAgBA,EAAK9B,KAAK2c,cAAcD,WACrL,MAAO,CAAEzgB,YAAW+f,eACxB,CACAY,MAAAA,GACI,OAAO3V,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAK6c,OACN,MAAM,IAAI3U,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,+BAEnF,IAAKpc,KAAK6I,QAAS,CACf,IAAI7I,KAAK8c,YAIL,MAAM,IAAI5U,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,qCAHzEpc,KAAKsS,QAAQtS,KAAK8c,YAKhC,CACA,MAAM/gB,QAAiBiE,KAAK+c,kBAC5B,OAAOhhB,CACX,GACJ,CACAqW,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,6CACrB,EAAI4M,EAAOgF,WAAW,+BACjBlN,KAAK6I,QACN,MAAM,IAAIX,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,qBAEpE,OAAO,IAAIvU,SAASD,GAAYN,EAAUjH,UAAM,OAAQ,GAAQ,YAC5D,IAAIgd,GAAS,EACb,MAAMC,EAAgBA,IAAMhW,EAAUjH,UAAM,OAAQ,GAAQ,YACnDgd,IACDA,GAAS,QACHhd,KAAKkd,0BACLld,KAAKmd,UACX5V,KACA,EAAIW,EAAO5M,UAAU,8CACrB,EAAI4M,EAAOgF,WAAW,oCAE9B,IACA,UACUlN,KAAK6c,OAAOzK,mBACZ6K,GACV,CACA,MAAOpV,SACGoV,GACV,CACJ,KACJ,GACJ,CACAC,iBAAAA,GACI,IAAIpb,EAAIC,EACR/B,KAAK6c,OAAOO,OAAOC,2BACnBrd,KAAKoM,OAAOsE,KAAK,aAAc,CAAEjB,MAA+B,QAAvB3N,EAAK9B,KAAK6I,eAA4B,IAAP/G,OAAgB,EAASA,EAAG2N,QACpGzP,KAAKoM,OAAOsE,KAAK,iBAAkB,CAAEjB,MAA+B,QAAvB1N,EAAK/B,KAAK6I,eAA4B,IAAP9G,OAAgB,EAASA,EAAG0N,OAC5G,CACA6N,gBAAAA,CAAiBzC,EAAM0C,GACnB,IAAIzb,EAAIC,EACR,IAAIyb,EAA4C,QAA1B1b,EAAK+Y,EAAK/R,kBAA+B,IAAPhH,OAAgB,EAASA,EAAGyb,GACpF,QAAsBra,GAAlBsa,EAA6B,CAC7B,IAAIC,EAASzd,KAAK0d,sBAAsBF,QACjBta,GAAnB2X,EAAK/R,YAA2ByU,KAAa1C,EAAK/R,iBAAwB5F,GAAVua,IAChE5C,EAAK/R,WAAWyU,GAAaE,EAErC,CACA,IAAIE,EAA0D,QAAlC5b,EAAK8Y,EAAK+C,0BAAuC,IAAP7b,OAAgB,EAASA,EAAGwb,GAClG,QAA4Bra,GAAxBya,EAAmC,CACnC,IAAIE,EAAe7d,KAAK0d,sBAAsBC,QACfza,GAA3B2X,EAAK+C,oBAAmCL,KAAa1C,EAAK+C,yBAAsC1a,GAAhB2a,IAChFhD,EAAK+C,mBAAmBL,GAAaM,EAE7C,CACA,OAAOhD,CACX,CACA6C,qBAAAA,CAAsBF,GAClB,IAAI1b,EASJ,YARsBoB,GAAlBsa,IACAA,EAAezgB,OAA0C,QAAhC+E,EAAK0b,EAAezgB,cAA2B,IAAP+E,OAAgB,EAASA,EAAGgc,KAAIvV,IACtF,EAAIL,EAAOsU,2BAA2BjU,UAEdrF,GAA/Bsa,EAAeO,eACfP,EAAeO,cAAe,EAAI7V,EAAOsU,2BAA2BgB,EAAeO,gBAGpFP,CACX,CACAQ,mBAAAA,CAAoBnV,EAAS5M,GACzB,IAAI6F,EACJ,IAAIgH,EAA6F,QAA/EhH,EAAiB,OAAZ+G,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,kBAA+B,IAAPhH,OAAgB,EAASA,EAAG7F,GACrI,QAAkBiH,GAAd4F,QAAgD5F,GAArB4F,EAAW/L,OAAqB,CAC3D+L,EAAW/L,OAAS+L,EAAW/L,OAAO+gB,KAAI3gB,IAC/B,EAAI+K,EAAO+V,2BAA2B9gB,KAEjD2L,EAAW/M,SAAW+M,EAAW/M,SAAS+hB,KAAKlV,IACpC,EAAIV,EAAO+V,2BAA2BrV,KAEjD,IAAI/L,EAAQ,CAAC,EACblC,OAAO2hB,KAAKxT,EAAWjM,OAAS,CAAC,GAAGC,SAAQ,CAAC+a,EAAKqG,MACjC,EAAIhW,EAAO+V,2BAA2BpG,GACnDhb,GAAM,EAAIqL,EAAO+V,2BAA2BpG,IAAQld,OAAOgM,QAAoB,OAAZkC,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,WAAW7M,GAAWY,QAAU,CAAC,GAAGqhB,EAAM,IAE3KpV,EAAWjM,MAAQA,CACvB,EACA,EAAIqL,EAAO5M,UAAU,sBAAuBuN,EAChD,CACAiT,SAAAA,IACI,EAAI5T,EAAO5M,UAAU,4CACrB,EAAI4M,EAAOgF,WAAW,6BACtB,IAAIiR,EAAkBA,KAClB,IACIne,KAAKmd,UACLnd,KAAK6c,OAAOO,OAAOC,0BACvB,CACA,MAAOxV,IACH,EAAIK,EAAO5M,UAAU,2BAA4BuM,EACrD,GAEJ,IACI,QAAK7H,KAAK6I,YAEL7I,KAAK6c,OAAOO,OAAOjF,0BAA0Bxd,OAAO2hB,KAAKtc,KAAK6I,QAAQC,eACvEqV,KACO,GAGf,CACA,MAAOtW,GAEH,OADAsW,KACO,CACX,CACJ,CACAC,cAAAA,CAAevD,EAAMwD,GACjB,OAAOpX,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAIkI,EAAO5M,UAAU,gDACrB,MAAMgjB,EAAc3jB,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAG5B,GAAOwD,GAG3D,OAFA,EAAInW,EAAO5M,UAAU,8CAA+CC,KAAKC,UAAUqf,KACnF,EAAI3S,EAAO5M,UAAU,qDAAsDC,KAAKC,UAAU6iB,UAC7Ere,KAAKsS,QAAQgM,EAC9B,GACJ,CACAhM,OAAAA,CAAQuI,GACJ,OAAO5T,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,0CACrB,EAAI4M,EAAOgF,WAAW,4BACjBlN,KAAK6c,OACN,MAAM,IAAI3U,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,+BAEnF,GAAIpc,KAAK8b,YACL,OAAO9b,KAAK6I,QAEhBgS,EAAO7a,KAAKsd,iBAAiBzC,EAAM,SACnCA,EAAO7a,KAAKsd,iBAAiBzC,EAAM,WACnC,EAAI3S,EAAO5M,UAAU,oCAAqCC,KAAKC,UAAUqf,SAC9C3X,IAAvB2X,EAAK8B,gBACL9B,EAAK8B,cAAgB,CAAC,QAEkBzZ,IAAxC2X,EAAK8B,cAAc4B,mBACnB1D,EAAK8B,cAAc4B,kBAAmB,EAAIrW,EAAO5H,sBAErDua,EAAK8B,cAAclB,gBAAkBzb,KAAKob,aAAaK,gBACvDzb,KAAKwe,cAAc3D,GACnB,KACI,EAAI3S,EAAO5M,UAAU,kDAAkDC,KAAKC,UAAUqf,MAEtF,IAAIhS,QAAgB7I,KAAK6c,OAAOvK,QAAQuI,GAExC,IADA,EAAI3S,EAAO5M,UAAU,2CAA2CC,KAAKC,UAAUqN,MAC3EA,EAAS,CAQT,GAPA7I,KAAKge,oBAAoBnV,EAAS,SAClC7I,KAAKge,oBAAoBnV,EAAS,UAClC7I,KAAK6I,QAAUA,EACf7I,KAAK6c,OAAOhU,QAAUA,EACtB7I,KAAKye,uBACL,EAAIvW,EAAO5M,UAAU,gDAAiDC,KAAKC,UAAUqf,IACrF7a,KAAK0e,YACD7D,EAAKwD,aAAexD,EAAKwD,YAAYhiB,OAAS,EAAG,CACjD,IAAIsiB,EAAc9D,EAAKwD,YAAY,GAC/BO,EAAmB,GACD,qBAAXphB,QAA0BA,QAAUA,OAAOqhB,gCAClD,EAAI3W,EAAO5M,UAAU,uDACjB0E,KAAK6I,QAAQiW,cAAgB9e,KAAK6I,QAAQiW,aAAaziB,OAAS,IAChEuiB,EAAmB5e,KAAK6I,QAAQiW,iBAIpC,EAAI5W,EAAO5M,UAAU,8DACjB0E,KAAK6I,QAAQiW,cAAgB9e,KAAK6I,QAAQiW,aAAaziB,OAAS,EAChEuiB,EAAmB5e,KAAK6I,QAAQiW,aAGhCF,EAAiBtiB,MAAK,EAAIoe,EAAWqE,iCAAiCJ,MAG9E,EAAIzW,EAAO5M,UAAU,+DAA+DC,KAAKC,UAAUojB,MACnG1d,YAAW,KACPlB,KAAKoM,OAAOsE,KAAK,uBAAwBkO,EAAiB,GAC3D,IACP,CACA,OAAO/V,CACX,CACA,MACJ,CACA,MAAOe,GAEH,MADA,EAAI1B,EAAO5M,UAAU,yCAA0CC,KAAKC,UAAUoO,IACxEA,CACV,CACJ,GACJ,CACAoV,gBAAAA,GACI,OAAO/X,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI,EAAI2a,EAAWsE,sBAAsBjf,KAAK6I,QAAQqW,QAClD,OAAOlf,KAAK6c,OAAOsC,iBAGnB,MAAM,IAAIjX,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAExE,GACJ,CACAX,mBAAAA,GACI,IAAI3c,EACJ9B,KAAK6c,OAAO4B,oBAA4C,QAAvB3c,EAAK9B,KAAK6I,eAA4B,IAAP/G,OAAgB,EAASA,EAAGod,OAChG,CACAG,EAAAA,CAAG1K,EAAO2K,GACNtf,KAAKoM,OAAOiT,GAAG1K,EAAO2K,EAC1B,CACAje,IAAAA,CAAKsT,EAAO2K,GACRtf,KAAKoM,OAAO/K,KAAKsT,EAAO2K,EAC5B,CACAC,cAAAA,CAAe5K,EAAO2K,GAClBtf,KAAKoM,OAAOmT,eAAe5K,EAAO2K,EACtC,CACAE,GAAAA,CAAI7K,EAAO2K,GACPtf,KAAKoM,OAAOoT,IAAI7K,EAAO2K,EAC3B,CACAG,eAAAA,CAAgBtiB,EAAOuiB,IACnB,EAAIxX,EAAO5M,UAAU,iDAErB,IAEI,IAAK0E,KAAK8b,YACN,OACJ,MAAO7f,EAAWsM,GAAWvI,KAAKmc,cAAchf,GAC1CiL,EAAWpI,KAAKkc,YAAYjgB,GAClCmM,EAASqX,gBAAgBlX,EAASmX,EACtC,CACA,MAAO9V,GAEH,IAAK,sBAAsBnI,KAAKmI,EAAM2H,SAClC,MAAM3H,CACd,CACJ,CACA+V,cAAAA,GACI,OAAO1Y,EAAUjH,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK4f,cACf,GACJ,CACAA,YAAAA,GACI,OAAO3Y,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAK8b,YACL,OACJ,IAAI+D,QAAuB7f,KAAK8f,aAAa,kBAE7C,IADA,EAAI5X,EAAO5M,UAAUukB,GACjBA,EAAgB,EAChB,EAAI3X,EAAO5M,UAAU,4BACrB,IACI,IAAIykB,EAAcF,EAKlB,GAJA7f,KAAK6I,QAAUkX,EACf/f,KAAK6c,OAAOhU,QAAU7I,KAAK6I,QAC3B7I,KAAKye,4BACCze,KAAK6c,OAAOmD,eAAeD,IAC5B/f,KAAK8b,YACN,MAAM,IAAI5T,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,qBAEpE/b,KAAK2c,cAAgBoD,EAAYpD,cACjC3c,KAAK6c,OAAOF,cAAgB3c,KAAK2c,eACjC,EAAIzU,EAAO5M,UAAU,mCAAoC0E,KAAK6I,SAC9D7I,KAAKigB,kBACLjgB,KAAKkgB,yBACLhf,YAAW,KACPlB,KAAKoM,OAAOsE,KAAK,YAAa,CAAE7H,QAAS7I,KAAK6I,SAAU,GACzD,IACP,CACA,MAAOhB,SAEG7H,KAAKmd,SAAQ,IACnB,EAAIjV,EAAO5M,UAAU,sBAAsBC,KAAKC,UAAUqM,KAC9D,CACJ,CACJ,GACJ,CACAqT,UAAAA,GACI,OAAOjU,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAIkI,EAAO5M,UAAU,6CACrB,EAAI4M,EAAOgF,WAAW,8BACtB,MAAMhR,EAAOvB,OAAO8hB,OAAO,CAAE5e,IAAKL,OAAOyB,SAASC,SAAUihB,OAAQ3iB,OAAOyB,SAASkhB,QAAUngB,KAAKob,aAAavW,cAChH7E,KAAK6c,OAAS,IAAI3C,EAASkG,WAAWlkB,EAAM8D,KAAKoM,OAAQpM,KAAKob,aAAaK,iBAC3Ezb,KAAKqgB,kBAAkBrgB,KAAKob,aAAaxN,iBACnC5N,KAAK2f,gBACf,GACJ,CACAM,eAAAA,GACI,IAAKjgB,KAAK6c,OACN,MAAM,IAAI3U,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,+BAEnF,IAAKpc,KAAK8b,YACN,MAAM,IAAI5T,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,kEAEnF,MAAMkE,EAAoB,IACnB,IAAIC,IAAI5lB,OAAO2hB,KAAKtc,KAAK6I,QAAQC,YAC/B5K,QAAQjC,IAAgB,IAAI6F,EAAIC,EAAI,OAA8G,QAArGA,EAAmD,QAA7CD,EAAK9B,KAAK6I,QAAQC,WAAW7M,UAA+B,IAAP6F,OAAgB,EAASA,EAAG/F,gBAA6B,IAAPgG,OAAgB,EAASA,EAAG1F,QAAU,CAAC,IACjMyhB,KAAK7hB,IAAc,EAAIke,EAAaqG,mBAAmBvkB,OAEhE+D,KAAKmb,aAAe,CAAC,EACrBmF,EAAkBxjB,SAASb,IACvB,IAAK+D,KAAK6I,QACN,OACJ,MAAM4X,EAAkBzgB,KAAK6I,QAAQC,WAC/B4X,EAAmBD,EAAgBxkB,GAEzC,QADA,EAAIiM,EAAO5M,UAAU,kBAAmBolB,GAChCzkB,GACJ,IAAK,SACD,MAAM4e,EAAO,CACT5e,UAAWykB,GAEf1gB,KAAKmb,aAAalf,GAAa,IAAI+d,EAAS2G,eAAe9F,EAAM7a,KAAK6c,OAAQ7c,KAAKoM,QACnF,MACJ,IAAK,SACD,MAAMwU,EAAQ,CACV3kB,UAAWykB,GAEf,IAAIG,EAAiB,IAAIzG,EAASlY,QAAQ0e,EAAO,SAAU5gB,KAAK6c,OAAQ7c,KAAKoM,QAC7EpM,KAAKmb,aAAalf,GAAa4kB,EAC/B,IAAIC,EAAgB,IAAI1G,EAASlY,QAAQ0e,EAAO,QAAS5gB,KAAK6c,OAAQ7c,KAAKoM,QAC3EpM,KAAKmb,aAAa,SAAW2F,EAC7B,IAAIC,EAAc,IAAI3G,EAASlY,QAAQ0e,EAAO,MAAO5gB,KAAK6c,OAAQ7c,KAAKoM,QACvEpM,KAAKmb,aAAa,OAAS4F,EAC3B,IAAIC,EAAe,IAAI5G,EAASlY,QAAQ0e,EAAO,OAAQ5gB,KAAK6c,OAAQ7c,KAAKoM,QACzEpM,KAAKmb,aAAa,QAAU6F,EAC5B,IAAIC,EAAkB,IAAI7G,EAASlY,QAAQ0e,EAAO,UAAW5gB,KAAK6c,OAAQ7c,KAAKoM,QAC/EpM,KAAKmb,aAAa,WAAa8F,EAE/B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZjlB,UAAWykB,GAEf,IAAIS,EAAc,IAAI5G,EAAMrY,QAAQgf,EAASlhB,KAAK6c,OAAQ7c,KAAKoM,QAC/DpM,KAAKmb,aAAalf,GAAaklB,EAC/B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZnlB,UAAWykB,GAEf,IAAIW,EAAc,IAAIpH,EAAMqH,YAAYF,EAASphB,KAAK6c,OAAQ7c,KAAKoM,QACnEiV,EAAYvlB,KAAO,MACnBkE,KAAKmb,aAAalf,GAAaolB,EAC/B,MACJ,IAAK,MACD,MAAME,EAAU,CACZtlB,UAAWykB,GAEf,IAAIc,EAAc,IAAInH,EAAMnY,QAAQqf,EAAS,MAAOvhB,KAAK6c,OAAQ7c,KAAKoM,QACtEpM,KAAKmb,aAAa,OAASqG,EAC3B,IAAIC,EAAa,IAAIpH,EAAMnY,QAAQqf,EAAS,UAAWvhB,KAAK6c,OAAQ7c,KAAKoM,QACzEpM,KAAKmb,aAAa,WAAasG,EAC/B,MACJ,IAAK,QACD,IAAIC,EAAgB,IAAIpH,EAAQpY,QAAQ,CACpCjG,UAAWykB,GACZ,QAAS1gB,KAAK6c,OAAQ7c,KAAKoM,QAC9BpM,KAAKmb,aAAalf,GAAaylB,EAC/B,IAAIC,EAAe,IAAIrH,EAAQpY,QAAQ,CACnCjG,UAAWykB,GACZ,WAAY1gB,KAAK6c,OAAQ7c,KAAKoM,QACjCpM,KAAKmb,aAAa,YAAcwG,EAChC,MACJ,IAAK,SACD,IAAIC,EAAiB,IAAIpH,EAAStY,QAAQ,CACtCjG,UAAWykB,GACZ1gB,KAAK6c,OAAQ7c,KAAKoM,QACrBpM,KAAKmb,aAAalf,GAAa2lB,EAC/B,MACJ,IAAK,OACD,IAAIC,EAAe,IAAIpH,EAAOvY,QAAQ,CAClCjG,UAAWykB,GACZ1gB,KAAK6c,OAAQ7c,KAAKoM,QACrBpM,KAAKmb,aAAalf,GAAa4lB,EAC/B,MACJ,IAAK,WACD,IAAIC,EAAmB,IAAIlH,EAAW1Y,QAAQ,CAC1CjG,UAAWykB,GACZ,WAAY1gB,KAAK6c,OAAQ7c,KAAKoM,QACjCpM,KAAKmb,aAAalf,GAAa6lB,EAC/B,MACR,GAER,CACA5B,sBAAAA,GACI,GAA2B,qBAAhBlgB,KAAK6c,OACZ,MAAM,IAAI3U,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,kCAEnFpc,KAAK6c,OAAOO,OAAO2E,uBAAsB,KACrC/hB,KAAKkd,oBACLld,KAAKmd,SAAS,IAElBnd,KAAKqf,GAAG7T,EAAYwW,gBAAgBC,uBAAwBC,IACxDliB,KAAKmiB,eAAeD,EAAa,IAErCliB,KAAKqf,GAAG7T,EAAYwW,gBAAgBI,mBAAoBC,IACpD,GAAIA,EAAY,CACZ,MAAMC,EAAe3nB,OAAO2hB,KAAK+F,GAAY,GACzCriB,KAAK6I,UACL7I,KAAK6I,QAAQC,WAAWwZ,GAAgBD,EAAWC,GAC/CtiB,KAAK6I,UACL7I,KAAKuiB,QAAQ,iBAAkBviB,KAAK6I,SACpC7I,KAAKoM,OAAOsE,KAAK,iBAAkB1Q,KAAK6I,WAE5C,EAAIX,EAAO5M,UAAU,yDAA0DC,KAAKC,UAAUwE,KAAK6I,UAE3G,IAER,CACAqT,WAAAA,CAAYjgB,GAGR,OAFA,EAAIiM,EAAO5M,UAAU,wBAAyB0E,KAAKmb,eACnD,EAAIjT,EAAO5M,UAAU,oBAAqBW,GACnC+D,KAAKmb,aAAalf,EAC7B,CACAuiB,aAAAA,CAAcxN,GACVhR,KAAK8c,YAAc9L,EACnB,MAAM,WAAElI,EAAU,cAAE6T,GAAkB3L,EAChC9U,EAAO,CACTikB,OAAQ3iB,OAAOyB,SAASkhB,OACxBtiB,IAAKL,OAAOyB,SAASC,SACrBpD,KAAMkE,KAAKob,aAAavW,aAAa/I,KACrC0mB,KAAMxiB,KAAKob,aAAavW,aAAa2d,KACrCC,YAAaziB,KAAKob,aAAavW,aAAa4d,aAEhDziB,KAAK2c,cAAgBhiB,OAAO8hB,OAAO,CAAEiG,SAAUxmB,GAAQygB,IACvD,EAAIzU,EAAO5M,UAAU,iCAAkC0E,KAAK2c,eAC5D3c,KAAK6c,OAAOF,cAAgB3c,KAAK2c,cACjC3c,KAAKuiB,QAAQ,gBAAiB5F,EAClC,CACAR,aAAAA,CAAchf,GACV,IAAI2E,EACJ,IAAK7F,EAAWsM,IAAsB,OAAVpL,QAA4B,IAAVA,OAAmB,EAASA,EAAMD,MAAM,OAAS,CAAC,GAAI,IACpG,IAAK8C,KAAK6I,UAAY7I,KAAK6I,QAAQC,aAAenO,OAAO2hB,KAAKtc,KAAK6I,QAAQC,YAAYzM,OAEnF,OADA,EAAI6L,EAAO5M,UAAU,mBAAoBW,EAAWsM,GAC7C,CAACtM,EAAWsM,GAEvB,GAAItM,EAAW,CACX,IAAK+D,KAAK2iB,0BAA0B1mB,GAChC,MAAM,IAAIiM,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,cAAc9f,4EAEvG,GAAIsM,GAAWpL,EAAO,EAClB,EAAI+K,EAAO5M,UAAU,mCAAiCW,EAAWV,KAAKC,UAAUwE,KAAK6I,QAAQC,aAC7F,MAAM8Z,EAA0D,QAA7C9gB,EAAK9B,KAAK6I,QAAQC,WAAW7M,UAA+B,IAAP6F,OAAgB,EAASA,EAAG/E,OAEpG,IADA,EAAImL,EAAO5M,UAAU,wBAAyBC,KAAKC,UAAUonB,GAAYzlB,GACrEylB,IAAcA,EAAUzjB,SAAShC,GACjC,MAAM,IAAI+K,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,oCAAoC5e,KAEjI,CACJ,CACA,GAAIlB,GAAasM,EAEb,OADA,EAAIL,EAAO5M,UAAU,mBAAoBW,EAAWsM,GAC7C,CAACtM,EAAWsM,GAEvB,IAAIsa,GAAmB,EAAI1I,EAAaqG,mBAAmB7lB,OAAO2hB,KAAKtc,KAAK6I,QAAQC,YAAY,IAChG,MAAMiV,EAAe/d,KAAKmb,aAAa0H,GAAkBC,kBAEzD,OADA,EAAI5a,EAAO5M,UAAU,qBAAsByiB,GACpC,CAAC8E,EAAkB9E,EAC9B,CACA4E,yBAAAA,CAA0BI,GACtB,IAAIjhB,EAAIC,EACR,GAAIpH,OAAO2hB,MAA8B,QAAvBxa,EAAK9B,KAAK6I,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,aAAe,CAAC,GACxFgV,KAAKjG,IAAQ,EAAIsC,EAAaqG,mBAAmB3I,KACjD1Y,SAAS4jB,GACV,OAAO,EAEX,IAAIJ,GAA4B,EAShC,OARAhoB,OAAOgM,QAAgC,QAAvB5E,EAAK/B,KAAK6I,eAA4B,IAAP9G,OAAgB,EAASA,EAAG+G,aAAe,CAAC,GACtFhM,SAAQb,IACTA,EAAUc,OAAOD,SAAQK,IACjBA,EAAMD,MAAM,KAAK,IAAM6lB,IACvBJ,GAA4B,EAChC,GACF,IAECA,CACX,CACAK,4BAAAA,CAA6B/mB,GACzB,OAAO+D,KAAKkc,YAAYjgB,GAAW8gB,iBACvC,CACAkG,gCAAAA,CAAiChnB,GAC7B,OAAO+D,KAAKkc,YAAYjgB,GAAW6mB,iBACvC,CACA/F,eAAAA,GACI,OAAO9V,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAO/D,GAAa+D,KAAKmc,gBACzB,aAAanc,KAAKkc,YAAYjgB,GAAW8gB,iBAC7C,GACJ,CACAoF,cAAAA,CAAee,GACX,IAAIphB,EACJ,KAA8B,QAAvBA,EAAK9B,KAAK6I,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,YAC9D,OACJ,MAAO7M,EAAWsM,GAAWvI,KAAKmc,cAAc+G,GAC3C3a,IAEDvI,KAAK6I,QAAQC,WAAW7M,KACxB+D,KAAK6I,QAAQC,WAAW7M,GAAW8hB,aAAexV,EAClDvI,KAAKuiB,QAAQ,iBAAkBviB,KAAK6I,UAExC7I,KAAKoM,OAAOsE,KAAK,eAAgBnI,GACrC,CACAmW,SAAAA,GACI1e,KAAKigB,kBACDjgB,KAAK6I,UACL7I,KAAKuiB,QAAQ,iBAAkBviB,KAAK6I,SACpCsa,QAAQpX,IAAI,iCAAkCiC,KAAKC,QAEvDjO,KAAKoM,OAAOsE,KAAK,UAAW,CAAE7H,QAAS7I,KAAK6I,UAC5C7I,KAAKkgB,wBACT,CACA/C,OAAAA,GACI,OAAOlW,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWqT,GAAe,GAChEpjB,KAAK6I,aAAU3F,EACflD,KAAK6c,OAAOhU,aAAU3F,EACtBlD,KAAKye,sBACLze,KAAKqjB,uBAAoBngB,EACzBlD,KAAKuiB,QAAQ,0BAAsBrf,GACnClD,KAAKuiB,QAAQ,yBAAqBrf,GAC9BkgB,GACApjB,KAAKuiB,QAAQ,sBAAkBrf,EAEvC,GACJ,CACAqf,OAAAA,CAAQ1K,EAAK3b,GAET,OADA,EAAIgM,EAAO5M,UAAU,iCAAkCuc,EAAK3b,GACrD8D,KAAK6c,OAAOO,OAAOxF,mBAAmBC,EAAK3b,EACtD,CACA4jB,YAAAA,CAAajI,GACT,OAAO5Q,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK6c,OAAOO,OAAOpF,kBAAkBH,EAChD,GACJ,CACAyL,gBAAAA,CAAiBxjB,EAAM3C,GACnB,IACI,MAAM,UAAElB,EAAS,aAAE+f,GAAiBhc,KAAKic,6BAA6Bnc,EAAM3C,GAC5E,OAAO6C,KAAKkc,YAAYjgB,GAAWqnB,iBAAiBtH,EACxD,CACA,MAAOnU,GACH,OAAO,CACX,CACJ,CACA0b,UAAAA,CAAWC,EAAmB5V,GAC1B5N,KAAK6c,OAAO0G,WAAWC,EAAmB5V,EAC9C,CACAyS,iBAAAA,CAAkBoD,GACdzjB,KAAK6c,OAAOwD,kBAAkBoD,GAC9BzjB,KAAK6c,OAAO6G,0BAAyB7a,KACjC,EAAIX,EAAO5M,UAAU,iCAAkC0E,KAAKoM,OAAOuX,cAAc,kBAAmBpoB,KAAKC,UAAUqN,IACnH,IACQA,GAAW7I,KAAKoM,OAAOuX,cAAc,oBACrC3jB,KAAKge,oBAAoBnV,EAAS,SAClC7I,KAAKge,oBAAoBnV,EAAS,UAClC7I,KAAK6I,QAAUA,EACf7I,KAAK6c,OAAOhU,QAAUA,EAClB7I,KAAK6I,UACL7I,KAAKuiB,QAAQ,iBAAkBviB,KAAK6I,SACpCsa,QAAQpX,IAAI,iCAAkCiC,KAAKC,QAEvDjO,KAAKye,sBACLze,KAAKigB,kBACLjgB,KAAKoM,OAAOsE,KAAK,iBAAkB1Q,KAAK6I,SAEhD,CACA,MAAOe,IACH,EAAI1B,EAAO5M,UAAU,kCAAmCC,KAAKC,UAAUoO,GAC3E,IAER,CACAga,SAAAA,GACI,OAAO5jB,KAAK6c,OAAOO,MACvB,EAEJviB,EAAQuK,qBAAuBA,EAC/BvK,EAAAA,WAAkBuK,C,qCCzsBlBzK,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgpB,4BAAyB,EACjC,MAAMpY,EAAkB/Q,EAAQ,OAChC,MAAMmpB,UAA+BpY,EAAgBY,aACjD,aAAIyP,GACA,QAAS9b,KAAK8jB,cAAc5a,SAChC,EAEJrO,EAAQgpB,uBAAyBA,C,2ECTrBnpB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkpB,UAAYA,EACpBlpB,EAAQmpB,WAAaA,EACrBnpB,EAAQopB,qBAAuBA,EAC/BppB,EAAQqpB,uBAAyBA,EACjCrpB,EAAQspB,aAAeA,EACvBtpB,EAAQupB,YAAcA,EACtBvpB,EAAQokB,qBAAuBA,EAC/BpkB,EAAQwpB,yBAA2BA,EACnC,MAAMnc,EAASxN,EAAQ,OACvB,SAASqpB,EAAUxb,EAAS+b,EAAKC,GAC7B,IAAIziB,EACJ,MAAM3E,EAAQgnB,EAAa5b,GAE3B,OAA+B,QAArBzG,EAAKwiB,EAAIE,cAA2B,IAAP1iB,OAAgB,EAASA,EAAG3E,EAAMsnB,aACrE,EACR,CACA,SAAST,EAAW7mB,GAChB,OAAOA,EAAMgC,SAAS,KAAOhC,EAAMD,MAAM,KAAK,GAAKC,CACvD,CACA,SAAS8mB,EAAqBrb,GAC1B,IAAKA,EACD,MAAO,GAEX,IACI,IAAI3L,EAAa2L,EAAQ1L,MAAM,KAAKE,MAAM,GACtChB,EAAUa,EAAWZ,OAAS,EAAIY,EAAWI,KAAK,KAAO,GAE7D,OADA,EAAI6K,EAAO5M,UAAU,4CAA6Cc,EAASwM,GACpExM,CACX,CACA,MAAOyL,GAEH,OADA,EAAIK,EAAOiL,UAAU,8BAA+BvK,GAC7C,EACX,CACJ,CA8FA,SAASsb,EAAuB3b,GAC5B,MAAuB,kBAAZA,EACAA,EACPA,EAAQpJ,SAAS,MACVulB,SAASnc,EAAS,KAE7BA,EAAUA,EAAQpJ,SAAS,KAAOoJ,EAAQrL,MAAM,KAAK,GAAKqL,EACnDoc,MAAMC,OAAOrc,IAAYA,EAAUqc,OAAOrc,GACrD,CACA,MAAMsc,EAAiB,IACvB,SAASV,EAAahnB,GAClB,MAAOlB,EAAWwoB,GAAatnB,EAAMD,MAAM2nB,GAC3C,MAAO,CAAE5oB,YAAWwoB,YACxB,CACA,SAASL,EAAY5iB,EAAI,GAAIsjB,EAAI,IAC7B,MAAO,IAAI,IAAIvE,IAAI,IAAI/e,KAAMsjB,IACjC,CACA,SAAS7F,EAAqBC,GAC1B,QAAKA,IAGkB,eAAnBA,EAAO7gB,aAGP,EAAI6J,EAAO6c,gBAAgB,SAAU7F,EAAO8F,YAAc,IAGvDX,KACX,CACA,SAASA,IACL,IACI,QAAU7mB,OAAOynB,SACrB,CACA,MAAOpd,GACH,OAAO,CACX,CACJ,C,mCCpKAlN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQigB,UAAYjgB,EAAQqqB,eAAY,EACxC,MAAMC,EAAU,CAAC,EACXD,EAAarN,GACRsN,EAAQtN,GAEnBhd,EAAQqqB,UAAYA,EACpB,MAAMpK,EAAYA,CAACjD,EAAK/c,KACpBqqB,EAAQtN,GAAO/c,CAAK,EAExBD,EAAQigB,UAAYA,C,qCCXRpgB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8lB,oBAAiB,EACzB,MAAMhV,EAAUjR,EAAQ,OAClB8Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjB0qB,EAAoB1qB,EAAQ,OAC5B2qB,EAAsB3qB,EAAQ,OACpC,MAAMimB,EACFxY,WAAAA,CAAY0S,EAAMgC,EAAQzQ,GACtBpM,KAAKlE,KAAO,SACZkE,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUmc,SAAS1kB,KAAK8iB,mBAE7B9iB,KAAKslB,cAAgBtlB,KAAKulB,uBAC1B,EAAIrd,EAAO5M,UAAU,4CAA0Cuf,EAAK5e,UACxE,CACAupB,QAAAA,CAAS1qB,GACL,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmByP,MAAMC,QAAQ1P,EACzE,CACA0P,OAAAA,CAAQ1P,GACJ,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkByP,MAAMC,QAAQ1P,EACxE,CACA2qB,mBAAAA,CAAoB3lB,GAChB,IAAI4lB,EAAQ5lB,EAAKkR,QAAiC,kBAAhBlR,EAAKkR,SAAwBzG,MAAMC,QAAQ1K,EAAKkR,QAClF,GAAoB,+BAAhBlR,EAAKoR,OAAyC,CAC9C,MAAMyU,EAAgB7lB,EAAKyI,QAAQrL,MAAM,KAAK,GAExC0oB,EAAgBlB,SAASiB,EAAe,IAC9C,GAAIhB,MAAMiB,GACN,MAAM,IAAI1d,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,sCAAsC4J,OAE/H,GAAK7lB,EAAKkR,OAGL,KAAI0U,EAQL,MAAM,IAAIxd,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,oCAAoCjc,EAAKoR,YARlH,CACZ,IAAIF,EAASlR,EAAKkR,OACZ,YAAaA,IACfA,EAAO,WAAa,KAAO4U,EAAc3T,SAAS,IAClDnS,EAAKkR,OAASA,EAEtB,CAGA,MAXIlR,EAAKkR,OAAS,CAAEzI,QAAS,KAAOqd,EAAc3T,SAAS,IAY/D,MACK,GAAoB,kBAAhBnS,EAAKoR,QACS,yBAAhBpR,EAAKoR,QACW,wBAAhBpR,EAAKoR,QACW,sBAAhBpR,EAAKoR,OAAgC,CACxC,IAAKpR,EAAKkR,OACN,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,mCAAmCjc,EAAKoR,WAEjI,IAAIlR,KAAKwlB,SAAS1lB,EAAKkR,QA0BnB,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,yCAAyCjc,EAAKoR,WA1BvG,CAC5B,IAAIF,EAASlR,EAAKkR,OAElB,IADA,EAAI9I,EAAO5M,UAAU,qCAAsCC,KAAKC,UAAUwV,IACtE,YAAaA,EAAQ,CACrB,MAAM6U,EAAkB/lB,EAAKyI,QAAQrL,MAAM,KAAK,GAC1C4oB,EAAWpB,SAASmB,EAAiB,IAC3C,IACIE,EADAC,EAAoBC,OAAOjV,EAAOzI,SAEtC,GAAIyd,EAAkBhd,WAAWhJ,KAAKlE,OAASgE,EAAKyI,UAAYyd,EAC5DD,EAAgBD,OAEf,GAAIE,EAAkBhd,WAAW,MAClC+c,EAAgBrB,SAASsB,EAAmB,QAE3C,IAAKrB,MAAMC,OAAOoB,IAInB,MAAM,IAAI9d,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,2CAA2Cjc,EAAKoR,WAHrI6U,EAAgBrB,SAASsB,EAAmB,GAIhD,CACA,GAAIF,IAAaC,EACb,MAAM,IAAI7d,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBmc,oBAAqB,qDAAqDjc,EAAKoR,WAEvJ,CACJ,CAIJ,CACJ,CAEAgV,UAAAA,CAAWpmB,GACP,GAAoB,+BAAhBA,EAAKoR,QACc,4BAAhBpR,EAAKoR,QACW,sBAAhBpR,EAAKoR,QACW,wBAAhBpR,EAAKoR,QACW,yBAAhBpR,EAAKoR,QACW,yBAAhBpR,EAAKoR,QACR,GAAIlR,KAAKwK,QAAQ1K,EAAKkR,QAAS,CAC3B,IAAImV,EAAYrmB,EAAKkR,OACrB,GAAImV,EAAW,CACX,GAAyB,IAArBA,EAAU9pB,OAMT,MAAI8pB,EAAU9pB,OAAS,EAClB,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,mDAAmDtc,EAAKoR,YAGjI,IAAIhJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,oCAAoCtc,EAAKoR,YAVhG,CACxB,IAAIkV,EAAatmB,EAAKkR,OAAO,GACzBhR,KAAKwlB,SAASY,KACdtmB,EAAKkR,OAASoV,EAEtB,CAOJ,CACJ,OAEC,GAAoB,yBAAhBtmB,EAAKoR,QACV,GAAIlR,KAAKwK,QAAQ1K,EAAKkR,QAAS,CAC3B,IAAImV,EAAYrmB,EAAKkR,OACrB,GAAImV,GAAaA,EAAU9pB,OAAS,EAChC,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,mDAAmDtc,EAAKoR,YAEtI,GAAIiV,GAAkC,IAArBA,EAAU9pB,OAC5B,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,oCAAoCtc,EAAKoR,YAE5H,IAAImV,EAAa,CAAC,EAClB,GAAIF,GAAkC,IAArBA,EAAU9pB,OAAc,CACrC,IAAIiqB,EAAaxmB,EAAKkR,OAAO,GAC7B,IAAIsV,GAAoC,kBAAfA,EAoBrB,MAAM,IAAIpe,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,wDAAwDtc,EAAKoR,YApB9F,CAC9C,IAAIqV,GAAU,EAQd,GAPAvmB,KAAK/D,UAAUF,SAASe,SAAS8L,IAC7B,IAAI4d,GAAe,EAAI7a,EAAQsY,sBAAsBrb,GACjD4d,EAAalkB,gBAAkBgkB,EAAWhkB,gBAC1CikB,GAAU,EACd,KAEJ,EAAIre,EAAO5M,UAAU,sDAAuDirB,IACvEA,EACD,MAAM,IAAIre,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,sDAAsDtc,EAAKoR,YAE9I,IAAIlR,KAAKwlB,SAAS1lB,EAAKkR,OAAO,IAI1B,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,gDAAgDtc,EAAKoR,YAHpImV,EAAavmB,EAAKkR,OAAO,EAKjC,CAIJ,MACK,GAAImV,GAAkC,IAArBA,EAAU9pB,OAAc,CAC1C,IAAI2D,KAAKwlB,SAAS1lB,EAAKkR,OAAO,IAI1B,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,gDAAgDtc,EAAKoR,YAHpImV,EAAavmB,EAAKkR,OAAO,EAKjC,CACA,IACI,IAAIyV,EAAWlrB,KAAKC,UAAU6qB,GAC9BvmB,EAAKkR,OAAS,CACV0V,cAAeD,EAEvB,CACA,MAAOrS,GACH,MAAM,IAAIlM,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,0DAA0Dtc,EAAKoR,WAClJ,CACJ,OAEC,GAAoB,kBAAhBpR,EAAKoR,QACNlR,KAAKwK,QAAQ1K,EAAKkR,QAAS,CAC3B,GAAIlR,EAAKkR,QAAUlR,EAAKkR,OAAO3U,OAAS,EACpC,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,mCAAmCtc,EAAKoR,YAEtH,GAAIpR,EAAKkR,QAAiC,IAAvBlR,EAAKkR,OAAO3U,OAChC,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,oCAAoCtc,EAAKoR,YAE5H,IAAIyV,EAAW7mB,EAAKkR,OAAO,GACvB4V,EAAY9mB,EAAKkR,OAAO,GAC5B,GAAI4V,GAAkC,kBAAdA,EAAwB,CAC5C,IAAIL,GAAU,EAQd,GAPAvmB,KAAK/D,UAAUF,SAASe,SAAS8L,IAC7B,IAAI4d,GAAe,EAAI7a,EAAQsY,sBAAsBrb,GACjD4d,EAAalkB,gBAAkBskB,EAAUtkB,gBACzCikB,GAAU,EACd,KAEJ,EAAIre,EAAO5M,UAAU,+CAAgDirB,IAChEA,EACD,MAAM,IAAIre,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,2CAA2Ctc,EAAKoR,WAEvI,CACA,IAAIyV,GAAgC,kBAAbA,EAMnB,MAAM,IAAIze,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,sCAAsCtc,EAAKoR,YAL1HpR,EAAKkR,OAAS,CACVO,QAASoV,EAMrB,CAER,CACArD,gBAAAA,CAAiBxjB,GACb,OAAQA,EAAKoR,QACT,IAAK,sBACL,IAAK,eACL,IAAK,cACD,OAAO,EACX,IAAK,sBACL,IAAK,sBACL,IAAK,WACL,IAAK,gBACL,IAAK,oBACL,IAAK,0BACL,IAAK,oBACL,IAAK,uBACD,OAAO,EACX,IAAK,6BAA8B,CAC/BlR,KAAKkmB,WAAWpmB,GAChBE,KAAKylB,oBAAoB3lB,GACzB,MAAM,cAAE+mB,EAAa,WAAEC,GAAe9mB,KAAK+mB,yBAAyBjnB,GACpE,OAAQE,KAAKgnB,gBAAgBH,EACjC,CACA,QACI,OAAO,EAEf,OAAO,CACX,CACAI,8BAAAA,CAA+BnnB,GAC3BE,KAAK/D,UAAUF,SAASe,SAAS8L,IACzBA,EAAQzJ,SAASW,EAAKyI,WACtBzI,EAAK1D,SAAU,EAAIuP,EAAQsY,sBAAsBrb,GACrD,GAER,CACAa,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAoB,mBAAhBF,EAAKoR,QACc,aAAhBpR,EAAKoR,OACR,MAAM,IAAIhJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAAsB,GAAGtf,EAAKoR,+BAalG,OAXApR,EAAKonB,aAAepnB,EAAKkR,OACzBhR,KAAKkmB,WAAWpmB,GACZE,KAAK6c,OAAOsK,0BACQ,yBAAhBrnB,EAAKoR,SACLpR,EAAKoR,OAAS,yBAGtB,EAAIhJ,EAAO5M,UAAU,iCAAkCC,KAAKC,UAAUsE,IACtEE,KAAKylB,oBAAoB3lB,IACzB,EAAIoI,EAAO5M,UAAU,mCAAoCC,KAAKC,UAAUsE,IACxEE,KAAKinB,+BAA+BnnB,GAC5BA,EAAKoR,QACT,IAAK,sBACD,OAAOlR,KAAKonB,cAChB,IAAK,eACD,OAAOpnB,KAAKonB,cAChB,IAAK,cACD,OAAO1C,SAAS1kB,KAAK8iB,mBACzB,IAAK,6BACD,aAAc9iB,KAAKqnB,kBAAkBvnB,GAEzC,IAAK,0BACD,OAAOE,KAAKsnB,iBAAiBxnB,GACjC,QACI,MAER,GAAKE,KAAK6c,OAAOsK,2BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAoD9E,OADA,EAAIhJ,EAAO5M,UAAU,6BACR0E,KAAKunB,kBAAkB9d,QAAQ3J,GA/C5C,GAAIE,KAAK6c,OAAOsK,2BACQ,wBAAhBrnB,EAAKoR,QACc,yBAAhBpR,EAAKoR,QACR,IACI,GAAIpR,EAAKkR,QAAiC,kBAAhBlR,EAAKkR,SAAwBzG,MAAMC,QAAQ1K,EAAKkR,QAAS,CAC/E,MAAMlH,EAAchK,EAAKkR,OACQ,kBAAtBlH,EAAYkG,OAAmD,KAA7BlG,EAAYkG,MAAMwX,QACtD1d,EAAY5N,MAAqC,kBAArB4N,EAAY5N,MAAiD,KAA5B4N,EAAY5N,KAAKsrB,QAC/E1d,EAAY5N,KAAO4N,EAAYkG,OAC/B,EAAI9H,EAAO5M,UAAU,sDAGrB,EAAI4M,EAAO5M,UAAU,4CAIzB,EAAI4M,EAAO5M,UAAU,uCAE7B,CACJ,CACA,MAAOuM,IACH,EAAIK,EAAO5M,UAAU,yCACzB,CAGR,IACI,MAAMkE,QAAiBQ,KAAK6c,OAAOpT,QAAQ3J,GAE3C,IADA,EAAIoI,EAAO5M,UAAU,uCAAwCC,KAAKC,UAAUgE,IACxEQ,KAAKwlB,SAAShmB,IACV,WAAYA,EAAU,CACtB,IAAInE,EAASmE,EAASnE,OACtB,OAAIA,GAA4B,kBAAXA,GAAmC,SAAXA,GAAgC,UAAXA,EAI3DmE,EAASnE,SAHZ,EAAI6M,EAAO5M,UAAU,yCAAqD,SAAXD,GAC5C,SAAXA,EAGhB,CAEJ,OAAOmE,CACX,CACA,MAAOqI,GAEH,MADA,EAAIK,EAAO5M,UAAU,2EAA2EuM,aAAaK,EAAOvI,kBAAmBpE,KAAKC,UAAUqM,IAChJA,CACV,CAMR,GACJ,CACAyf,gBAAAA,CAAiBxnB,GACb,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAIynB,QAAoBznB,KAAK6c,OAAOpT,QAAQ3J,GAC5C,IACI,GAAI,WAAY2nB,EAAY,CACxB,IACI7e,EAAU6e,EAAWpsB,OACzB,GAAIuN,EAAS,CACT,MAAM2U,EAAY3U,EAAQ1L,MAAM,KAAK,GAC/BqL,EAAUK,EAAQ1L,MAAM,KAAK,GAC7BC,EAAQogB,EAAY,IAAMhV,EACbvI,KAAK/D,UAGxB,GAFA+D,KAAK/D,UAAUF,SAASO,KAAKsM,GAC7B5I,KAAK/D,UAAUc,OAAOT,KAAKa,GACvB6C,KAAKwlB,SAAS1lB,EAAKkR,SACf,YAAalR,EAAKkR,OAAQ,CAC1B,IAAI0W,EAAU5nB,EAAKkR,OAAO0W,QACtBhI,EAASgI,EAAUA,EAAQ,QAAKxkB,EAChCwc,IACI1f,KAAK/D,UAAUuoB,OACfxkB,KAAK/D,UAAUuoB,OAAOjc,GAAWmX,EAGjC1f,KAAK/D,UAAUuoB,OAAS,CACpB,CAACjc,GAAUmX,GAGnB1f,KAAK2nB,gBAAgBpf,EAASmX,GAEtC,CAEJ1f,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBI,kBAAmB,CAC5DwF,OAAQ5nB,KAAK/D,WAErB,CACJ,MAEI,IAAIiM,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,cAActc,EAAKoR,uBAEpG,CACA,MAAOtH,GACH,MAAM,IAAI1B,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,cAActc,EAAKoR,wBACtG,CACA,OAAO,IACX,GACJ,CACA2W,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACAwjB,eAAAA,CAAgBlX,EAASmX,GAGrB,GAFA1f,KAAKuI,QAAUmc,SAASnc,IAEnBvI,KAAKslB,cAAc/c,GAAU,CAC9B,MAAM+b,EAAM5E,IAAU,EAAI/T,EAAQoY,WAAW,GAAG/jB,KAAKlE,QAAQyM,IAAWvI,KAAK/D,WACxEqoB,EAKDtkB,KAAK2nB,gBAAgBpf,EAAS+b,IAH9B,EAAIpc,EAAO5M,UAAU,oCAAoCiN,IAKjE,CACAvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAwU,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACAtE,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAAQ0J,WACxB,GAAIjS,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAEhC,OADA,EAAImM,EAAO5M,UAAU,sBAAuBS,EAAUiE,KAAKuI,SACtDxM,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,IACC,EAAI+C,EAAQsY,sBAAsBrb,OARtC,EAWf,CACAme,wBAAAA,CAAyBjnB,GACrB,IAAIkR,EAASlR,EAAKkR,OACd8V,EAAa,MACb9V,GAAU,YAAaA,IACvB8V,EAAa9V,EAAOzI,SAExBue,EAAaA,EAAW9d,WAAW,MAAQ8d,EAAa,KAAKA,KAC7D,EAAI5e,EAAO5M,UAAU,gCAA8BwE,IACnD,EAAIoI,EAAO5M,UAAU,sCAAoCwrB,GACzD,MAAMD,EAAgBnC,SAASoC,EAAY,IAE3C,OADA,EAAI5e,EAAO5M,UAAU,yCAAuCurB,GACrD,CAAEA,gBAAeC,aAC5B,CACAO,iBAAAA,CAAkBvnB,GACd,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAM,cAAE6mB,EAAa,WAAEC,GAAe9mB,KAAK+mB,yBAAyBjnB,GACpE,IAAIE,KAAKgnB,gBAAgBH,GAIrB,MAAM,IAAI3e,EAAOvI,gBAAgBuI,EAAOtI,wBAAwB4I,oBAAqB,cAAc1I,EAAKoR,yBAHxGlR,KAAKyf,gBAAgB,GAAGoH,IAKhC,GACJ,CACAG,eAAAA,CAAgBze,GACZ,OAAOvI,KAAK/D,UAAUc,OAAOoC,SAAS,GAAGa,KAAKlE,QAAQyM,IAC1D,CAEAuf,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,EANI,EAAI7f,EAAO5M,UAAU,oCAAoCiN,IAOjE,CACAgd,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EAWd,OAVA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,YACrD,EAAIiM,EAAO5M,UAAU,4BAA6BurB,EAAeqB,GACjE,IAAIC,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,KAEJ,EAAIjgB,EAAO5M,UAAU,wBAAyBysB,GACvCA,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAEhC,IADA,EAAI+K,EAAO5M,UAAU,2BAA4B6B,EAAO4qB,GACpC,qBAATA,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,EAEJltB,EAAQ8lB,eAAiBA,EACzB9lB,EAAAA,WAAkB8lB,C,qCC7elB,IAAI1Z,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQutB,kCAA+B,EACvC,MAAM7oB,EAAa7E,EAAQ,OACrB2tB,EAAkB3tB,EAAQ,OAC1BiR,EAAUjR,EAAQ,OAClBwL,EAASxL,EAAQ,MACvB,MAAM0tB,EACFjgB,WAAAA,CAAYmgB,GACRtoB,KAAKsoB,cAAgBA,CACzB,CACAlW,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,kBAC7BA,KAAKsoB,cAAclW,YAC7B,GACJ,CACAmW,UAAAA,GACI,OAAOvoB,KAAKsoB,cAAc3d,OAC9B,CACAlC,UAAAA,GACI,OAAOxB,EAAUjH,UAAM,OAAQ,GAAQ,kBAC7BA,KAAKsoB,cAAchW,UACzB,IAAIwR,EAAgB9jB,KAAKsoB,cAAcxE,cACnC1nB,EAAU0nB,EAAc1nB,QACxB8M,EAAY4a,EAAc5a,UAAU+I,WACpCpV,EAAQ,CAAC,EAEb,OADAA,EAAM0C,EAAWuG,aAAaK,SAAW,CAAE+C,UAAWA,GAC/C,CACHjN,UAAWsD,EAAWwH,kBACtBpK,UAAW,CAAC,GAAG4C,EAAWuG,aAAaK,WAAW/J,KAClDQ,QAAS,GACTC,MAAOA,EAEf,GACJ,CACA2rB,aAAAA,CAAczrB,GACV,OAAIiD,KAAKsoB,cAAcG,aAAeJ,EAAgBK,iBAAiBC,YAGjD,IAAlB5rB,EAAOV,QAAgBU,EAAO,KAAOwC,EAAWuG,aAAaK,QAIrE,CACA+N,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,KACI,EAAI2L,EAAQrQ,UAAU,sCAAuCC,KAAKC,UAAUiO,GAChF,CACA,MAAO5B,GACP,CACA7H,KAAK4oB,eAAenf,EAAQlB,SAC5B,MAAM2I,EAASzH,EAAQyH,OACvB,IAAI7V,EACJ,GAAIoO,EAAQyd,cAAgBlnB,KAAKsoB,cAAe,CAC5C,IAAIO,EAAiBpf,EAAQyd,aAC7B,OAAQhW,GACJ,IAAK,wBACD,IAAI4X,QAAyB9oB,KAAKsoB,cAAcS,gBAAgBtf,EAAQuH,QACxE3V,EAAS,CACL6V,OAAQ,wBACR7V,OAAQytB,GAEZ,MACJ,IAAK,oBACD,IAAIE,QAA0BhpB,KAAKsoB,cAAclf,YAAYyf,GAC5B,kBAAtBG,GAAkC,cAAeA,IACxDA,EAAoBA,EAAkBC,WAE1C5tB,EAAS,CACL6V,OAAQ,oBACR7V,OAAQ2tB,GAEZ,MACJ,IAAK,iCACD,IAAIE,QAA0BlpB,KAAKsoB,cAAca,yBAAyB1f,EAAQuH,QAClF3V,EAAS,CACL6V,OAAQ,iCACR7V,OAAQ6tB,EAAkBE,MAE9B,MAEZ,CACA,OAAO/tB,CACX,CACA,MAAOwM,GAEH,MADA,EAAI8D,EAAQrQ,UAAU,4BAA6BuM,GAC7CA,CACV,CACJ,GACJ,CACA0X,cAAAA,GACA,CACA8J,yBAAAA,CAA0B/J,GACtBtf,KAAKsoB,cAAcgB,iBAAiB1gB,IACnB,OAAb0W,QAAkC,IAAbA,GAA+BA,EAAqB,OAAZ1W,QAAgC,IAAZA,OAAqB,EAASA,EAAQxM,QAAQ,GAEvI,CACAwsB,cAAAA,CAAeW,GACX,IAAIznB,EACJ,GAAIynB,IAAY5d,EAAQ6d,gBAAgBhmB,IAAIjE,EAAWuG,aAAaK,SAChE,MAAM,IAAI5G,EAAWI,gBAAgBJ,EAAWK,wBAAwB4I,qBAE5E,IAAIihB,EAAgBzpB,KAAKsoB,cAAc7rB,QACvC,IAAmC,QAA7BqF,EAAK2nB,EAAc3tB,YAAyB,IAAPgG,OAAgB,EAASA,EAAGQ,gBAAkB4D,EAAO9G,aAAa+G,QAG7G,MAAM,IAAI5G,EAAWI,gBAAgBJ,EAAWK,wBAAwB4I,oBAC5E,EAEJ3N,EAAQutB,6BAA+BA,C,qCCvHvCztB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6uB,eAAiB7uB,EAAQ8uB,uBAAyB9uB,EAAQ+uB,oBAAsB/uB,EAAQgvB,cAAgBhvB,EAAQivB,eAAiBjvB,EAAQkvB,uBAAoB,EACrKlvB,EAAQmvB,gBAAkBA,EAC1B,MAAMzqB,EAAa7E,EAAQ,OACrBqf,EAAgBrf,EAAQ,OAoB9B,SAASsvB,EAAgB3rB,GACrB,IAAI4rB,EAAM,GACV,GAAI5rB,EACA,OAAQA,GACJ,KAAKkB,EAAWuZ,cACZmR,EAAMpvB,EAAQivB,eACd,MACJ,KAAK/P,EAAcmQ,kBACfD,EAAMpvB,EAAQgvB,cACd,MACJ,KAAK9P,EAAcoQ,oBACfF,EAAMpvB,EAAQkvB,kBAG1B,OAAOE,GAAO5rB,GAAW,EAC7B,CAlCAxD,EAAQkvB,kBAAoB,oBAC5BlvB,EAAQivB,eAAiB,iBACzBjvB,EAAQgvB,cAAgB,gBACxBhvB,EAAQ+uB,oBAAsB,sBAC9B/uB,EAAQ8uB,uBAAyB,yBACjC9uB,EAAQ6uB,eAAiB,CACrBU,GAAI,CACAN,eAAgB,IAChBD,cAAe,KAEnBQ,OAAQ,CACJN,kBAAmB,IACnBJ,uBAAwB,KAE5BW,QAAS,CACLC,aAAc,IACdC,cAAe,K,qCCtBX9vB,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmK,qBAAkB,EAC1B,MAAMkD,EAASxN,EAAQ,OACvB,MAAMsK,EACFmD,WAAAA,CAAYC,GACRpI,KAAKyqB,cAAgB,eACrBzqB,KAAKoI,SAAWA,CACpB,CACAE,QAAAA,CAASC,GAIL,GAHe,MAAXA,IACAA,EAAUvI,KAAKyqB,eAEfliB,GAAWvI,KAAKyqB,cAChB,MAAM,IAAIviB,EAAOvI,gBAAgBuI,EAAOtI,wBAAwB4I,oBAAqB,eAAiBD,EAAU,gCAEpH,OAAOA,CACX,CACAE,UAAAA,CAAWF,GACP,IAAIzG,EAAIC,EAAIC,EAAI0G,EAAIC,EACpBJ,EAAUvI,KAAKsI,SAASC,GACxB,IAAIK,EAA8H,QAAnH7G,EAAsC,QAAhCD,EAAK9B,KAAKoI,SAASS,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,WAAWZ,EAAOwiB,yBAAsC,IAAP3oB,OAAgB,EAASA,EAAGhG,SAASmC,QAAO,SAAU0K,GAC5L,OAAOA,EAAQI,WAAWT,EAC9B,IAAG,GACH,IAAKK,EAID,OAEJ,MAAMK,EAAeL,EAAQ1L,MAAM,KAC7Bd,EAAUwM,EAAQ1L,MAAM,KAAK,GACnC,IAAIL,EAAiL,QAAxK8L,EAAyH,QAAnHD,EAAsC,QAAhC1G,EAAKhC,KAAKoI,SAASS,eAA4B,IAAP7G,OAAgB,EAASA,EAAG8G,WAAWZ,EAAOwiB,yBAAsC,IAAPhiB,OAAgB,EAASA,EAAG7L,aAA0B,IAAP8L,OAAgB,EAASA,EAAI,GAAGM,EAAa,MAAMA,EAAa,MACzPC,EAAY,GAIhB,YAHahG,GAATrG,IACAqM,EAAYrM,EAAM,cAEjBT,EAME,CACHA,QAASA,QAPb,CASJ,CACAuuB,WAAAA,CAAYC,GACR,IAAIC,EAAM,GACV,IAAK,IAAI3f,EAAI,EAAGA,EAAI0f,EAAIvuB,OAAQ6O,IAC5B2f,GAAOD,EAAIE,WAAW5f,GAAG+G,SAAS,IAAI8Y,SAAS,EAAG,KAEtD,OAAOF,CACX,CACAzhB,WAAAA,CAAYlN,EAAMqM,GACd,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,IAAIgB,EAAW,CACX,QAAWhB,EACX,OAAU,mBACV,OAAU,CACN,QAAWvI,KAAK2qB,YAAYzuB,KAGpC,IACI,MAAMsN,QAAYxJ,KAAKoI,SAASqB,QAAQF,EAAUhB,GAClD,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,OAEV,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAohB,aAAAA,CAAc9uB,EAAMqM,GAChB,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,IAAIgB,EAAW,CACX,QAAWhB,EACX,OAAU,qBACV,OAAU,CACN,QAAWrM,IAGnB,IACI,MAAMsN,QAAYxJ,KAAKoI,SAASqB,QAAQF,EAAUhB,GAClD,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,OAEV,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAmf,eAAAA,CAAgBjf,EAAavB,GACzB,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,IAAIrM,EAAO,CACP,OAAU,uBACV,OAAU4N,GAEd,IACI,MAAMN,QAAYxJ,KAAKoI,SAASqB,QAAQvN,EAAMqM,GAC9C,GAAI,WAAYiB,EAAK,CACjB,IAAIyhB,EAEAA,EADqB,iBAAdzhB,EAAInO,OACAE,KAAKmO,MAAMF,EAAInO,QAGfmO,EAAInO,OAEnB,IAAI6vB,EAAa,CAAC,EAClBA,EAAWC,QAAUF,EAASE,QAC9BD,EAAWE,KAAOH,EAASG,KAC3B,IAAIC,EAAU,CAAC,EAUf,OATAA,EAAQC,SAAWL,EAASM,SAASD,SACrCD,EAAQG,WAAaP,EAASM,SAASC,WACvCH,EAAQI,gBAAkBR,EAASM,SAASE,gBAC5CJ,EAAQK,UAAYT,EAASM,SAASG,UACtCL,EAAQM,eAAiBV,EAASM,SAASI,eAC3CN,EAAQ1S,UAAYsS,EAASM,SAAS5S,UACtCuS,EAAWK,SAAWF,EACtBH,EAAWU,aAAeX,EAASW,aACnCV,EAAWjC,UAAYgC,EAAShC,UACzBiC,CACX,CACJ,CACA,MAAOthB,GACH,OAAOA,CAEX,CACJ,GACJ,CACAiiB,sBAAAA,CAAuB/hB,EAAavB,GAChC,OAAOtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnCuI,EAAUvI,KAAKsI,SAASC,GACxB,IAAIrM,EAAO,CACP,OAAU,8BACV,OAAU4N,GAEd,IACI,MAAMN,QAAYxJ,KAAKoI,SAASqB,QAAQvN,EAAMqM,GAC9C,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,MAEnB,CACA,MAAOuO,GACH,OAAOA,CAEX,CACJ,GACJ,EAEJ/O,EAAQmK,gBAAkBA,C,mCC3K1B,IAAI0jB,EAFJ/tB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6tB,sBAAmB,EAE3B,SAAWA,GACPA,EAAiB,aAAe,YAChCA,EAAiB,eAAiB,cAClCA,EAAiB,YAAc,WAC/BA,EAAiB,eAAiB,aACrC,CALD,CAKGA,IAAqB7tB,EAAQ6tB,iBAAmBA,EAAmB,CAAC,G,qCCT3DhuB,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIkkB,EAAU9rB,MAAQA,KAAK8rB,QAAW,SAAUC,EAAGlkB,GAC/C,IAAImkB,EAAI,CAAC,EACT,IAAK,IAAItoB,KAAKqoB,EAAOpxB,OAAOgJ,UAAUC,eAAeC,KAAKkoB,EAAGroB,IAAMmE,EAAEokB,QAAQvoB,GAAK,IAC9EsoB,EAAEtoB,GAAKqoB,EAAEroB,IACb,GAAS,MAALqoB,GAAqD,oBAAjCpxB,OAAOuxB,sBACtB,KAAIhhB,EAAI,EAAb,IAAgBxH,EAAI/I,OAAOuxB,sBAAsBH,GAAI7gB,EAAIxH,EAAErH,OAAQ6O,IAC3DrD,EAAEokB,QAAQvoB,EAAEwH,IAAM,GAAKvQ,OAAOgJ,UAAUwoB,qBAAqBtoB,KAAKkoB,EAAGroB,EAAEwH,MACvE8gB,EAAEtoB,EAAEwH,IAAM6gB,EAAEroB,EAAEwH,IAF4B,CAItD,OAAO8gB,CACX,EACArxB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAM0xB,EACFjkB,WAAAA,CAAY0S,EAAMgC,EAAQzQ,GACtBpM,KAAKlE,KAAOoM,EAAOrB,gBACnB7G,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,qBAC9B,CACAsC,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACAupB,QAAAA,CAAS1qB,GACL,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmByP,MAAMC,QAAQ1P,EACzE,CACA2O,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EAAIC,EAAI0G,EAGhB,IAFA,EAAIR,EAAO5M,UAAU,sCAAuCC,KAAKC,UAAUsE,KAC3E,EAAIoI,EAAO5M,UAAU,2CAA4C0E,KAAK/D,YACjE+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAAS,CACvF,IAAKpR,EAAKkR,OACN,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,6BAEnF,GAAIpc,KAAKwlB,SAAS1lB,EAAKkR,QAAS,CAC5B,MAAMrI,EAAK7I,EAAKkR,QAAQ,WAAEqb,GAAe1jB,EAAI2jB,EAAYR,EAAOnjB,EAAI,CAAC,eACrE,IAAI4jB,EAAwG,QAAzFxqB,EAAuC,QAAjCD,EAAK9B,KAAK/D,UAAUP,eAA4B,IAAPoG,OAAgB,EAASA,EAAG3F,gBAA6B,IAAP4F,OAAgB,EAASA,EAAG3F,QAC5I,SAAUkwB,IACVC,EAAcD,EAAUE,OAAmG,QAAzF9jB,EAAuC,QAAjC1G,EAAKhC,KAAK/D,UAAUP,eAA4B,IAAPsG,OAAgB,EAASA,EAAG7F,gBAA6B,IAAPuM,OAAgB,EAASA,EAAGtM,UAEnK0D,EAAKkR,OAAO,QAAUub,EACtBzsB,EAAKkR,OAAO,WAAahR,KAAK8iB,kBAC9BhjB,EAAKkR,OAAO,eAAiBqb,EAC7B,IAAI7sB,QAAiBQ,KAAK6c,OAAOpT,QAAQ3J,GACzC,GAAIE,KAAKwlB,SAAShmB,IAAa,WAAYA,EAAU,CACjD,MAAMnE,EAAS,CACXoxB,IAAKjtB,EAASnE,OAAO4W,YAIzB,OAFA,EAAI/J,EAAO5M,UAAU,0CAA2CC,KAAKC,UAAUgE,KAC/E,EAAI0I,EAAO5M,UAAU,wCAAyCC,KAAKC,UAAUH,IACtEA,CACX,CACA,MAAM,IAAI6M,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,mCACnF,CAEI,MAAM,IAAIlU,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,kCAEvF,CACA,OAAOpc,KAAKunB,kBAAkB9d,QAAQ3J,EAC1C,GACJ,CACAid,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3H,eAAAA,CAAgBlX,EAASmX,GAChB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,IAAItlB,EAAIC,EACR,MAAMhG,EAAWiE,KAAK/D,UAAUF,SAGhC,IAFA,EAAImM,EAAO5M,UAAU,6BAA8BS,IACnD,EAAImM,EAAO5M,UAAU,+BAAgCC,KAAKC,UAAUwE,KAAK/D,aACpEF,EACD,MAAO,GAEX,IAAIK,EAAoG,QAAzF2F,EAAuC,QAAjCD,EAAK9B,KAAK/D,UAAUP,eAA4B,IAAPoG,OAAgB,EAASA,EAAG3F,gBAA6B,IAAP4F,OAAgB,EAASA,EAAG3F,QAE5I,OADA,EAAI8L,EAAO5M,UAAU,4BAA6Bc,GAC9CA,EACO,CACHA,GAGD,EACX,CACAmpB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAEhC,IADA,EAAI+K,EAAO5M,UAAU,2BAA4B6B,EAAO4qB,GACpC,qBAATA,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,KACA,EAAI7f,EAAO5M,UAAU,kBAAmBiN,EAASmX,GACjD1f,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,EANI,EAAI7f,EAAO5M,UAAU,oCAAoCiN,IAOjE,CACA+a,gBAAAA,CAAiBxjB,GACb,OAAQA,EAAKoR,QACT,IAAK,sBACD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,CACX,EAEJrW,EAAAA,WAAkBuxB,C,qCCrKlB,IAAInlB,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6xB,gBAAa,EACrB7xB,EAAQkgB,mBAAqBA,EAC7BlgB,EAAQS,SAAWA,EACnBT,EAAQsY,SAAWA,EACnBtY,EAAQ8xB,WAAaA,EACrB9xB,EAAQyS,YAAcA,EACtBzS,EAAQqS,UAAYA,EACpB,MAAM0f,GAAQ,EACRC,GAAc,EACd7gB,EAAWtR,EAAQ,OACnBoyB,EAAkB,IAAI9gB,EAAS+gB,YACrC,SAAShS,IACL,OAAO+R,CACX,CACA,MAAME,EAActyB,EAAQ,OACtBiQ,EAAUqiB,EAAYriB,QAC5B,SAASrP,KAAYwE,GACjB,GAAsB,oBAAXqjB,QACP,KACQyJ,IAAqB,OAAXpvB,aAA8B,IAAXA,YAAoB,EAASA,OAAOyvB,eACjE9J,QAAQpX,IAAI,sBAAsBpB,QAAe7K,EAEzD,CACA,MAAOgC,GAAM,CAErB,CACA,SAASqR,KAAYrT,GACjB,GAAsB,oBAAXqjB,QACP,IAII,IAHIyJ,IAAqB,OAAXpvB,aAA8B,IAAXA,YAAoB,EAASA,OAAOyvB,eACjE9J,QAAQvZ,MAAM,sBAAsBe,QAAe7K,GAEnD+sB,IAAgBD,EAAO,CACvB,IAAI9d,EAAU,GACdA,GAAW,IAAIhP,GAAMotB,QAAO,CAAC7xB,EAAQQ,KACd,iBAARA,EACG,IAAMA,EAEI,iBAARA,GACFN,KAAKC,UAAUK,EAC7B,IAEJixB,EAAgBK,kBAAkBre,EAAS9C,EAASuB,cAAcC,IAAK,GAC3E,CACJ,CACA,MAAO1L,GAAM,CAErB,CACA,SAAS6qB,KAAc7sB,GACnB,GAAsB,oBAAXqjB,QACP,KACQyJ,IAAqB,OAAXpvB,aAA8B,IAAXA,YAAoB,EAASA,OAAOyvB,eACjE9J,QAAQiK,KAAK,sBAAsBziB,QAAe7K,EAE1D,CACA,MAAOgC,GAAM,CAErB,CACA,SAASwL,EAAY+f,EAAQC,EAAUC,GACnC,OAAOtmB,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWyd,EAAMC,EAAQ3e,EAAS4e,OAAYxqB,EAAWyqB,OAAYzqB,EAAW0qB,OAAY1qB,EAAW2qB,OAAY3qB,EAAW4qB,OAAY5qB,EAAW6qB,OAAY7qB,GACvM,UACU4pB,EAAgBK,kBAAkBre,EAAS0e,EAAMC,EAAQC,EAAWC,EAAWC,EAAWC,EAAWC,EAAWC,EAC1H,CACA,MAAOlmB,GACP,CACJ,GACJ,CACA,SAASqF,EAAUqgB,GACf,OAAOtmB,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWjB,EAAS2e,EAAS,WACnE,GAER,CACA5yB,EAAQ6xB,WAAa/hB,C,qCCnFTjQ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAMszB,EACF7lB,WAAAA,CAAY0S,EAAM/e,EAAM+gB,EAAQzQ,GAC5BpM,KAAKlE,KAAOoM,EAAOxB,gBACnB1G,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,sBAC1BvlB,KAAKlE,KAAOA,CAChB,CACA+rB,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACA8gB,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3d,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAIkI,EAAO5M,UAAU,8BAA+BC,KAAKC,UAAUsE,KACnE,EAAIoI,EAAO5M,UAAU,2BAA4BC,KAAKC,UAAUwE,KAAK/D,aAChE+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QACvElR,KAAK6c,OAAOpT,QAAQ3J,GAExBE,KAAKunB,kBAAkB9d,QAAQ3J,EAC1C,GACJ,CACA2f,eAAAA,CAAgBlX,EAASmX,GAEhB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAChC,GAAoB,qBAAT4qB,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,EANI,EAAI7f,EAAO5M,UAAU,oCAAoCiN,IAOjE,CACA+a,gBAAAA,CAAiBxjB,GACb,OAAO,CACX,EAEJjF,EAAAA,WAAkBmzB,C,qCCpHNtzB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQozB,YAAS,EACjB,MAAM1uB,EAAa7E,EAAQ,OACrB8Q,EAAc9Q,EAAQ,OACtBiR,EAAUjR,EAAQ,OAClBwzB,EAAexzB,EAAQ,OACvByzB,EAAsBzzB,EAAQ,MAC9B0zB,EAAiB1zB,EAAQ,KACzBqf,EAAgBrf,EAAQ,OAC9B,MAAMuzB,EACF9lB,WAAAA,CAAY9J,GACR2B,KAAKyjB,WAAa,GAClBzjB,KAAKquB,kBAAenrB,EACpBlD,KAAKsuB,kBAAoB,IAAIH,EAAoBhjB,kBAAkB9M,GACnE2B,KAAKuuB,uBACT,CACAC,YAAAA,GACI,GAAIxuB,KAAKquB,aACL,OAAOruB,KAAKquB,YAEpB,CACA3K,wBAAAA,CAAyB+K,GACrBzuB,KAAKyuB,sBAAwBA,GAC7B,EAAI9iB,EAAQrQ,UAAU,mCAAoCmzB,GAC1D,IAAK,MAAM7gB,KAAa5N,KAAKyjB,WACzB7V,EAAU8V,yBAAyB+K,EAE3C,CACApO,iBAAAA,CAAkBoD,GACdzjB,KAAKyjB,WAAaA,EAClB,IAAK,MAAM7V,KAAa6V,EACpB7V,EAAU8gB,qBAAqB1uB,KAAKsuB,kBAE5C,CACAK,gBAAAA,GACI,OAAO3uB,KAAKyjB,UAChB,CACAmL,cAAAA,GACI,IAAK,MAAMhhB,KAAa5N,KAAKyjB,WACzB,GAAIzjB,KAAK6uB,cAAcjhB,GACnB,OAAO,EAGf,OAAO,CACX,CACAihB,aAAAA,CAAcjhB,GACV,QAAKA,GAEEjT,OAAOgM,OAAOunB,EAAaxE,eAAeU,IAAIjrB,SAASyO,EAAUkhB,UAC5E,CACAC,mBAAAA,CAAoBnhB,GAChB,QAAKA,IAEEjT,OAAOgM,OAAOunB,EAAaxE,eAAeW,QAAQlrB,SAASyO,EAAUkhB,YACrEn0B,OAAOgM,OAAOunB,EAAaxE,eAAeY,SAASnrB,SAASyO,EAAUkhB,WACjF,CACAE,gBAAAA,CAAiBvlB,EAASkT,EAAesS,GACrC,OAAOhoB,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKuuB,wBACE,IAAI/mB,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAI8B,EAAIC,EAAIC,EAAI0G,EAAIC,EACpB,KACI,EAAIgD,EAAQrQ,UAAU,oCAAqCC,KAAKC,UAAUiO,KAC1E,EAAIkC,EAAQrQ,UAAU,0CAA2CC,KAAKC,UAAUmhB,IAChF,IAAIuS,EAAmB,GACvBzlB,EAAQ3M,SAASjB,IACb,IAAIC,EAAOD,EAAKC,MACZA,EAAKkN,WAAW,oBAAsBlN,EAAKkN,WAAW,SACtDkmB,EAAiB5yB,KAAKT,EAC1B,KAEJ,EAAI8P,EAAQrQ,UAAU,6CAA8CC,KAAKC,UAAU0zB,IACnF,MAAMC,EAAcnvB,KAAKsuB,kBAAkB/b,iBACrC+E,EAAYtJ,KAAKC,MAAMgE,WAC7B,IAAImd,EAA8D,QAAzCttB,EAAK6a,EAAc4B,wBAAqC,IAAPzc,GAAgBA,EACtFwZ,EAAoD,QAAxCvZ,EAAK4a,EAAclB,uBAAoC,IAAP1Z,EAAgBA,EAAKxC,EAAWgc,gBAAgBC,cAChH,MAAM6T,EAA0B,CAC5BC,YAAa1K,OAAOrlB,EAAWZ,sBAC/B8Q,MAAO0f,EAAYzc,UACnBC,SAAUwc,EAAYxc,SACtB2E,UAAWA,EACXiY,SAAUvvB,KAAKwvB,YAAY7S,EAAc+F,UACzC+M,SAAUP,EACVxS,SAA0G,QAA/F1a,EAAuB,OAAlB2a,QAA4C,IAAlBA,OAA2B,EAASA,EAAcD,gBAA6B,IAAP1a,EAAgBA,EAAK,QAErI0tB,GAAgB,EAAI/jB,EAAQgkB,qBAAqBN,GACvDA,EAAwB3S,SAA2G,QAA/FhU,EAAuB,OAAlBiU,QAA4C,IAAlBA,OAA2B,EAASA,EAAcD,gBAA6B,IAAPhU,EAAgBA,EAAK,QAChK,EAAIiD,EAAQrQ,UAAU,uDAAwDC,KAAKC,UAAU6zB,IAC7F,IAAIO,EAAgB,GAChBC,EAAW,GACf,GAAIT,EAAmB,CACnB,IAAIU,GAAW,EAAInkB,EAAQokB,YAAYV,EAAyB1S,EAAcqT,QAASrT,EAAcsT,cACrGL,EAAgBE,EAASF,cACzBC,EAAWC,EAASD,UAAY,IAChC,EAAIlkB,EAAQrQ,UAAU,2CAA4Cs0B,EACtE,CACA,MAAMM,EAAaA,IACe,GAA1BlwB,KAAKyjB,WAAWpnB,QAAe2D,KAAK+uB,oBAAoB/uB,KAAKyjB,WAAW,IACjEzjB,KAAKyjB,WAAW,GAAGF,WAAW,CACjC4M,eAAgBd,GACjB/T,GAGCqB,EAAcqT,SACP,EAAIrkB,EAAQykB,kCAAkCR,IAElD,EAAIjkB,EAAQ0kB,6BAA6BR,EAAUD,EAAetU,IAGjF,EAAI3P,EAAQrQ,UAAU,2CAA4Cs0B,GAClE,MAAMU,GAAQ,EAAI3kB,EAAQ4kB,SAoE1B,GAnEID,GAASlB,KACT,EAAIzjB,EAAQrQ,UAAU,sCAAsCg1B,0BAA8BlB,KAC1Fc,KAEJlwB,KAAKwwB,4BAA2B,CAAChxB,EAAUoO,KACvC,IAAI9L,EAAIC,EAAIC,EAAI0G,EAChB,IACI1I,KAAKwwB,gCAA2BttB,GAChC,IAAI/H,EAAkBqE,EACtB,GAA8B,WAA1BrE,EAAgB+V,OAAqB,EACrC,EAAIvF,EAAQrQ,UAAU,sDAAuDC,KAAKC,UAAUL,IAC5F,IAAI2N,GAAa,EAAIslB,EAAerzB,kCAAkCI,GACtE,IAAI2N,EA4CA,MAAM,IAAIvJ,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,eA5C5D,CACZ,IAAIqU,GAC6F,QAA3F1uB,EAAwC,QAAlCD,EAAK3G,EAAgBO,eAA4B,IAAPoG,OAAgB,EAASA,EAAGnG,iBAA8B,IAAPoG,OAAgB,EAASA,EAAG,KAAO,eAAgB5G,EAAgBO,QAAQC,UAAU,KAC1L80B,EAAat1B,EAAgBO,QAAQC,UAAU,GAAG,eAEtD,IAAI0C,EAA6C,QAAlC2D,EAAK7G,EAAgBO,eAA4B,IAAPsG,OAAgB,EAASA,EAAGkd,OAAO7gB,QAE5F,IASIqyB,EATAzG,EAAM,GACV,OAAQ5rB,GACJ,KAAK0b,EAAcjB,cACfmR,EAAMiE,EAAapE,eACnB,MACJ,KAAK/P,EAAcmQ,kBACfD,EAAMiE,EAAarE,cACnB,MASR,GANIjc,EACA8iB,EAAe9iB,EAEVqc,IACLyG,EAAe1wB,KAAKyjB,WAAW7nB,MAAMgS,GAAcA,EAAU+iB,WAAa1G,MAEzEyG,EACD,MAAM,IAAInxB,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,eAE5E,IAAIvT,EAAUlO,OAAO8hB,OAAO,CAAEhN,MAAO0f,EAAYzc,UAAWiK,cAAeA,EAAe7T,WAAYA,GAAe3N,EAAgBO,SAAW,CAC5IwjB,OAAQvkB,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGthB,EAAgBO,QAAQwjB,QAAS,CAAEuR,WAAYA,MAEvFG,EAAkBz1B,EAAgBO,QAAQC,UAAUC,MAAKC,GAAsB,oBAAdA,EAAKC,OACtE80B,GAAmBA,EAAgBC,wBACnChoB,EAAQiW,aAAe8R,EAAgBC,wBAE3C,EAAIllB,EAAQrQ,UAAU,8CAA+CC,KAAKC,UAAUqN,IAChF7I,KAAK6uB,cAAc6B,MACnB,EAAI/kB,EAAQrQ,UAAU,kCACtB0E,KAAKsuB,kBAAkBhZ,sBAAsB6Z,EAAYzc,UAAWvX,EAAgBO,QAAQwjB,OAAO4R,qBAEvG9wB,KAAK+wB,WAAap2B,OAAO8hB,OAAO,CAAC,EAAG5T,EAAQqW,QAC5C3X,EAAQsB,GACR7I,KAAKgxB,gBAAgBN,IACrB,EAAI/kB,EAAQ2B,aAAa3B,EAAQ4B,cAAc0jB,QAAStlB,EAAQulB,8DAA+DjH,EACnI,CAIJ,MACK,GAA8B,iBAA1B9uB,EAAgB+V,aAA8GhO,IAA7C,QAAlCwF,EAAKvN,EAAgBO,eAA4B,IAAPgN,OAAgB,EAASA,EAAG8K,MAC1H,MAAM,IAAIjU,EAAWI,gBAAgBxE,EAAgBO,QAAQ8X,KAErE,CACA,MAAO3L,GACHJ,EAAOI,EACX,KAEA7H,KAAK4uB,iBAAkB,OACkB,QAAjCjmB,EAAK3I,KAAKsuB,yBAAsC,IAAP3lB,OAAgB,EAASA,EAAGyJ,YAAW,GACxF,UACUpS,KAAKsuB,kBAAkBhc,SACjC,CACA,MAAOzK,GAEH,MADA,EAAI8D,EAAQrQ,UAAU,gCAAiCuM,GACjDA,CACV,EACA,EAAI8D,EAAQrQ,UAAU,kDAAmD2zB,GACzEjvB,KAAKmxB,YAAYzB,EACrB,CAKA,IAJKY,GAASlB,GACVc,KAEJ,EAAIvkB,EAAQrQ,UAAU,kDAAmD2zB,GACrEA,EAAmB,CACnB,MAAMxc,EAAO,CACT0d,eAAgBd,EAChB3S,SAAUC,EAAcD,SACxBuT,aAActT,EAAcsT,eAEhC,EAAItkB,EAAQrQ,UAAU,4CAA6CC,KAAKC,UAAUiX,IAClFwc,EAAkBxc,EACtB,CACJ,CACA,MAAO7I,IACH,EAAI+B,EAAQrQ,UAAU,sCAAuCsO,GAC7DnC,EAAOmC,EACX,CACJ,KACJ,GACJ,CACA4lB,WAAAA,CAAY9M,GACR,IACI,GAAoC,gBAAhCA,EAAS5mB,KAAKwG,cAAiC,CAC/C,IAAI8uB,EAAQC,SAASD,MAIrB,GAHKA,IACDA,EAAQpxB,KAAKsxB,iBAEbF,EACA,OAAOz2B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGiG,GAAW,CAAE5mB,KAAM4mB,EAAS5mB,KAAO,MAAQs1B,GAE1F,CACA,OAAO1O,CACX,CACA,MAAO7a,GACH,OAAO6a,CACX,CACJ,CACA4O,aAAAA,GACI,IAAIC,EAAQF,SAASG,qBAAqB,QACtCC,EAAkB,CAAC,eAAgB,WAAY,iBACnD,IAAK,IAAIC,KAAQH,EAAO,CACpB,IAAII,EAAWD,EAAKE,aAAa,YACjC,IAAK,IAAIC,KAAeJ,EACpB,GAAIE,GAAYE,EACZ,OAAOH,EAAKE,aAAa,UAGrC,CAEJ,CACApB,0BAAAA,CAA2BsB,GACvB,IAAK,MAAMlkB,KAAa5N,KAAKyjB,WACrBzjB,KAAK+uB,oBAAoBnhB,IACzBA,EAAUmkB,2BAA2BD,GAG7C9xB,KAAK8xB,sBAAwBA,CACjC,CACAvO,UAAAA,CAAWC,EAAmB5V,EAAW6N,GACrC,IAAI3Z,EACA8L,EACAA,EAAU2V,WAAWC,EAAmB/H,GAGT,QAA9B3Z,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,GAAyBA,EAAGyhB,WAAWC,EAAmB/H,EAEzG,CACAvH,IAAAA,CAAKzK,EAASuoB,EAAe9c,GACzB,OAAOjO,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,EAAIC,EAAIC,EAAIC,EACpC,IAAI9H,EACA,YAAakB,GAA8B,MAAnBA,EAAQlB,UAChCA,EAAUkB,EAAQlB,QAAQ0J,YAE9B,KACI,EAAItG,EAAQ2B,aAAa3B,EAAQ4B,cAAcC,IAAK7B,EAAQsmB,sCAAuC,GAA2F,QAAtFlwB,EAAoC,QAA9BD,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,OAAgB,EAASA,EAAG6uB,gBAA6B,IAAP5uB,EAAgBA,EAAK,GAAI0H,EAAQyH,OAA2F,QAAlFxI,EAAgC,QAA1B1G,EAAKhC,KAAK+wB,kBAA+B,IAAP/uB,OAAgB,EAASA,EAAGkwB,gBAA6B,IAAPxpB,EAAgBA,EAAK,GAAIH,GACpU,QAA9BI,EAAK3I,KAAKwuB,sBAAmC,IAAP7lB,GAAyBA,EAAGuL,KAAKzK,EAAS,CAC7ElC,QAAU/H,IACN,IAAIsC,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,EAAIC,EAAIC,EAAIC,EAC2D,QAA9FvO,EAAuB,OAAlBkwB,QAA4C,IAAlBA,OAA2B,EAASA,EAAczqB,eAA4B,IAAPzF,GAAyBA,EAAG+B,KAAKmuB,EAAexyB,GAClJ,UAAWA,GAAaA,EAASoK,OAClC,EAAI+B,EAAQ2B,aAAa3B,EAAQ4B,cAAcC,IAAK7B,EAAQwmB,sCAAuC,GAA2F,QAAtFnwB,EAAoC,QAA9BD,EAAK/B,KAAKwuB,sBAAmC,IAAPzsB,OAAgB,EAASA,EAAG4uB,gBAA6B,IAAP3uB,EAAgBA,EAAK,GAAIyH,EAAQyH,OAA2F,QAAlFvI,EAAgC,QAA1BD,EAAK1I,KAAK+wB,kBAA+B,IAAProB,OAAgB,EAASA,EAAGwpB,gBAA6B,IAAPvpB,EAAgBA,EAAK,GAAIJ,IAGnW,EAAIoD,EAAQ2B,aAAa3B,EAAQ4B,cAAcC,IAAK7B,EAAQymB,wCAAyC,GAA2F,QAAtFjiB,EAAoC,QAA9BD,EAAKlQ,KAAKwuB,sBAAmC,IAAPte,OAAgB,EAASA,EAAGygB,gBAA6B,IAAPxgB,EAAgBA,EAAK,GAAI1G,EAAQyH,OAA2F,QAAlFb,EAAgC,QAA1BD,EAAKpQ,KAAK+wB,kBAA+B,IAAP3gB,OAAgB,EAASA,EAAG8hB,gBAA6B,IAAP7hB,EAAgBA,EAAK,GAAI9H,EACzW,EAEJ8pB,MAAOA,KACH,IAAIvwB,EACyF,QAA5FA,EAAuB,OAAlBkwB,QAA4C,IAAlBA,OAA2B,EAASA,EAAcK,aAA0B,IAAPvwB,GAAyBA,EAAG+B,KAAKmuB,EAAc,GAGhK,CACA,MAAOpoB,GAEH,MADA,EAAI+B,EAAQ2B,aAAa3B,EAAQ4B,cAAcC,IAAK7B,EAAQwmB,sCAAuC,GAA2F,QAAtFhiB,EAAoC,QAA9BD,EAAKlQ,KAAKwuB,sBAAmC,IAAPte,OAAgB,EAASA,EAAGygB,gBAA6B,IAAPxgB,EAAgBA,EAAK,GAAI1G,EAAQyH,OAA2F,QAAlFb,EAAgC,QAA1BD,EAAKpQ,KAAK+wB,kBAA+B,IAAP3gB,OAAgB,EAASA,EAAG8hB,gBAA6B,IAAP7hB,EAAgBA,EAAK,GAAI9H,GAC7VqB,CACV,CACJ,GACJ,CACA0oB,SAAAA,GACI,IAAIxwB,EAC2B,QAA9BA,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,GAAyBA,EAAGwwB,WACvE,CACAvQ,qBAAAA,CAAsBwQ,GAClB,IAAIzwB,EAC2B,QAA9BA,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,GAAyBA,EAAGigB,sBAAsBwQ,EAC7F,CACA3a,kBAAAA,CAAmBC,EAAK3b,GACpB8D,KAAKsuB,kBAAkB1W,mBAAmBC,EAAK3b,EACnD,CACA8b,iBAAAA,CAAkBH,GACd,IAAI/V,EACA+G,EAAU7I,KAAKsuB,kBAAkBtW,kBAAkBH,GACvD,GAAIhP,EAAS,CACT,IAAIohB,EAAM,GAIV,GAHuB,kBAAZphB,IACPohB,GAAM,EAAIiE,EAAalE,iBAA2C,QAAzBloB,EAAK+G,EAAQqW,cAA2B,IAAPpd,OAAgB,EAASA,EAAGzD,UAEtG2B,KAAKyjB,WAAW7nB,MAAMgS,GACfA,EAAU+iB,WAAa1G,IAE9B,OAAOphB,CAEf,CAEJ,CACA4V,mBAAAA,CAAoBS,GAChB,IAAI+K,GAAM,EAAIiE,EAAalE,iBAA4B,OAAX9K,QAA8B,IAAXA,OAAoB,EAASA,EAAO7gB,SAC9F4rB,GAELjqB,KAAKgxB,gBAAgBhxB,KAAKyjB,WAAW7nB,MAAMgS,GAChCA,EAAU+iB,WAAa1G,IAEtC,CACA+G,eAAAA,CAAgBpjB,GACZ5N,KAAKquB,aAAezgB,EAChB5N,KAAK6uB,cAAcjhB,IACnBA,EAAU2gB,uBAElB,CAEAiE,4BAAAA,CAA6BC,GACzBzyB,KAAKyyB,0BAA4BA,CACrC,CACAzS,cAAAA,CAAeD,EAAa2S,GACxB,OAAOzrB,EAAUjH,UAAM,OAAQ,GAAQ,YAC/BA,KAAKwuB,eACLxuB,KAAKwuB,eAAexO,eAAeD,GAAclX,IAC7C,IAAI/G,EAAIC,EACR2wB,EAAgB7pB,GACZA,IACA7I,KAAK+wB,WAAap2B,OAAO8hB,OAAO,CAAC,EAAG5T,EAAQqW,SAC5C,EAAIvT,EAAQ2B,aAAa3B,EAAQ4B,cAAc0jB,QAAStlB,EAAQulB,8DAAsJ,QAAtFnvB,EAAoC,QAA9BD,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,OAAgB,EAASA,EAAG6uB,gBAA6B,IAAP5uB,EAAgBA,EAAK,IACvP,IAIJ2wB,EAAgB,KAExB,GACJ,CACAC,uBAAAA,CAAwBljB,GACpB,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YAC/BA,KAAK6uB,cAAc7uB,KAAKwuB,wBAClBxuB,KAAKwuB,eAAemE,wBAAwBljB,GAE1D,GACJ,CACA0I,yBAAAA,CAA0Bya,GACtB,IAAI9wB,EACJ,SAAyC,QAA9BA,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,OAAgB,EAASA,EAAGqW,0BAA0Bya,GAC3G,CACAvV,wBAAAA,GACI,OAAOpW,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW8C,GAAc,GAC/D,IAAI/Q,QACkC,QAA9BA,EAAK9B,KAAKwuB,sBAAmC,IAAP1sB,OAAgB,EAASA,EAAGub,yBAAyBxK,EACvG,GACJ,CACAse,WAAAA,CAAYpR,GACR,OAAO9Y,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAI2L,EAAQrQ,UAAU,gCAAiCykB,GACvD,MAAMzI,EAAYtJ,KAAKC,MAAMgE,WAC7B,IAAIxI,EAAU,CACVyH,OAAQ,eACRF,OAAQ,CAAEuE,gBAAiB/J,EAAYqnB,qBAAsB9S,YAAaA,UAExE/f,KAAKsuB,kBAAkB1a,QAAQrY,KAAKC,UAAUb,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGhT,GAAU,CAAE6N,UAAWA,KAC/G,GACJ,CACAiX,qBAAAA,GACI,IAAIzsB,EAC8B,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,GAAyBA,EAAG2T,YAAY,gBAAgB,CAACd,EAAOkB,KACtG,IAAIid,GAAe,EAAInnB,EAAQoD,eAAe8G,IAC9C,EAAIlK,EAAQrQ,UAAU,2CAA2Cw3B,KACrC,YAAxBA,EAAa5hB,QAAgD,kBAAxB4hB,EAAa5hB,OAC9ClR,KAAK8xB,uBACL9xB,KAAK8xB,sBAAsBgB,GAGF,uBAAxBA,EAAa5hB,UAClB,EAAIvF,EAAQrQ,UAAU,gEAClB0E,KAAKyyB,6BACL,EAAI9mB,EAAQrQ,UAAU,yEACtB0E,KAAKyyB,4BACLzyB,KAAKyyB,+BAA4BvvB,GAEzC,IACD,WACH,GACJ,EAEJrI,EAAQozB,OAASA,C,mCC3ZjBtzB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+U,qBAAuB/U,EAAQk4B,6BAA+Bl4B,EAAQ8U,2BAAwB,EACtG9U,EAAQ8U,sBAAwB,SAChC9U,EAAQk4B,6BAA+B,OACvCl4B,EAAQ+U,qBAAuB,K,qCCJ/B,IAAIhN,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAaG,GAClC4I,EAAa/I,EAAQ,OAAaG,E,qCCjBtBH,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAMs4B,EACF7qB,WAAAA,CAAY0S,EAAMgC,EAAQzQ,GACtBpM,KAAKlE,KAAOoM,EAAOwiB,iBACnB1qB,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,qBAC9B,CACAsC,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACA8gB,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3d,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,+BAAgCC,KAAKC,UAAUsE,KACpE,EAAIoI,EAAO5M,UAAU,4BAA6BC,KAAKC,UAAUwE,KAAK/D,aACjE+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAC9E,OAAOlR,KAAK6c,OAAOpT,QAAQ3J,GAG3B,MAAM,IAAIoI,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAAsB,yBAE9F,GACJ,CACAK,eAAAA,CAAgBlX,EAASmX,GAEhB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAChC,GAAoB,qBAAT4qB,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,CACJ,CACAzE,gBAAAA,CAAiBxjB,GACb,OAAO,CACX,EAEJjF,EAAAA,WAAkBm4B,C,qCCpHlB,IAAI/rB,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQo4B,0BAAuB,EAC/B,MAAMC,EAA2Bx4B,EAAQ,OACnCy4B,EAAuBz4B,EAAQ,OAC/B6E,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClB04B,EAAU14B,EAAQ,OACxB,MAAMu4B,UAA6BC,EAAyBrP,uBACxD,cAAI4E,GACA,MAAM,IAAItW,MAAM,0BACpB,CACAhK,WAAAA,GACIkrB,QACArzB,KAAKlE,KAAO,UACZkE,KAAKwiB,KAAO,2FACZxiB,KAAKnC,IAAM,GACXmC,KAAKszB,SAAW,UAChBtzB,KAAKuzB,YAAgC,qBAAX/1B,QAA8C,qBAAb6zB,SACrD8B,EAAqBzK,iBAAiB8K,YACtCL,EAAqBzK,iBAAiB+K,YAC5CzzB,KAAK0zB,UAA8B,qBAAXl2B,OAAyBA,OAAOm2B,aAAUzwB,EAClElD,KAAK4zB,cAAW1wB,EAChBlD,KAAK6zB,aAAc,EACnB7zB,KAAK8zB,QAAU,KACO,qBAAXt2B,QAA0BwC,KAAKuzB,cAAgBJ,EAAqBzK,iBAAiB8K,cAC5F,EAAI7nB,EAAQooB,gCAA+B,MACnCv2B,OAAOm2B,UACP3zB,KAAKuzB,YAAcJ,EAAqBzK,iBAAiBC,UACzD3oB,KAAK0Q,KAAK,mBAAoB1Q,KAAKuzB,cAC5B,IAKvB,CACA,iBAAIzP,GACA,IAAIhiB,EAAIC,EAAIC,EACZ,MAAO,CACHkH,WAAoC,QAAvBpH,EAAK9B,KAAK8zB,eAA4B,IAAPhyB,OAAgB,EAASA,EAAGoH,YAAc,KACtF9M,SAAkC,QAAvB2F,EAAK/B,KAAK8zB,eAA4B,IAAP/xB,OAAgB,EAASA,EAAG3F,UAAY,KAClF43B,SAAkC,QAAvBhyB,EAAKhC,KAAK8zB,eAA4B,IAAP9xB,OAAgB,EAASA,EAAGgyB,UAAY,KAE1F,CACA,cAAIC,GACA,OAAOj0B,KAAK6zB,WAChB,CACA,WAAIlpB,GACA,OAAO3K,KAAKszB,QAChB,CACA,WAAI72B,GACA,MAAO,CACHX,KAAMkE,KAAK4zB,SACXrrB,QAASvI,KAAKk0B,SAEtB,CACA5K,eAAAA,CAAgBhK,GACZ,OAAOrY,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QAC1C,IAAKzU,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,MAAMC,EAAuBC,GAAeptB,EAAUjH,UAAM,OAAQ,GAAQ,YACxE,MAAM,UAAEkJ,SAAkC,OAAbd,QAAkC,IAAbA,OAAsB,EAASA,EAASQ,UAC1F5I,KAAK8zB,QAAUn5B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGzc,KAAK8zB,SAAU,CAAE13B,QAASi4B,EAAYnrB,aAEzF,UACoB,OAAbd,QAAkC,IAAbA,OAAsB,EAASA,EAASkhB,gBAAgB8K,EACxF,CACA,MAAOxqB,GACYA,EAAM2H,QAErB,MAAM3H,CACV,EACA,EAAIwpB,EAAQ93B,UAAU,yCAC1B,GACJ,CACAg5B,eAAAA,GACI,OAAOrtB,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAIozB,EAAQ93B,UAAU,yCAC1B,GACJ,CACAgX,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,GAAMA,KAAKuzB,cAAgBJ,EAAqBzK,iBAAiB6L,UAC7Dv0B,KAAKuzB,cAAgBJ,EAAqBzK,iBAAiBC,UAC3D,MAAM,IAAIppB,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAE5E,GAAIn0B,KAAKi0B,WACL,OACJ,GAAIj0B,KAAK8b,UAEL,kBADM9b,KAAKw0B,eAGfx0B,KAAK6zB,aAAc,EACnB,MAAMzrB,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QACpCc,QAAkC,OAAbrsB,QAAkC,IAAbA,OAAsB,EAASA,EAASqsB,cACpFA,UACoB,OAAbrsB,QAAkC,IAAbA,OAAsB,EAASA,EAASgK,cAExE,MAAM5S,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAASkK,UACrF,IAAK9S,EACD,MAAM,IAAID,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,qBAEtEpc,KAAKw0B,aAEf,CACA,MAAO5qB,GACH,MAAMA,CACV,CAAC,QAEG5J,KAAK6zB,aAAc,CACvB,CACJ,GACJ,CACAW,WAAAA,GACI,OAAOvtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMoI,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QACpCe,QAAoC,OAAbtsB,QAAkC,IAAbA,OAAsB,EAASA,EAASQ,UAC1F,GAAI8rB,EAAe,CACf10B,KAAK8zB,QAAUn5B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGiY,GAAgB,CAAED,aAAa,IAC9E,MAAM34B,QAA2B,OAAbsM,QAAkC,IAAbA,OAAsB,EAASA,EAAS3L,WAC3E,QAAE8L,SAAkBH,EAAS4b,aACnChkB,KAAK4zB,SAAW93B,EAChBkE,KAAKk0B,SAAW3rB,EAAQ0J,UAC5B,CACJ,GACJ,CACAG,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QAC1C,GAAIzU,EAAQ,CACRlf,KAAK8zB,QAAU,KACf,UACwB,OAAb1rB,QAAkC,IAAbA,OAAsB,EAASA,EAASgK,YACxE,CACA,MAAOxI,GACP,CACJ,CACJ,GACJ,CACAuf,wBAAAA,CAAyBztB,EAASi5B,GAC9B,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QAC1C,IAAKzU,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,MAAMrqB,QAAoB1B,EAASwsB,oBAAoB1V,EAAO9iB,SAAW,GAAIV,EAASi5B,GACtF,IAAK7qB,EACD,MAAM,IAAIvK,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,8BAC/F,MAAMtF,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAAS+gB,yBAAyBrf,GAC9G,IAAKtK,EACD,MAAM,IAAI2S,MAAM,eAEpB,MAAO,CAAEiX,KAAM5pB,EACnB,CACA,MAAOoK,GACH,MAAMA,CACV,CACJ,GACJ,CACAmf,eAAAA,CAAgBrtB,EAASi5B,GACrB,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QAC1C,IAAKzU,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,MAAMrqB,QAAoB1B,EAASwsB,oBAAoB1V,EAAO9iB,SAAW,GAAIV,EAASi5B,GACtF,IAAK7qB,EACD,MAAM,IAAIvK,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,8BAC/F,MAAMtF,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAAS2gB,gBAAgBjf,GACrG,IAAKtK,EACD,MAAM,IAAI2S,MAAM,eAEpB,OAAO3S,CACX,CACA,MAAOoK,GACH,MAAMA,CACV,CACJ,GACJ,CACAR,WAAAA,CAAYmI,GACR,OAAOtK,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAK0zB,WAAal2B,OAAOm2B,QAC1C,IAAKzU,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,GAAuB,kBAAZ5iB,IAAyBA,EAAQ7G,MACxC,MAAM,IAAInL,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,+BAE/F,MAAMtF,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAASgB,YAAYmI,GACjG,GAAI/R,EACA,OAAOA,EAGP,MAAM,IAAI2S,MAAM,sBAExB,CACA,MAAOvI,GACH,MAAMA,CACV,CACJ,GACJ,EAEJ/O,EAAQo4B,qBAAuBA,C,wDC3NnBv4B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQg6B,yBAAsB,EAC9B,MAAMt1B,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBo6B,EAAUp6B,EAAQ,OACxB,MAAMm6B,EACF1sB,WAAAA,CAAY+W,GACRlf,KAAKkf,OAASA,CAClB,CACAqJ,UAAAA,GACI,OAAOvoB,KAAKkf,OAAOvU,OACvB,CACA6d,aAAAA,CAAczrB,GACV,OAAsB,IAAlBA,EAAOV,QAAgBU,EAAO,KAAOwC,EAAWwG,WAAWI,OAInE,CACA+N,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,KAEI,EAAI2L,EAAQrQ,UAAU,4BAA6BC,KAAKC,UAAUiO,IAClE,MAAMyH,EAASzH,EAAQyH,OACvB,IAAI7V,EACJ,GAAIoO,EAAQyd,cAAgBlnB,KAAKkf,OAAQ,CACrC,IAAI2J,EAAiBpf,EAAQyd,aAC7B,OAAQhW,GACJ,IAAK,2BACD,IAAI4X,EACJ,GAAI9oB,KAAKkf,OAAO6V,SAAS,uBACrBjM,QAAyB9oB,KAAKkf,OAAO6V,SAAS,uBAAuBhM,gBAAgBF,OAEpF,KAAI7oB,KAAKkf,OAAO6V,SAAS,4BAI1B,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAHxE0J,QAAyB9oB,KAAKkf,OAAO6V,SAAS,4BAA4BC,qBAAqBnM,EAInG,CAEAxtB,EAAS,CACL6V,OAAQ,2BACR7V,OAA6B,OAArBytB,QAAkD,IAArBA,OAA8B,EAASA,EAAiBG,WAEjG,MACJ,IAAK,qCACD,IAAIgM,EACJ,GAAIj1B,KAAKkf,OAAO6V,SAAS,iCACrBE,QAAyBj1B,KAAKkf,OAAO6V,SAAS,iCAAiCG,0BAA0BrM,OAExG,KAAI7oB,KAAKkf,OAAO6V,SAAS,sCAI1B,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAHxE6V,QAAyBj1B,KAAKkf,OAAO6V,SAAS,sCAAsCI,+BAA+BtM,EAIvH,CACAxtB,EAAS,CACL6V,OAAQ,qCACR7V,OAAQ45B,EAAiBG,QAE7B,MACJ,IAAK,kBACD,MAAMC,QAAqBr1B,KAAKkf,OAAO6V,SAAS,mBAAmB3rB,YAAYyf,GAC/ExtB,EAAS,CACL6V,OAAQ,kBACR7V,OAAQg6B,EAAapM,WAEzB,MACJ,IAAK,0BACD,MAAMqM,QAA6Bt1B,KAAKkf,OAAO6V,SAAS,2BAA2BQ,oBAAoB1M,GACvGxtB,EAAS,CACL6V,OAAQ,0BACR7V,OAAQi6B,EAAqBrM,WAEjC,MAEZ,CACA,OAAO5tB,CACX,CACA,MAAOwM,GAEH,MADA,EAAI8D,EAAQrQ,UAAU,0BAA2BuM,GAC3CA,CACV,CACJ,GACJ,CACAwhB,yBAAAA,GACA,CACA9J,cAAAA,GACA,CACAnN,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,YACvC,GACJ,CACAsS,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkf,OAAO6V,SAAS,oBAAoBziB,SACpD,GACJ,CACAJ,cAAAA,GACI,OAAI,EAAI4iB,EAAQU,UAAU,UACfx1B,KAAKsS,UAET9K,QAAQD,SACnB,CACAkB,UAAAA,GACI,OAAOxB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EACR,IAAI0zB,QAAqBz1B,KAAKsS,UAC9B,IAAKmjB,EACD,MAAM,IAAIl2B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,eAE7Dta,EAAsB,OAAjB2zB,QAA0C,IAAjBA,OAA0B,EAASA,EAAar5B,QAA7F,IACI8M,EAA0G,QAA7FnH,EAAsB,OAAjB0zB,QAA0C,IAAjBA,OAA0B,EAASA,EAAavsB,iBAA8B,IAAPnH,EAAgBA,EAAK,GACvImH,aAAqBwsB,aACrBxsB,EAAYlJ,KAAK21B,oBAAoBzsB,GACrCA,EAAY0sB,KAAK3P,OAAO4P,gBAAgB3sB,KAE5C,IAAIrM,EAAQ,CAAC,EAEb,OADAA,EAAM0C,EAAWwG,WAAWI,SAAW,CAAE+C,UAAWA,GAC7C,CACHjN,UAAWsD,EAAWuH,gBACtBnK,UAAW,CAAC,GAAG4C,EAAWwG,WAAWI,WAAWsvB,EAAar5B,WAC7DQ,QAAS64B,EAAaV,SACtBl4B,MAAOA,EAEf,GACJ,CACA84B,mBAAAA,CAAoBz5B,GAChB,OAAoB,KAAhBA,EAAKG,QAA6B,IAAZH,EAAK,GACpBA,EAAKkB,MAAM,GAEflB,CACX,EAEJrB,EAAQg6B,oBAAsBA,C,qCC/I9B,IAAIjyB,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQi7B,uBAAyBj7B,EAAQ2uB,gBAAkB3uB,EAAQojB,0BAA4BpjB,EAAQ2hB,0BAA4B3hB,EAAQ+J,cAAgB/J,EAAQkqB,eAAiBlqB,EAAQ4F,UAAY5F,EAAQ2F,KAAO3F,EAAQyF,kBAAoBzF,EAAQwF,yBAA2BxF,EAAQuF,cAAgBvF,EAAQsF,SAAWtF,EAAQmpB,WAAanpB,EAAQk7B,aAAel7B,EAAQm7B,uBAAyBn7B,EAAQo7B,cAAgBp7B,EAAQ01B,MAAQ11B,EAAQq7B,aAAer7B,EAAQs7B,aAAet7B,EAAQu7B,mBAAqBv7B,EAAQw7B,kBAAoBx7B,EAAQoU,YAAcpU,EAAQwU,eAAiBxU,EAAQk1B,WAAal1B,EAAQy7B,0BAA4Bz7B,EAAQ07B,0BAA4B17B,EAAQ80B,oBAAsB90B,EAAQu1B,iCAAmCv1B,EAAQ27B,wBAA0B37B,EAAQ47B,qBAAuB57B,EAAQ67B,4BAA8B77B,EAAQ87B,cAAgB97B,EAAQw1B,4BAA8Bx1B,EAAQ+7B,gBAAkB/7B,EAAQg8B,iBAAmBh8B,EAAQ4T,kBAAoB5T,EAAQkU,cAAgBlU,EAAQkgB,mBAAqBlgB,EAAQyS,YAAczS,EAAQqS,UAAYrS,EAAQ8xB,WAAa9xB,EAAQsY,SAAWtY,EAAQS,SAAWT,EAAQi8B,oBAAiB,EAC3pC,IAAIC,EAAqBr8B,EAAQ,OACjCC,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOuzB,EAAmBD,cAAgB,IAClI,IAAI57B,EAAQR,EAAQ,OACpBC,OAAOC,eAAeC,EAAS,WAAY,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOtI,EAAMI,QAAU,IACzGX,OAAOC,eAAeC,EAAS,WAAY,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOtI,EAAMiY,QAAU,IACzGxY,OAAOC,eAAeC,EAAS,aAAc,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOtI,EAAMyxB,UAAY,IAC7GhyB,OAAOC,eAAeC,EAAS,YAAa,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOtI,EAAMgS,SAAW,IAC3GvS,OAAOC,eAAeC,EAAS,cAAe,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOtI,EAAMoS,WAAa,IAC/G3S,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOtI,EAAM6f,kBAAoB,IAC7HtX,EAAa/I,EAAQ,OAAsBG,GAC3C4I,EAAa/I,EAAQ,OAAaG,GAClC,IAAIiR,EAAapR,EAAQ,OACzBC,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsI,EAAWiD,aAAe,IACxHpU,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsI,EAAW2C,iBAAmB,IAChI,IAAIxC,EAAQvR,EAAQ,OACpBC,OAAOC,eAAeC,EAAS,mBAAoB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAM4qB,gBAAkB,IACzHl8B,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAM2qB,eAAiB,IACvHj8B,OAAOC,eAAeC,EAAS,8BAA+B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMokB,2BAA6B,IAC/I11B,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAM0qB,aAAe,IACnHh8B,OAAOC,eAAeC,EAAS,8BAA+B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMyqB,2BAA6B,IAC/I/7B,OAAOC,eAAeC,EAAS,uBAAwB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMwqB,oBAAsB,IACjI97B,OAAOC,eAAeC,EAAS,0BAA2B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMuqB,uBAAyB,IACvI77B,OAAOC,eAAeC,EAAS,mCAAoC,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMmkB,gCAAkC,IACzJz1B,OAAOC,eAAeC,EAAS,sBAAuB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAM0jB,mBAAqB,IAC/Hh1B,OAAOC,eAAeC,EAAS,4BAA6B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMsqB,yBAA2B,IAC3I57B,OAAOC,eAAeC,EAAS,4BAA6B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAMqqB,yBAA2B,IAC3I37B,OAAOC,eAAeC,EAAS,aAAc,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyI,EAAM8jB,UAAY,IAC7G,IAAIpkB,EAAUjR,EAAQ,OACtBC,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQ0D,cAAgB,IACvH1U,OAAOC,eAAeC,EAAS,cAAe,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQsD,WAAa,IACjHtU,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQ0qB,iBAAmB,IAC7H17B,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQyqB,kBAAoB,IAC/Hz7B,OAAOC,eAAeC,EAAS,eAAgB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQwqB,YAAc,IACnHx7B,OAAOC,eAAeC,EAAS,eAAgB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQuqB,YAAc,IACnHv7B,OAAOC,eAAeC,EAAS,QAAS,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQ4kB,KAAO,IACrG51B,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQsqB,aAAe,IACrHt7B,OAAOC,eAAeC,EAAS,yBAA0B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQqqB,sBAAwB,IACvIr7B,OAAOC,eAAeC,EAAS,eAAgB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQoqB,YAAc,IACnHp7B,OAAOC,eAAeC,EAAS,aAAc,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAAQqY,UAAY,IAC/G,IAAIgT,EAAYt8B,EAAQ,MACxBC,OAAOC,eAAeC,EAAS,WAAY,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOwzB,EAAU72B,QAAU,IAC7GxF,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOwzB,EAAU52B,aAAe,IACvHzF,OAAOC,eAAeC,EAAS,2BAA4B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOwzB,EAAU32B,wBAA0B,IAC7I1F,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOwzB,EAAU12B,iBAAmB,IAC/H3F,OAAOC,eAAeC,EAAS,OAAQ,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOwzB,EAAUx2B,IAAM,IACrG7F,OAAOC,eAAeC,EAAS,YAAa,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOwzB,EAAUv2B,SAAW,IAC/G,IAAIE,EAAYjG,EAAQ,OACxBC,OAAOC,eAAeC,EAAS,iBAAkB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO7C,EAAUokB,cAAgB,IACzH,IAAIkS,EAAYv8B,EAAQ,MACxBC,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOyzB,EAAUryB,aAAe,IACvH,IAAIwuB,EAAU14B,EAAQ,OACtBC,OAAOC,eAAeC,EAAS,4BAA6B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO4vB,EAAQ5W,yBAA2B,IAC7I7hB,OAAOC,eAAeC,EAAS,4BAA6B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO4vB,EAAQnV,yBAA2B,IAC7ItjB,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO4vB,EAAQ5J,eAAiB,IACzH7uB,OAAOC,eAAeC,EAAS,yBAA0B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO4vB,EAAQ0C,sBAAwB,G,qCCtEvIn7B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuJ,wBAAqB,EAC7B,MAAMI,EAAgB9J,EAAQ,OACxBwzB,EAAexzB,EAAQ,OACvBiR,EAAUjR,EAAQ,OAClB8Q,EAAc9Q,EAAQ,MACtB6E,EAAa7E,EAAQ,OAC3B,MAAM0J,UAA2BI,EAAcP,YAC3C6qB,OAAAA,GACI,OAAOZ,EAAaxE,eAAeU,GAAGN,cAC1C,CACA3hB,WAAAA,GACIkrB,QACArzB,KAAKywB,WAAa,iBAClBzwB,KAAKk3B,cAAgB,8CACzB,CACAvG,MAAAA,GACI,OAAOzC,EAAapE,cACxB,CACAvG,UAAAA,CAAWC,EAAmB/H,GAC1B,IAAI3Z,EACJ,IAAIq1B,EAA+B,OAApB1b,QAAgD,IAApBA,EAA6BA,EAAkBlc,EAAWgc,gBAAgBC,cACrH,GAAIgI,GAAqBA,EAAkB2M,eAAgB,EACvD,EAAIxkB,EAAQrQ,UAAU,4FAA4FC,KAAKC,UAAUgoB,MACjI,IAAI4T,EAAsB5T,EAAkB2M,gBACvC,EAAIxkB,EAAQoqB,kBACbqB,EAAsBz8B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAG+G,EAAkB2M,gBAAiB,CAAEzT,SAAgD,QAArC5a,EAAK0hB,EAAkB9G,gBAA6B,IAAP5a,EAAgBA,EAAK,UAE5K,IAAI,cAAE8tB,EAAa,SAAEC,IAAa,EAAIlkB,EAAQokB,YAAYqH,IAC1D,EAAIzrB,EAAQ0kB,6BAA6BR,EAAUD,EAAeuH,EACtE,MAEQ,EAAIxrB,EAAQnL,MAAM,YAClB,EAAImL,EAAQtL,0BAA0BmL,EAAYhN,eAAe,UAGjE,EAAImN,EAAQ0kB,6BAA6B7kB,EAAY5M,iBAAkB4M,EAAY1M,mBAAoBq4B,EAGnH,EAEJt8B,EAAQuJ,mBAAqBA,C,qCC1CjB1J,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIqF,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EAmBA,SAASo3B,EAAiB37B,GACtB,MAA2B,kBAAZA,GACX,OAAQA,GACR,YAAaA,GACO,QAApBA,EAAQ2Y,OAChB,CACA,SAASijB,EAAiB57B,GACtB,OAAO27B,EAAiB37B,IAAY,WAAYA,CACpD,CACA,SAAS+d,EAAkB/d,GACvB,OAAO27B,EAAiB37B,KAAa67B,EAAgB77B,IAAY8d,EAAe9d,GACpF,CACA,SAAS67B,EAAgB77B,GACrB,MAAO,WAAYA,CACvB,CACA,SAAS8d,EAAe9d,GACpB,MAAO,UAAWA,CACtB,CAnCAf,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQw8B,iBAAmBA,EAC3Bx8B,EAAQy8B,iBAAmBA,EAC3Bz8B,EAAQ4e,kBAAoBA,EAC5B5e,EAAQ08B,gBAAkBA,EAC1B18B,EAAQ2e,eAAiBA,EACzB3e,EAAQ28B,UAAYA,EACpB38B,EAAQye,eAAiBA,EACzBze,EAAQ0e,qBAAuBA,EAC/B1e,EAAQ48B,oBAAsBA,EAC9B58B,EAAQ+e,mBAAqBA,EAC7B/e,EAAQ68B,oBAAsBA,EAC9B78B,EAAQ88B,SAAWA,EACnB98B,EAAQ+8B,eAAiBA,EACzB/8B,EAAQg9B,mBAAqBA,EAC7Bh9B,EAAQ8e,UAAYA,EACpB9e,EAAQi9B,QAAUA,EAClBj9B,EAAQ6e,qBAAuBA,EAmB/B,MAAMqe,EAAsBr9B,EAAQ,OAC9Bs9B,EAAcj4B,EAAgBrF,EAAQ,QAC5C,MAAMu9B,EACF9vB,WAAAA,CAAY+vB,GACRl4B,KAAKkL,EAAI,EACmB,IAATgtB,EAAa,IAAIxC,WAAW,GAAc,KAATwC,EAAc,IAAIC,YAAY,GAAK,IAAIC,YAAY,GAEnGp4B,KAAKq4B,aADLH,EACoBF,EAAY91B,QAAQo2B,YAAYJ,EAAO,GAAG,GAG1C,CAE5B,CACAK,YAAAA,GACI,OAAOv4B,KAAKq4B,aAAer4B,KAAKkL,GACpC,EAEJ,MAAMstB,EAAiB,IAAIP,EAA2B,GAChDQ,EAAkB,IAAIR,EAA2B,IACvD,SAAST,IACL,MAAMkB,EAAoB,IAAb1qB,KAAKC,MACZpR,EAAQ27B,EAAeD,eAC7B,OAAOG,EAAO77B,CAClB,CACA,SAASyc,IACL,MAAMof,EAAOC,OAAO3qB,KAAKC,OAAS0qB,OAAO,KACnC97B,EAAQ87B,OAAOF,EAAgBF,gBACrC,OAAOG,EAAO77B,CAClB,CACA,SAAS0c,EAAqBrI,EAAQF,EAAQL,GAC1C,MAAO,CACHA,GAAIA,GAAM6mB,IACVnjB,QAAS,MACTnD,SACAF,SAER,CACA,SAASymB,EAAoB9mB,EAAItV,GAC7B,MAAO,CACHsV,KACA0D,QAAS,MACThZ,SAER,CACA,SAASue,EAAmBjJ,EAAI/G,EAAO1N,GACnC,MAAO,CACHyU,KACA0D,QAAS,MACTzK,MAAOiuB,EAAmBjuB,EAAO1N,GAEzC,CACA,SAASw7B,EAAoBlkB,GACzB,OAAOukB,EAAoBa,qBAAqBz5B,SAASqU,EAC7D,CACA,SAASmkB,EAASnK,GACd,OAAK7yB,OAAO2hB,KAAKyb,EAAoBc,oBAAoB15B,SAASquB,GAG3DuK,EAAoBc,mBAAmBrL,GAFnCuK,EAAoBc,mBAAmBd,EAAoBe,cAG1E,CACA,SAASlB,EAAepkB,GACpB,MAAMulB,EAAQp+B,OAAOgM,OAAOoxB,EAAoBc,oBAAoBj9B,MAAMiM,GAAMA,EAAE2L,OAASA,IAC3F,OAAKulB,GACMhB,EAAoBc,mBAAmBd,EAAoBe,cAG1E,CACA,SAASjB,EAAmBjuB,EAAO1N,GAC/B,MAAqB,qBAAV0N,EACA+tB,EAASI,EAAoBiB,iBAEnB,kBAAVpvB,IACPA,EAAQjP,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGkb,EAASI,EAAoBkB,eAAgB,CAAE1nB,QAAS3H,KAEhF,qBAAT1N,IACP0N,EAAM1N,KAAOA,GAEbw7B,EAAoB9tB,EAAM4J,QAC1B5J,EAAQguB,EAAehuB,EAAM4J,OAE1B5J,EACX,CACA,SAASsvB,EAAer7B,GACpB,MAAMs7B,EAAUt7B,EAAIk7B,MAAM,IAAIK,OAAO,QAAS,OAC9C,GAAKD,GAAYA,EAAQ98B,OAEzB,OAAO88B,EAAQ,EACnB,CACA,SAASE,EAAmBx7B,EAAKy7B,GAC7B,MAAMC,EAAWL,EAAer7B,GAChC,MAAwB,qBAAb07B,GAEJ,IAAIH,OAAOE,GAAO73B,KAAK83B,EAClC,CACA,SAAS5f,EAAU9b,GACf,OAAOw7B,EAAmBx7B,EAAK,WACnC,CACA,SAASi6B,EAAQj6B,GACb,OAAOw7B,EAAmBx7B,EAAK,SACnC,CACA,SAAS6b,EAAqB7R,EAAGhK,EAAK2vB,GAClC,OAAO3lB,EAAE0J,QAAQpS,SAAS,0BAA4B0I,EAAE0J,QAAQpS,SAAS,wBACnE,IAAIgT,MAAM,eAAeqb,gBAAmB3vB,KAC5CgK,CACV,C,qCC/IA,IAAIZ,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmtB,qBAAkB,EAC1B,MAAMvc,EAAkB/Q,EAAQ,OAC1B8+B,EAAU9+B,EAAQ,OAClBwN,EAASxN,EAAQ,OACjB++B,EAAS/+B,EAAQ,OACvB,MAAMstB,UAAwBwR,EAAQE,iBAClCvxB,WAAAA,CAAYwxB,GACRtG,MAAMsG,GACN35B,KAAKoM,OAAS,IAAIX,EAAgBY,aAClCrM,KAAK8b,WAAY,EACjB9b,KAAKi0B,YAAa,EAClBj0B,KAAK45B,6BAA8B,EACnC55B,KAAK25B,WAAa35B,KAAK65B,cAAcF,GACjC35B,KAAK25B,WAAW7d,WAChB9b,KAAKkgB,wBAEb,CACA5N,OAAAA,GACI,OAAOrL,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW4pB,EAAa35B,KAAK25B,kBAC7D35B,KAAKc,KAAK64B,EACpB,GACJ,CACAvnB,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK85B,OACf,GACJ,CACAza,EAAAA,CAAG1K,EAAO2K,GACNtf,KAAKoM,OAAOiT,GAAG1K,EAAO2K,EAC1B,CACAje,IAAAA,CAAKsT,EAAO2K,GACRtf,KAAKoM,OAAO/K,KAAKsT,EAAO2K,EAC5B,CACAE,GAAAA,CAAI7K,EAAO2K,GACPtf,KAAKoM,OAAOoT,IAAI7K,EAAO2K,EAC3B,CACAC,cAAAA,CAAe5K,EAAO2K,GAClBtf,KAAKoM,OAAOmT,eAAe5K,EAAO2K,EACtC,CACA7V,OAAAA,CAAQA,EAASswB,GACb,OAAO9yB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKg6B,eAAc,EAAI9xB,EAAOqR,sBAAsB9P,EAAQyH,OAAQzH,EAAQuH,QAAU,IAAI,EAAI9I,EAAOoR,kBAAkBrH,YAC9H8nB,EACJ,GACJ,CAEAC,aAAAA,CAAcvwB,EAASswB,GACnB,OAAO9yB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAKA,KAAK25B,WAAW7d,UACjB,UACU9b,KAAKc,MACf,CACA,MAAO+G,GACHJ,EAAOI,EACX,CAEJ7H,KAAKoM,OAAOiT,GAAG,GAAG5V,EAAQkH,MAAOnR,KACzB,EAAI0I,EAAOsR,gBAAgBha,GAC3BiI,EAAOjI,EAASoK,OAGhBrC,EAAQ/H,EAASnE,OACrB,IAEJ,KACI,EAAIo+B,EAAOn+B,UAAU,yBAA0BmO,EAASswB,SAClD/5B,KAAK25B,WAAWzlB,KAAKzK,EAASswB,EACxC,CACA,MAAOlyB,GACHJ,EAAOI,EACX,CACJ,KACJ,GACJ,CACAgyB,aAAAA,CAAcF,EAAa35B,KAAK25B,YAC5B,OAAOA,CACX,CACAM,SAAAA,CAAUv+B,GACNsE,KAAKoM,OAAOsE,KAAK,UAAWhV,IACxB,EAAIwM,EAAOuR,mBAAmB/d,GAC9BsE,KAAKoM,OAAOsE,KAAK,GAAGhV,EAAQiV,KAAMjV,GAGlCsE,KAAKoM,OAAOsE,KAAK,UAAW,CACxB8c,KAAM9xB,EAAQwV,OACdhV,KAAMR,EAAQsV,QAG1B,CACAkpB,OAAAA,CAAQvlB,GAEAA,GAAwB,MAAfA,EAAMnB,MACfxT,KAAKoM,OAAOsE,KAAK,QAAS,IAAIyB,MAAM,qDAAqDwC,EAAMnB,QAAQmB,EAAMoC,OAAS,IAAIpC,EAAMoC,UAAY,OAEhJ/W,KAAKoM,OAAOsE,KAAK,aACrB,CACA5P,IAAAA,GACI,OAAOmG,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW4pB,EAAa35B,KAAK25B,YAC/D35B,KAAK25B,aAAeA,GAAc35B,KAAK25B,WAAW7d,YAElD9b,KAAK25B,WAAW7d,WAChB9b,KAAK85B,QACiB,kBAAfH,UACD35B,KAAK25B,WAAW74B,KAAK64B,GAC3BA,EAAa35B,KAAK25B,YAEtB35B,KAAK25B,WAAa35B,KAAK65B,cAAcF,SAC/B35B,KAAK25B,WAAW74B,OACtBd,KAAKkgB,yBACLlgB,KAAKoM,OAAOsE,KAAK,WACrB,GACJ,CACAopB,KAAAA,GACI,OAAO7yB,EAAUjH,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK25B,WAAWG,OAC1B,GACJ,CAEA5Z,sBAAAA,GACQlgB,KAAK45B,8BAET55B,KAAK25B,WAAWta,GAAG,WAAY3jB,GAAYsE,KAAKi6B,UAAUv+B,KAC1DsE,KAAK25B,WAAWta,GAAG,SAAU1K,GAAU3U,KAAKk6B,QAAQvlB,KACpD3U,KAAK25B,WAAWta,GAAG,SAAUzV,GAAU5J,KAAKoM,OAAOsE,KAAK,QAAS9G,KACjE5J,KAAK25B,WAAWta,GAAG,kBAAmB8a,GAAWn6B,KAAKk6B,YACtDl6B,KAAK45B,6BAA8B,EACvC,EAEJ/+B,EAAQmtB,gBAAkBA,C,qCC3I1B,IAAIplB,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAWG,GAChC4I,EAAa/I,EAAQ,OAAcG,E,qCCjBvBH,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuxB,iBAAc,EACtB,MAAM7sB,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBo6B,EAAUp6B,EAAQ,OAClB0/B,EAAgB1/B,EAAQ,OAC9B,MAAM0xB,EACFjkB,WAAAA,GACInI,KAAKq6B,8BAA2Bn3B,EAChClD,KAAKs6B,yBAA2B,IACpC,CACApmB,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAI2L,EAAQrQ,UAAU,6BAA6B,EAAIqQ,EAAQ8C,mBAAmBhF,IAElF,IAAI8wB,EAAY,KAChB,OAAQ9wB,EAAQyH,QACZ,IAAK,sBACGzH,EAAQuH,SACRupB,EAAY,CACRrpB,OAAQ,kBACRF,OAAQ,CAACzV,KAAKC,UAAUiO,EAAQuH,SAChCL,GAAI3C,KAAKC,MAAMgE,aAEnB,EAAItG,EAAQrQ,UAAU,+BAAgCC,KAAKC,UAAU++B,KAEzE,MACJ,QACI,MAAM,IAAIh7B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAEhF,GAAImb,EAAW,CACX,MAAMC,QAAiBh9B,OAAOi9B,aAAaC,WAAWxmB,KAAKqmB,GAE3D,IADA,EAAI5uB,EAAQrQ,UAAU,oCAAoC,EAAIqQ,EAAQ8C,mBAAmB+rB,IACrFA,EAAS5wB,MACT,MAAM,IAAIrK,EAAWI,gBAAgB66B,EAAS5wB,MAAM4J,KAAMgnB,EAAS5wB,MAAM2H,SAE7E,MAAO,CACHlW,OAAQm/B,EAASn/B,OACjB6V,OAAQzH,EAAQyH,OAExB,CAEI,MAAM,IAAI3R,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,qBAEhF,CACA,MAAOxV,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,oCAAqCsO,GACrDA,CACV,CACJ,GACJ,CACAsI,cAAAA,GAII,OAAO1K,QAAQD,SACnB,CACAozB,oBAAAA,CAAqBC,EAASC,EAAeC,EAAaC,EAAwBC,EAA8BtY,GAC5G,OAAOzb,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIi7B,EAAe,GACnBF,EAAuBj+B,SAAQjB,IACvBA,EAAKI,YAAcsD,EAAWsH,iBAC9Bo0B,EAAa3+B,QAAQT,EAAKkB,OAC9B,IAEJ,IAAIJ,EAAY,GACZE,EAAQ,CAAC,EAeb,GAdAo+B,EAAan+B,SAASo+B,KACC,EAAIvvB,EAAQqY,YAAYkX,GAA3C,IACIC,EAAkBH,EAA6B5+B,QAAQR,MAAMoB,GAC7B,QAAxBA,EAAYuL,SAA8C,MAAzBvL,EAAYo+B,UAC7Cp+B,EAAYq+B,mBAAqBH,IAEzCC,IACAx+B,EAAUL,KAAK4+B,EAAW,IAAMC,EAAgB/+B,SAChDS,EAAMq+B,GAAY,CACdhyB,UAAWiyB,EAAgBjyB,WAEnC,KAEJ,EAAIyC,EAAQrQ,UAAU,2DAA4Ds/B,EAASr/B,KAAKC,UAAUmB,IACtGA,GAAaA,EAAUN,OAAS,EAAG,CACnC,IAIIi/B,EAJAC,EAAUR,EAAuBn/B,MAAK2/B,GAC/BA,EAAQt/B,YAAcsD,EAAWsH,kBAI5C,IAFA,EAAI8E,EAAQrQ,UAAU,yCAA0CC,KAAKC,UAAU+/B,MAE3EA,GAAWA,EAAQvqB,QAAU0R,GAAYA,EAASD,aA0BlD,MAAM,IAAIljB,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,sBA1BxB,CAC/Dpc,KAAK0iB,SAAWA,EAChB,IAAI8Y,EAAQ,CAACD,EAAQvqB,OAAO7U,UACxB6U,EAAS,CACTyR,YAAaC,EAASD,YACtBgZ,MAAOD,GAEPE,EAAYd,GAAWC,EACvBa,GAAaH,EAAQvqB,OAAOtU,WAC5B8+B,EAAMl/B,KAAKi/B,EAAQvqB,OAAOtU,YAE9B,EAAIiP,EAAQrQ,UAAU,4CAA6CC,KAAKC,UAAUwV,IAE9EsqB,GADA,EAAIxG,EAAQU,UAAU,WAIlBoF,GAAWC,QAHIr9B,OAAOi9B,aAAaC,WAAWpoB,QAAQ,EAAGtB,SAQtCxT,OAAOi9B,aAAaC,WAAWiB,mBAG9D,CASA,GALIb,GAAe96B,KAAKq6B,2BACpBiB,EAAYt7B,KAAKq6B,yBACjBr6B,KAAKq6B,8BAA2Bn3B,IAEpC,EAAIyI,EAAQrQ,UAAU,4CAA6CC,KAAKC,UAAU8/B,IAC9EA,GAAaC,EAAS,CACtB,GAAwB,kBAApBD,EAAU3mB,MACV,MAAM,IAAIpV,EAAWI,gBAAgB27B,EAAU5/B,QAAQ8X,KAAM8nB,EAAU5/B,QAAQ6V,SAE9E,CACD,IAAIpV,EAAWm/B,EAAU5/B,QAAQ+/B,MAAM7/B,MAAKC,GAAsB,aAAdA,EAAKC,OACrDY,EAAY4+B,EAAU5/B,QAAQ+/B,MAAM7/B,MAAKC,GAAsB,cAAdA,EAAKC,QAC1D,EAAI6P,EAAQrQ,UAAU,sCAAuCw/B,GAC7D,IAAIc,EAAoB,CACpB3/B,UAAWsD,EAAWsH,gBACtBlK,UAAWA,EACXC,QAAS,IAAIw9B,EAAcyB,YAC3Bh/B,MAAOA,EACPX,KAAM,CACFC,SAAUA,EACVO,UAAWA,EACX+lB,YAAaC,EAASD,cAG9B,OAAOmZ,CACX,CACJ,CACJ,CACA,MACJ,CACA,MAAOhyB,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,2CAA4CC,KAAKC,UAAUoO,IAC3EA,CACV,CACJ,GACJ,CACA0I,OAAAA,CAAQiL,EAAWmF,GACf,OAAOzb,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,KAAIud,GAAamF,GAAYA,EAASD,aAAelF,EAAUvM,QAuB3D,MAAM,IAAIzR,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,gCAvBpB,CACnEpc,KAAK0iB,SAAWA,EAChB,IAAI8Y,EAAQ,CAACje,EAAUvM,OAAO7U,UAC1B6U,EAAS,CACTyR,YAAaC,EAASD,YACtBgZ,MAAOD,GAEPje,EAAUvM,OAAOtU,WACjB8+B,EAAMl/B,KAAKihB,EAAUvM,OAAOtU,YAEhC,EAAIiP,EAAQrQ,UAAU,+BAAgCC,KAAKC,UAAUwV,IACrE,IACI,IAAIsqB,QAAkB99B,OAAOi9B,aAAaC,WAAWpoB,QAAQ,EAAGtB,GAGhE,OAFA,EAAIrF,EAAQrQ,UAAU,kCAAmCC,KAAKC,UAAU8/B,IACxEt7B,KAAKq6B,yBAA2BiB,EACzBA,CACX,CACA,MAAO1xB,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,8BAA+BC,KAAKC,UAAUoO,IAC9D,IAAIrK,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,mBAC3F,CACJ,CAIJ,GACJ,CACA0f,aAAAA,CAAcve,EAAWmF,GACrB,OAAO1iB,KAAKsS,QAAQiL,EAAWmF,EACnC,CACA2G,yBAAAA,CAA0BoF,GACtBtL,QAAQpX,IAAI,uCAAwC,OACpD/L,KAAKs6B,yBAA2B,KAC5BnX,QAAQpX,IAAI,2CAA4CiC,KAAKC,MAAO,OACpEwgB,GAAuB,EAE3BjxB,OAAOi9B,aAAaC,WAAWrb,GAAG,iBAAkBrf,KAAKs6B,yBAC7D,CACA/a,cAAAA,GACQvf,KAAKs6B,0BACL98B,OAAOi9B,aAAaC,WAAWlb,IAAI,iBAAkBxf,KAAKs6B,yBAElE,EAEJz/B,EAAQuxB,YAAcA,C,mCC9MtB,IAAI7Q,EAFJ5gB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkO,qBAAuBlO,EAAQ6vB,iBAAmB7vB,EAAQmM,mBAAqBnM,EAAQkM,kBAAoBlM,EAAQ6L,gBAAkB7L,EAAQiM,gBAAkBjM,EAAQgM,gBAAkBhM,EAAQ+L,gBAAkB/L,EAAQkhC,mBAAqBlhC,EAAQ0gB,qBAAkB,EAElR,SAAWA,GACPA,EAAgB,iBAAmB,gBACnCA,EAAgB,YAAc,UACjC,CAHD,CAGGA,IAAoB1gB,EAAQ0gB,gBAAkBA,EAAkB,CAAC,IACpE1gB,EAAQkhC,mBAAqB,SAC7BlhC,EAAQ+L,gBAAkB,SAC1B/L,EAAQgM,gBAAkB,MAC1BhM,EAAQiM,gBAAkB,MAC1BjM,EAAQ6L,gBAAkB,MAC1B7L,EAAQkM,kBAAoB,QAC5BlM,EAAQmM,mBAAqB,SAC7BnM,EAAQ6vB,iBAAmB,OAC3B7vB,EAAQkO,qBAAuB,U,mCCf/BpO,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQi+B,cAAgBj+B,EAAQg+B,mBAAqBh+B,EAAQmhC,wBAA0BnhC,EAAQ+9B,qBAAuB/9B,EAAQo+B,aAAep+B,EAAQm+B,eAAiBn+B,EAAQohC,eAAiBphC,EAAQqhC,iBAAmBrhC,EAAQshC,gBAAkBthC,EAAQuhC,YAAcvhC,EAAQ+E,wBAA0B/E,EAAQ8E,qBAAkB,EACtU,MAAMA,UAAwBwS,MAC1BhK,WAAAA,CAAYqL,EAAMjC,QACCrO,GAAXqO,IACAA,EAAU8qB,EAAwB7oB,IAEtC6f,MAAM9hB,GACNvR,KAAKwT,KAAOA,EACZxT,KAAKuR,QAAU,GAAG5R,EAAgB28B,UAAU/qB,EAAU,KAAOA,EAAU,KACvE5W,OAAO4hC,eAAev8B,KAAML,EAAgBgE,UAChD,CACA64B,MAAAA,GACI,MAAO,CACHjrB,QAASvR,KAAKuR,QACdiC,KAAMxT,KAAKwT,KAEnB,EAIJ,SAAS6oB,EAAwB7oB,GAC7B,OAAIA,GAAQ5T,EAAwBwc,cACzB,gBAEF5I,GAAQ5T,EAAwBkF,kBAC9B,oBAEF0O,GAAQ5T,EAAwB68B,wBAC9B,0BAEFjpB,GAAQ5T,EAAwBmc,oBAC9B,sBAEFvI,GAAQ5T,EAAwB88B,kBAC9B,oBAEFlpB,GAAQ5T,EAAwBC,mBAC9B,qBAEF2T,GAAQ5T,EAAwB+8B,kCAC9B,iCAEFnpB,GAAQ5T,EAAwBwf,qBAC9B,uBAEF5L,GAAQ5T,EAAwBg9B,iBAC9B,gBAEFppB,GAAQ5T,EAAwB4I,oBAC9B,sBAEJ,eACX,CACA,IAAI5I,EAnCJ/E,EAAQ8E,gBAAkBA,EAC1BA,EAAgB28B,OAAS,0BAmCzB,SAAW18B,GACPA,EAAwBA,EAAwB,iBAAmB,GAAK,gBACxEA,EAAwBA,EAAwB,qBAAuB,GAAK,oBAC5EA,EAAwBA,EAAwB,2BAA6B,IAAM,0BACnFA,EAAwBA,EAAwB,uBAAyB,IAAM,sBAC/EA,EAAwBA,EAAwB,qBAAuB,KAAO,oBAC9EA,EAAwBA,EAAwB,sBAAwB,KAAO,qBAC/EA,EAAwBA,EAAwB,qCAAuC,KAAO,oCAC9FA,EAAwBA,EAAwB,wBAA0B,KAAO,uBACjFA,EAAwBA,EAAwB,uBAAyB,KAAO,sBAChFA,EAAwBA,EAAwB,wBAA0B,KAAO,uBACjFA,EAAwBA,EAAwB,oBAAsB,KAAO,kBAChF,CAZD,CAYGA,IAA4B/E,EAAQ+E,wBAA0BA,EAA0B,CAAC,IAC5F/E,EAAQuhC,YAAc,cACtBvhC,EAAQshC,gBAAkB,kBAC1BthC,EAAQqhC,iBAAmB,mBAC3BrhC,EAAQohC,eAAiB,iBACzBphC,EAAQm+B,eAAiB,iBACzBn+B,EAAQo+B,aAAe,eACvBp+B,EAAQ+9B,qBAAuB,EAAE,OAAQ,OAAQ,OAAQ,OAAQ,OACjE/9B,EAAQmhC,wBAA0B,EAAE,MAAQ,OAC5CnhC,EAAQg+B,mBAAqB,CACzB,CAACh+B,EAAQuhC,aAAc,CAAE5oB,MAAO,MAAOjC,QAAS,eAChD,CAAC1W,EAAQshC,iBAAkB,CAAE3oB,MAAO,MAAOjC,QAAS,mBACpD,CAAC1W,EAAQqhC,kBAAmB,CAAE1oB,MAAO,MAAOjC,QAAS,oBACrD,CAAC1W,EAAQohC,gBAAiB,CAAEzoB,MAAO,MAAOjC,QAAS,kBACnD,CAAC1W,EAAQm+B,gBAAiB,CAAExlB,MAAO,MAAOjC,QAAS,kBACnD,CAAC1W,EAAQo+B,cAAe,CAAEzlB,MAAO,KAAOjC,QAAS,iBAErD1W,EAAQi+B,cAAgBj+B,EAAQo+B,Y,qCCpFhC,IAAIr2B,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAYG,GACjC4I,EAAa/I,EAAQ,OAAYG,E,qCChBjC,IAAI+H,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI4H,EAAsB5K,MAAQA,KAAK4K,qBAAwBjQ,OAAOkI,OAAU,SAASC,EAAG+H,GACxFlQ,OAAOC,eAAekI,EAAG,UAAW,CAAES,YAAY,EAAMzI,MAAO+P,GACnE,EAAK,SAAS/H,EAAG+H,GACb/H,EAAE,WAAa+H,CACnB,GACIC,EAAgB9K,MAAQA,KAAK8K,cAAkB,WAC/C,IAAIC,EAAU,SAASjI,GAMnB,OALAiI,EAAUpQ,OAAOqQ,qBAAuB,SAAUlI,GAC9C,IAAImI,EAAK,GACT,IAAK,IAAIjI,KAAKF,EAAOnI,OAAOgJ,UAAUC,eAAeC,KAAKf,EAAGE,KAAIiI,EAAGA,EAAG5O,QAAU2G,GACjF,OAAOiI,CACX,EACOF,EAAQjI,EACnB,EACA,OAAO,SAAU7C,GACb,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAI5E,EAAS,CAAC,EACd,GAAW,MAAP4E,EAAa,IAAK,IAAI+C,EAAI+H,EAAQ9K,GAAMiL,EAAI,EAAGA,EAAIlI,EAAE3G,OAAQ6O,IAAkB,YAATlI,EAAEkI,IAAkBtI,EAAgBvH,EAAQ4E,EAAK+C,EAAEkI,IAE7H,OADAN,EAAmBvP,EAAQ4E,GACpB5E,CACX,CACJ,CAhBmD,GAiB/C4L,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgiC,0BAA4BhiC,EAAQiiC,0BAA4BjiC,EAAQkiC,wBAA0BliC,EAAQmiC,4BAA8BniC,EAAQoiC,WAAapiC,EAAQqiC,WAAariC,EAAQsiC,cAAgBtiC,EAAQuiC,qBAAuBviC,EAAQwiC,cAAgBxiC,EAAQyiC,cAAgBziC,EAAQ0iC,aAAe1iC,EAAQ2iC,cAAgB3iC,EAAQ4iC,gBAAkB5iC,EAAQ6iC,gBAAkB7iC,EAAQ8iC,mBAAgB,EAC5Z9iC,EAAQyU,gBAAkBA,EAC1BzU,EAAQ+iC,WAAaA,EACrB/iC,EAAQgjC,WAAaA,EACrBhjC,EAAQijC,UAAYA,EACpBjjC,EAAQkjC,UAAYA,EACpBljC,EAAQmjC,UAAYA,EACpBnjC,EAAQojC,UAAYA,EACpBpjC,EAAQqjC,WAAaA,EACrBrjC,EAAQsjC,WAAaA,EACrBtjC,EAAQujC,UAAYA,EACpBvjC,EAAQwjC,UAAYA,EACpBxjC,EAAQ6U,QAAUA,EAClB7U,EAAQyjC,UAAYA,EACpB,MAAMC,EAAUzzB,EAAapQ,EAAQ,QAC/BoR,EAAapR,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBs9B,EAAcj4B,EAAgBrF,EAAQ,QACtCqR,EAAMjB,EAAapQ,EAAQ,QAC3B8jC,EAAgB9jC,EAAQ,OAgB9B,SAAS4U,IAGL,OAAO0oB,EAAY91B,QAAQu8B,KAAKlwB,SACpC,CACA,SAASqvB,EAAWhT,GAChB,OAAO,EAAI9e,EAAWiD,gBAAe,EAAIyvB,EAAcE,cAAa,EAAIF,EAAcG,eAAe/T,EAAK/vB,EAAQ0iC,cAAe1iC,EAAQyiC,eAC7I,CACA,SAASO,EAAWe,GAChB,OAAO,EAAIJ,EAAcE,cAAa,EAAIF,EAAcG,gBAAe,EAAI7yB,EAAW2C,mBAAmBmwB,GAAM/jC,EAAQyiC,eAAgBziC,EAAQ0iC,aACnJ,CACA,SAASO,EAAU50B,GACf6C,EAAIzQ,SAAS,eAAc,EAAIqQ,EAAQsD,aAAa/F,MACpD,IAAI21B,GAAe,EAAIL,EAAcE,aAAax1B,EAAWrO,EAAQmiC,6BACrE,MAAO,CAACniC,EAAQqiC,WAAYriC,EAAQoiC,WAAY4B,GAAcxhC,KAAKxC,EAAQsiC,cAC/E,CACA,SAASY,EAAUe,GACf,MAAOxC,EAAQprB,EAAQ6tB,GAAcD,EAAO5hC,MAAMrC,EAAQsiC,eAC1D,GAAIb,IAAWzhC,EAAQqiC,YAAchsB,IAAWrW,EAAQoiC,WACpD,MAAM,IAAI9qB,MAAM,0CAEpB,QAAmBjP,IAAf67B,EACA,MAAM,IAAI5sB,MAAM,2BAEpB,MAAMjJ,GAAY,EAAIs1B,EAAcG,eAAeI,EAAYlkC,EAAQmiC,6BACvE,QAAkB95B,IAAdgG,GAA2BA,EAAU7M,SAAWxB,EAAQgiC,0BACxD,MAAM,IAAI1qB,MAAM,oDAEpB,OAAOjJ,CACX,CAEA,SAAS80B,EAAUgB,GACf,OAAO,EAAIR,EAAcE,aAAaM,EAAOnkC,EAAQ0iC,aACzD,CACA,SAASU,EAAUgB,GACf,OAAO,EAAIT,EAAcG,eAAeM,EAASpkC,EAAQ0iC,aAC7D,CAEA,SAASW,EAAWltB,GAChB,OAAO,EAAIwtB,EAAcG,eAAe,CAACd,EAAW7sB,EAAOkuB,QAASrB,EAAW7sB,EAAOtV,UAAU2B,KAAKxC,EAAQ2iC,eAAgB3iC,EAAQwiC,cACzI,CACA,SAASc,EAAWjiC,GAChB,IAAI4F,EAAIC,EACR,MAAMiP,GAAS,EAAIwtB,EAAcE,aAAaxiC,EAAMrB,EAAQwiC,eAAengC,MAAMrC,EAAQ2iC,eACnF0B,EAAStB,EAAgC,QAApB97B,EAAKkP,EAAO,UAAuB,IAAPlP,EAAgBA,EAAK,MACtEpG,EAAUkiC,EAAgC,QAApB77B,EAAKiP,EAAO,UAAuB,IAAPjP,EAAgBA,EAAK,MAC7E,MAAO,CAAEm9B,SAAQxjC,UACrB,CAEA,SAAS0iC,EAAUptB,GACf,MAAO,CAAC6sB,EAAW7sB,EAAOkuB,QAASrB,EAAW7sB,EAAOtV,SAAUsiC,EAAUhtB,EAAOiY,YAAY5rB,KAAKxC,EAAQ2iC,cAC7G,CACA,SAASa,EAAUc,GACf,IAAIr9B,EAAIC,EAAIC,EACZ,MAAMgP,EAASmuB,EAAIjiC,MAAMrC,EAAQ2iC,eAC3B0B,EAAStB,EAAgC,QAApB97B,EAAKkP,EAAO,UAAuB,IAAPlP,EAAgBA,EAAK,MACtEpG,EAAUkiC,EAAgC,QAApB77B,EAAKiP,EAAO,UAAuB,IAAPjP,EAAgBA,EAAK,MACvEknB,EAAYgV,EAA+B,QAApBj8B,EAAKgP,EAAO,UAAuB,IAAPhP,EAAgBA,EAAK,MACxE9F,GAAO,EAAIsiC,EAAcG,eAAe3tB,EAAO5T,MAAM,EAAG,GAAGC,KAAKxC,EAAQ2iC,eAAgB3iC,EAAQwiC,eACtG,MAAO,CAAE6B,SAAQxjC,UAASutB,YAAW/sB,OACzC,CACA,SAASwT,EAAQ0vB,EAAOC,EAAOC,EAAOC,GAClC,OAAOt4B,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWyvB,EAAKC,EAAKvqB,EAAK3G,EAASmxB,EAAMC,KAAKC,MAAM5xB,KAAKC,QAC/F,MAAMixB,EAAS,CAAEW,IAAKhlC,EAAQ6iC,gBAAiBoC,IAAKjlC,EAAQ4iC,iBACtDsC,EAAMjC,EAAUvvB,EAAQrF,WACxB82B,EAAMN,EAAMxqB,EACZ+qB,EAAM,oBACNvkC,EAAU,CAAEqkC,MAAKP,MAAKC,MAAKQ,MAAKP,MAAKM,OACrC9jC,EAAOgiC,EAAW,CAAEgB,SAAQxjC,YAElCqQ,EAAIzQ,SAAS,eAAeiT,EAAQW,cAAcX,EAAQW,UAAU7S,WACpE,MAAM4sB,EAAY+O,EAAY91B,QAAQu8B,KAAKyB,SAAShkC,EAAMqS,EAAQW,WAClE,OAAOkvB,EAAU,CAAEc,SAAQxjC,UAASutB,aACxC,GACJ,CACA,SAASqV,EAAUa,GACf,OAAOl4B,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAM,OAAEk/B,EAAM,QAAExjC,EAAO,KAAEQ,EAAI,UAAE+sB,GAAcoV,EAAUc,GACvD,GAAID,EAAOW,MAAQhlC,EAAQ6iC,iBAAmBwB,EAAOY,MAAQjlC,EAAQ4iC,gBACjE,MAAM,IAAItrB,MAAM,gCAEpB,MAAMjJ,EAAY60B,EAAUriC,EAAQqkC,KACpC,OAAOxB,EAAQ4B,OAAOj3B,EAAWhN,EAAM+sB,EAC3C,GACJ,CAnGApuB,EAAQ8iC,cAAgB,OACxB9iC,EAAQ6iC,gBAAkB,QAC1B7iC,EAAQ4iC,gBAAkB,MAC1B5iC,EAAQ2iC,cAAgB,IACxB3iC,EAAQ0iC,aAAe,YACvB1iC,EAAQyiC,cAAgB,OACxBziC,EAAQwiC,cAAgB,OACxBxiC,EAAQuiC,qBAAuB,GAC/BviC,EAAQsiC,cAAgB,IACxBtiC,EAAQqiC,WAAa,MACrBriC,EAAQoiC,WAAa,MACrBpiC,EAAQmiC,4BAA8B,YACtCniC,EAAQkiC,wBAA0B,IAClCliC,EAAQiiC,0BAA4B,MACpCjiC,EAAQgiC,0BAA4B,E,qCCjFxBniC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsJ,qBAAkB,EAC1B,MAAM5E,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBwzB,EAAexzB,EAAQ,OAC7B,MAAMyJ,EACFgE,WAAAA,GACInI,KAAKogC,mBAAqB,GAC1BpgC,KAAKqgC,YAAc,IAAIC,IACvBtgC,KAAKugC,kBAAoB,KACzBvgC,KAAKywB,WAAa,GAClBzwB,KAAKwiB,KAAO,GACZxiB,KAAKk3B,cAAgB,GACrBl3B,KAAK4c,QAAS,CAClB,CACA8G,wBAAAA,CAAyB+K,IACrB,EAAI9iB,EAAQrQ,UAAU,mCAAoCmzB,GAC1DzuB,KAAKyuB,sBAAwBA,CACjC,CACAC,oBAAAA,CAAqBJ,GACjBtuB,KAAKsuB,kBAAoBA,CAC7B,CACAkS,iBAAAA,CAAkBjjB,GACd,GAAKA,EAEL,IAAK,MAAOkjB,EAAQ3lC,KAAUkF,KAAKqgC,YAAYK,UAC3C,GAAInjB,EAAUpe,SAASshC,GACnB,OAAO3lC,CAInB,CACAoZ,IAAAA,CAAKzK,EAASuoB,GACV,OAAO/qB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EACJ,KACI,EAAI6J,EAAQrQ,UAAU,iCAAiC,EAAIqQ,EAAQ8C,mBAAmBhF,IACtF,IAAIk3B,EAAal3B,EACjB,GAA0B,eAAtBk3B,EAAWzvB,OAKX,aAJMlR,KAAKoS,aACXpS,KAAKogC,mBAAmBtjC,SAAQwiB,GAAYA,MAC5Ctf,KAAKogC,mBAAqB,QACK,QAA9Bt+B,EAAKkwB,EAAcK,aAA0B,IAAPvwB,GAAyBA,EAAG+B,KAAKmuB,UAGtEhyB,KAAK4gC,mBACX,MAAMC,EAAiB7gC,KAAKwgC,mBAAkB,EAAI70B,EAAQmqB,wBAAwB6K,EAAWp4B,UAC7F,GAAIs4B,EAsBA,YArBAA,EAAe3sB,KAAKysB,GAAY34B,MAAK3M,IACjC,IAAIyG,GACJ,EAAI6J,EAAQrQ,UAAU,mCAAoCD,GACzB,QAAhCyG,EAAKkwB,EAAczqB,eAA4B,IAAPzF,GAAyBA,EAAG+B,KAAKmuB,EAAe32B,EAAO,IACjG8Y,OAAMvK,IACL,IAAI9H,EACJ,IAAI0R,EAAO5J,EAAM4J,KACJ,OAATA,IACAA,EAAOjU,EAAWK,wBAAwBC,oBAE9C,IAAIihC,EAAgB,CAChBxpB,UAAWtJ,KAAKC,MAAMgE,WACtBf,OAAQzH,EAAQyH,OAChBtH,MAAO,CACH4J,KAAMA,EACNjC,QAAS3H,EAAM2H,WAGvB,EAAI5F,EAAQrQ,UAAU,0CAA2CC,KAAKC,UAAUslC,IAC/C,QAAhCh/B,EAAKkwB,EAAczqB,eAA4B,IAAPzF,GAAyBA,EAAG+B,KAAKmuB,EAAe8O,EAAc,IAK3G,MAAM,IAAIvhC,EAAWI,gBAAgBJ,EAAWK,wBAAwB4I,oBAEhF,CACA,MAAOoB,GAEH,OADA,EAAI+B,EAAQrQ,UAAU,sCAAuCsO,GACtDpC,QAAQC,OAAOmC,EAC1B,CACJ,GACJ,CACAg3B,gBAAAA,GACI,OAAO35B,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,KACzB,IAAI3F,EACJ,IAAIi/B,EAAiD,QAAjCj/B,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGkW,kBAAkB,kBACtG+oB,GACDt5B,EAAO,IAAIlI,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,uBAE7En0B,KAAKggB,eAAe+gB,GAAel4B,IAC3BA,EACAtB,IAGAE,EAAO,IAAIlI,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC7E,GACF,GAEV,GACJ,CACA7B,SAAAA,GACItyB,KAAK8xB,2BAAwB5uB,CACjC,CACA6e,qBAAAA,CAAsBwQ,GAClBvyB,KAAKogC,mBAAmB9jC,KAAKi2B,EACjC,CACAR,0BAAAA,CAA2BD,GACvB9xB,KAAK8xB,sBAAwBA,CACjC,CACAzU,wBAAAA,GACI,OAAOpW,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWixB,GAAI,GACzD,GACJ,CACA7oB,yBAAAA,CAA0Bya,GACtB,QAAKA,CAQT,CACAjC,MAAAA,GACI,OAAOzC,EAAanE,iBACxB,CACAyS,MAAAA,GACI,MAAO,kBACX,CACAyE,oBAAAA,GACI,OAAO12B,MAAMiiB,KAAKxsB,KAAKqgC,YAAY/jB,OACvC,EAEJzhB,EAAQsJ,gBAAkBA,C,qCC9I1B,IAAIpE,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQse,QAAUte,EAAQwe,YAAcxe,EAAQqe,kBAAoBre,EAAQue,mBAAgB,EAC5F,MAAM3N,EAAkB1L,EAAgBrF,EAAQ,QAChD,MAAM0e,UAAsB3N,EAAgBvJ,QACxCiG,WAAAA,GACIkrB,OACJ,EAEJx4B,EAAQue,cAAgBA,EACxB,MAAMF,UAA0BzN,EAAgBvJ,QAC5CiG,WAAAA,GACIkrB,OACJ,EAEJx4B,EAAQqe,kBAAoBA,EAC5B,MAAMG,EACFlR,WAAAA,CAAYjM,GACR8D,KAAK9D,KAAOA,CAChB,EAEJrB,EAAQwe,YAAcA,EACtB,MAAMF,EACFhR,WAAAA,CAAY0U,GACR7c,KAAK6c,OAASA,CAClB,EAEJhiB,EAAQse,QAAUA,C,qCC7BlB,IAAIvW,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI4H,EAAsB5K,MAAQA,KAAK4K,qBAAwBjQ,OAAOkI,OAAU,SAASC,EAAG+H,GACxFlQ,OAAOC,eAAekI,EAAG,UAAW,CAAES,YAAY,EAAMzI,MAAO+P,GACnE,EAAK,SAAS/H,EAAG+H,GACb/H,EAAE,WAAa+H,CACnB,GACIC,EAAgB9K,MAAQA,KAAK8K,cAAkB,WAC/C,IAAIC,EAAU,SAASjI,GAMnB,OALAiI,EAAUpQ,OAAOqQ,qBAAuB,SAAUlI,GAC9C,IAAImI,EAAK,GACT,IAAK,IAAIjI,KAAKF,EAAOnI,OAAOgJ,UAAUC,eAAeC,KAAKf,EAAGE,KAAIiI,EAAGA,EAAG5O,QAAU2G,GACjF,OAAOiI,CACX,EACOF,EAAQjI,EACnB,EACA,OAAO,SAAU7C,GACb,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAI5E,EAAS,CAAC,EACd,GAAW,MAAP4E,EAAa,IAAK,IAAI+C,EAAI+H,EAAQ9K,GAAMiL,EAAI,EAAGA,EAAIlI,EAAE3G,OAAQ6O,IAAkB,YAATlI,EAAEkI,IAAkBtI,EAAgBvH,EAAQ4E,EAAK+C,EAAEkI,IAE7H,OADAN,EAAmBvP,EAAQ4E,GACpB5E,CACX,CACJ,CAhBmD,GAiB/C0E,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6R,aAAU,EAClB,MAAMpB,EAAqB5Q,EAAQ,OAC7Bs9B,EAAcj4B,EAAgBrF,EAAQ,QACtCiR,EAAUjR,EAAQ,OAClB04B,EAAU14B,EAAQ,OAClBqR,EAAMjB,EAAapQ,EAAQ,QAC3BwmC,EAAUxmC,EAAQ,OAClBymC,EAAczmC,EAAQ,OAC5B,MAAMgS,EACFvE,WAAAA,CAAYi5B,EAAQC,OAAYn+B,GAC5B,MAAMo+B,GAAe,EAAI31B,EAAQ41B,uBAOjCvhC,KAAKwhC,SAAW,GAChBxhC,KAAKyhC,SAAW,GAChBzhC,KAAKohC,OAASA,EACdr1B,EAAIzQ,SAAS,8CACbyQ,EAAIzQ,SAASgmC,GACbthC,KAAK0hC,mBACT,CACAC,oBAAAA,CAAqBC,EAAcC,GAC/B,GAAID,GAAgBA,EAAavlC,OAAS,GAAKwlC,GAAcA,EAAWxlC,OAAS,EAAG,CAEhF0P,EAAIzQ,SAAS,8CACbyQ,EAAIzQ,SAASgmC,cACb,MAAMQ,EAAWR,aAAazwB,QAAQnE,EAAQq1B,SAAWH,GACzD,GAAwB,qBAAbE,GAAyC,OAAbA,EAEnC,YADA/1B,EAAIzQ,SAAS,wBAGjByQ,EAAIzQ,SAASwmC,IACK,OAAbA,QAAkC,IAAbA,OAAsB,EAASA,EAASzlC,QAAU,IAExE0P,EAAIzQ,SAAS,2BAA4BsmC,EAAc,KAAMC,GAC7DP,aAAaU,QAAQt1B,EAAQq1B,SAAWF,EAAYC,GAEpD/1B,EAAIzQ,SAAS,2BAA4BsmC,GACzCN,aAAaW,WAAWv1B,EAAQq1B,SAAWH,GAEnD,MAEI71B,EAAIzQ,SAAS,oBAAqBsmC,EAE1C,CACAvvB,WAAAA,CAAYvD,EAAS+I,EAAKlH,EAAK,KAC3B,IAAI9U,EAAO,CACP8U,GAAIA,EACJgI,UAAW3K,KAAKC,MAAMgE,WACtBnD,QAASA,GAEb9O,KAAKkiC,SAASrmC,EAAMgc,EACxB,CACAqqB,QAAAA,CAASrmC,EAAMgc,GACX,IAAIsqB,EAAWz1B,EAAQq1B,SAAW/hC,KAAKohC,OACvC,MAAME,GAAe,EAAI31B,EAAQ41B,uBACjCx1B,EAAIzQ,SAAS0E,KAAKoiC,OAClBr2B,EAAIzQ,SAAS,kBAAkB0E,KAAKoiC,UAAUvqB,MAAQhc,KACtDmE,KAAKoiC,MAAMvqB,GAAOhc,EAClB,IAAIwmC,GAAgB,EAAIjP,EAAQ3kB,mBAAmBzO,KAAKoiC,OACxDr2B,EAAIzQ,SAAS,YAAYuc,OAAS7X,KAAKoiC,SACvCd,EAAaU,QAAQG,EAAUE,EACnC,CACAxxB,OAAAA,CAAQgH,GAEJ,OADA9L,EAAIzQ,SAAS,uBAAuBuc,OAAS7X,KAAKoiC,SAC3CpiC,KAAKoiC,MAAMvqB,EACtB,CACA6pB,iBAAAA,GACI,MAAMI,EAAWR,aAAazwB,QAAQnE,EAAQq1B,SAAW/hC,KAAKohC,QAC9D,GAAwB,qBAAbU,GAAyC,OAAbA,EAGnC,OAFA/1B,EAAIzQ,SAAS,sBACb0E,KAAKoiC,MAAQ,CAAC,GAIlB,GADAr2B,EAAIzQ,SAASwmC,IACK,OAAbA,QAAkC,IAAbA,OAAsB,EAASA,EAASzlC,QAAU,EAAG,CAC3E,IAAIimC,GAAW,EAAIlP,EAAQrkB,eAAe+yB,GAC1C9hC,KAAKoiC,MAAQE,CACjB,CACAv2B,EAAIzQ,SAAS,kBAAkB0E,KAAKoiC,SACV,qBAAfpiC,KAAKoiC,OAAuC,MAAdpiC,KAAKoiC,QAC1CpiC,KAAKoiC,MAAQ,CAAC,EAEtB,CACAG,sBAAAA,GACI,IAAIzgC,EAAIC,EAAIC,EAAI0G,EAChB,MAAM85B,EAAQ,GACRC,EAAU,GAChB,GAAIziC,KAAKwhC,SAASnlC,OAAS,IAA+B,QAAxByF,EAAK9B,KAAKyhC,gBAA6B,IAAP3/B,OAAgB,EAASA,EAAGzF,QAAU,EACpG,MAAO,CACHqmC,GAAI1iC,KAAKwhC,SACTmB,GAAI3iC,KAAKyhC,UAGjB,IAAImB,EAAqF,QAA7E7gC,EAAK/B,KAAK6Q,QAAQvF,EAAmBu3B,0CAAuD,IAAP9gC,OAAgB,EAASA,EAAG+M,QACxH8zB,IACDA,GAAO,EAAIj3B,EAAQsD,aAAa+oB,EAAY91B,QAAQo2B,YAAYmK,IAChEziC,KAAKqS,YAAYuwB,EAAMt3B,EAAmBu3B,oCAE9C,IAAIH,EAAsF,QAAhF1gC,EAAKhC,KAAK6Q,QAAQvF,EAAmBw3B,6CAA0D,IAAP9gC,OAAgB,EAASA,EAAG8M,QACzH4zB,IACDA,GAAK,EAAI/2B,EAAQsD,aAAa+oB,EAAY91B,QAAQo2B,YAAYkK,IAC9DxiC,KAAKqS,YAAYqwB,EAAIp3B,EAAmBw3B,uCAE5C,IAAIrB,EAA4F,QAAhF/4B,EAAK1I,KAAK6Q,QAAQvF,EAAmBy3B,6CAA0D,IAAPr6B,OAAgB,EAASA,EAAGoG,QACpI,IAAK2yB,EAAU,CAEX,IAAIuB,EAAWhL,EAAY91B,QAAQo2B,YAAY,IAC/CmJ,GAAW,EAAI91B,EAAQsD,aAAa+zB,GACpChjC,KAAKqS,YAAYovB,EAAUn2B,EAAmBy3B,qCAClD,CAGA,OAFA/iC,KAAKyhC,SAAWA,EAChBzhC,KAAKwhC,UAAW,EAAIL,EAAY8B,QAAQP,EAAIE,EAAM,CAAEM,WAAY,KAAMjxB,WAC/D,CACHywB,GAAI1iC,KAAKwhC,SACTmB,GAAI3iC,KAAKyhC,SAEjB,CACA/yB,eAAAA,CAAgBmH,EAAKgC,IACjB,EAAIqpB,EAAQ5lC,UAAU,0CAA0C0S,KAAKC,SACrE,IAAIk1B,EAAYnjC,KAAKuiC,0BACrB,EAAIrB,EAAQ5lC,UAAU,wCAAwC0S,KAAKC,SACnE,IAAI5S,EAAS8lC,EAAYiC,IAAIzsB,QAAQd,EAAKstB,EAAUT,IAAIzwB,WACxDjS,KAAKqS,YAAYhX,EAAQwc,IACzB,EAAIqpB,EAAQ5lC,UAAU,wCAAwC0S,KAAKC,QACvE,CACAY,aAAAA,CAAcgJ,IACV,EAAIqpB,EAAQ5lC,UAAU,wCAAwC0S,KAAKC,SACnE,IAAIpS,EAAOmE,KAAK6Q,QAAQgH,GACxB,GAAIhc,GAAQA,EAAKiT,QAAS,CACtB,IAAIq0B,EAAYnjC,KAAKuiC,0BACrB,EAAIrB,EAAQ5lC,UAAU,sCAAsC0S,KAAKC,SACjE,IAAI5S,EAAS8lC,EAAYiC,IAAIrtB,QAAQla,EAAKiT,QAASq0B,EAAUT,IAAIzwB,SAASkvB,EAAYkC,IAAIC,MAE1F,OADA,EAAIpC,EAAQ5lC,UAAU,sCAAsC0S,KAAKC,SAC1D5S,CACX,CACA,OAAO,IACX,CACAgS,UAAAA,CAAWwK,OAAM3U,GACb,QAAYA,IAAR2U,EAAmB,CAEnB,MAAMypB,GAAe,EAAI31B,EAAQ41B,uBACjCvhC,KAAKoiC,MAAQ,CAAC,EACd,IAAID,EAAWz1B,EAAQq1B,SAAW/hC,KAAKohC,OACvCE,EAAaU,QAAQG,EAAU,GACnC,KACK,CACD,IAAIA,EAAWz1B,EAAQq1B,SAAW/hC,KAAKohC,OACvC,MAAME,GAAe,EAAI31B,EAAQ41B,uBACjCx1B,EAAIzQ,SAAS0E,KAAKoiC,OAClBpiC,KAAKoiC,MAAMvqB,GAAO,KAClB,IAAIwqB,GAAgB,EAAIjP,EAAQ3kB,mBAAmBzO,KAAKoiC,OACxDr2B,EAAIzQ,SAAS,sBAAsBuc,OAAS7X,KAAKoiC,SACjDd,EAAaU,QAAQG,EAAUE,EACnC,CACJ,EAEJxnC,EAAQ6R,QAAUA,EAClBA,EAAQq1B,SAAW,e,qCCtMnB,IAAIn/B,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAA4BG,GACjD4I,EAAa/I,EAAQ,OAAmCG,GACxD4I,EAAa/I,EAAQ,OAAoBG,E,wDClB7BH,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQymB,iBAAc,EACtB,MAAM9V,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAM4mB,EACFnZ,WAAAA,CAAY0S,EAAMgC,EAAQzQ,GACtBpM,KAAKlE,KAAOoM,EAAOpB,gBACnB9G,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,qBAC9B,CACAsC,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACAwN,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,8BAA+BC,KAAKC,UAAUsE,KACnE,EAAIoI,EAAO5M,UAAU,2BAA4B0E,KAAK/D,WAClD6D,EAAKonB,aAAc,CACnB,GAAI,UAAWpnB,GAAQoI,EAAOnC,WAAWI,SAAWrG,EAAK,SACrD,MAAM,IAAIoI,EAAOvI,gBAAgBuI,EAAOtI,wBAAwB4I,qBAGpE,GADA1I,EAAKonB,aAAa,SAAWhf,EAAOnC,WAAWI,QAC3C,YAAarG,GAAQA,EAAK,WAAW1D,SAAW4D,KAAKonB,YAAY,GACjE,MAAM,IAAIlf,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBkF,mBAEpEhF,EAAKonB,aAAa,WAAa,CAC3B9qB,QAAS4D,KAAKonB,cAAc,GAEpC,CACA,OAAKpnB,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QACvElR,KAAK6c,OAAOpT,QAAQ3J,GAExBE,KAAKunB,kBAAkB9d,QAAQ3J,EAC1C,GACJ,CACAid,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3H,eAAAA,CAAgBlX,EAASmX,GAChB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAEhC,IADA,EAAI+K,EAAO5M,UAAU,2BAA4B6B,EAAO4qB,GACpC,qBAATA,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,KACA,EAAI7f,EAAO5M,UAAU,kBAAmBiN,EAASmX,GACjD1f,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,EANI,EAAI7f,EAAO5M,UAAU,oCAAoCiN,IAOjE,CACAg7B,SAAAA,CAAUh7B,GACN,OAAOvI,KAAKwjC,iBAAiBj7B,EACjC,CACAi7B,gBAAAA,CAAiBj7B,GAOb,OANKA,IACDA,EAAUvI,KAAK/D,UAAU8hB,cACP,OAAZxV,QAAgC,IAAZA,OAAqB,EAASA,EAAQS,WAAW,UACvET,EAAU,OAAOA,MAGlBvI,KAAK/D,UAAUF,SAASmC,QAAO,SAAU0K,GAC5C,IAAI66B,EAAa76B,EAAQ1L,MAAM,KAC/B,OAAOumC,EAAWpnC,OAAS,GAAKuM,EAAQI,WAAWT,EACvD,IAAGuV,KAAI,SAAUlV,GACb,IAAI66B,EAAa76B,EAAQ1L,MAAM,KAC/B,OAAOumC,EAAW,EACtB,IAAG,EACP,CACAngB,gBAAAA,CAAiBxjB,GACb,OAAQA,EAAKoR,QACT,IAAK,kBACL,IAAK,0BACL,IAAK,2BACL,IAAK,qCACD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,CACX,EAEJrW,EAAQymB,YAAcA,EACtBzmB,EAAAA,WAAkBymB,C,qCC5JlB,IAAI1e,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAyBG,GAC9C4I,EAAa/I,EAAQ,OAA2BG,GAChD4I,EAAa/I,EAAQ,OAAyBG,E,qCClBlCH,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsK,oBAAiB,EACzB,MAAMu+B,EAAKhpC,EAAQ,MACbwN,EAASxN,EAAQ,OACvB,MAAMyK,EACFgD,WAAAA,CAAYC,GACRpI,KAAK2jC,KAAO,CACR,cACA,mBAEJ3jC,KAAKoI,SAAWA,CACpB,CACAw7B,oBAAAA,CAAqBr7B,GACjB,IAAIzG,EAAIC,EACR,IAAI8hC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,IAAIrgB,EAA6G,QAAjGgG,EAAsC,QAAhCD,EAAK9B,KAAKoI,SAASS,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,WAAW,cAA2B,IAAP/G,OAAgB,EAASA,EAAGhG,SAASmC,QAAO,SAAU0K,GAC3K,OAAOA,EAAQI,WAAWT,EAC9B,IACA,QAAgBrF,GAAZnH,GAAyBA,EAASM,OAAS,EAC3C,MAAM,IAAIqnC,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,wBAE3E,IAAIxT,EAAU7M,EAAS,GACvB,MAAMK,EAAUwM,EAAQ1L,MAAM,KAAK,GACnC,OAAOd,CACX,CACAqM,UAAAA,CAAWF,GACP,IAAIzG,EAAIC,EAAIC,EACZ,IAAI6hC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,IAAIvf,EAA+J,QAAtJmF,EAAuG,QAAjGD,EAAsC,QAAhCD,EAAK9B,KAAKoI,SAASS,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,WAAW,cAA2B,IAAP/G,OAAgB,EAASA,EAAGlF,aAA0B,IAAPmF,OAAgB,EAASA,EAAGuG,GACnMW,EAAY,GAIhB,YAHahG,GAATrG,IACAqM,EAAYrM,EAAM,wBAEf,CACHT,QAAS4D,KAAK4jC,qBAAqBr7B,GACnCW,UAAWA,EAEnB,CAQAE,WAAAA,CAAYb,EAASw7B,EAASvW,GAC1B,OAAOvmB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI6jC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,GAAgB,cAAZ2nB,EACA,MAAM,IAAIL,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,uCAE3E,IAAIpL,EAAS,CACT+yB,QAASA,EACTvX,KAAMxsB,KAAK4jC,qBAAqBr7B,IAEhCilB,IACAxc,EAAOwc,KAAOA,GAElB,IACI,MAAMhkB,QAAYxJ,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,kBACRF,OAAQA,GACTzI,GACH,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,OAEV,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiB85B,EAAG/jC,gBACpB,MAAMiK,EAEV,MAAM,IAAI85B,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,2CAC3E,CACJ,GACJ,CASA4nB,WAAAA,CAAYz7B,EAAS07B,EAAWC,EAAUvP,GACtC,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI6jC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,IAAIpL,EAAS,CACTwb,KAAMxsB,KAAK4jC,qBAAqBr7B,GAChC47B,GAAIF,EACJnpC,OAAQopC,EAAW,KAAWjyB,aAElB,OAAZ0iB,QAAgC,IAAZA,OAAqB,EAASA,EAAQyP,WAC1DpzB,EAAO,YAAc2jB,EAAQyP,QAAQnyB,YAEzC,IAAI5W,QAAe2E,KAAKkU,KAAK3L,EAASyI,GACtC,YAAe9N,IAAX7H,GAAyB,WAAYA,EAE9BA,EAAOgpC,OAGXhpC,CACX,GACJ,CAOA6Y,IAAAA,CAAK3L,EAASyH,GACV,OAAO/I,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI6jC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,IAAKpc,KAAKskC,gBAAgBt0B,EAAO,KAAM,SACnC,MAAM,IAAI0zB,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,iCAE3EpM,EAAM,QAAUhQ,KAAK4jC,qBAAqBr7B,GAC1C,IACI,MAAMiB,QAAYxJ,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,WACRF,OAAQhB,GACTzH,GACH,GAAI,WAAYiB,EACZ,MAAO,CACH66B,OAAQ76B,EAAInO,QAGf,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiB85B,EAAG/jC,gBACpB,MAAMiK,EAEV,MAAM,IAAI85B,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,kCAAkCxS,IAC7G,CACJ,GACJ,CAMA26B,QAAAA,CAASh8B,EAASi8B,EAAS7P,GACvB,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,KACzBzH,KAAKykC,UAAUl8B,EAAS,CAACi8B,GAAU,CAAC7P,IAAU3sB,MAAK08B,IAC/C,IAAIziC,EAAU1G,KAAKmO,MAAMg7B,GACzBn9B,EAAQtF,EAAQ,GAAG,IACpBkS,OAAMvK,IACLnC,EAAOmC,EAAM,GACf,GAEV,GACJ,CAQA66B,SAAAA,CAAUl8B,EAASo8B,EAAUhQ,GACzB,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI6jC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,QAAiBlZ,IAAbyhC,EACA,MAAM,IAAIjB,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,qCAE3E,IAAIpL,EAAS,CACT2zB,SAAUA,EACVhQ,QAASA,GAEb3jB,EAAOwb,KAAOxsB,KAAK4jC,qBAAqBr7B,GACxC,IACI,MAAMiB,QAAYxJ,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,gBACRF,OAAQA,GACTzI,GACH,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,MAEnB,CACA,MAAOuO,GACH,GAAIA,aAAiB85B,EAAG/jC,gBACpB,MAAMiK,EAEV,MAAM,IAAI85B,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,kCAAkCxS,IAC7G,CACJ,GACJ,CAQAg7B,eAAAA,CAAgBr8B,EAASi8B,EAAS7P,GAC9B,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI6jC,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,QAAgBlZ,IAAZshC,EACA,MAAM,IAAId,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,qCAE3E,IAAIpL,EAAS,CACTwzB,QAASA,EACT7P,QAASA,GAEb3jB,EAAOwb,KAAOxsB,KAAK4jC,qBAAqBr7B,GACxC,IACI,MAAMiB,QAAYxJ,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,sBACRF,OAAQA,GACTzI,GACH,GAAI,WAAYiB,EACZ,OAAOjO,KAAKmO,MAAMF,EAAInO,QAErB,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiB85B,EAAG/jC,gBACpB,MAAMiK,EAEV,MAAM,IAAI85B,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,kCAAkCxS,IAC7G,CACJ,GACJ,CAOAi7B,eAAAA,CAAgBt8B,EAASnM,EAAS0oC,EAAenQ,GAC7C,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI+kC,EAAY,CACZ3oC,QAASA,EACT0oC,cAAeA,EACfnQ,QAASA,GAETkP,EAAK7jC,KAAK8jC,aAAav7B,GAC3B,QAAUrF,GAAN2gC,EACA,MAAM,IAAIH,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,GAAgB,cAAZhgB,EACA,MAAM,IAAIsnC,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,2CAE3E,IAAIgoB,EAAU,EACVzP,GAAY,YAAaA,IACzByP,EAAUzP,EAAQyP,SAEtB,IAAIY,EAAS,GACTxY,EAAOxsB,KAAK4jC,qBAAqBr7B,GACrC,IAAI08B,EAAa,EACjB,GAAsB,cAAlBH,EAA+B,CAC/B,IAAII,EAAe,aACfC,EAAiB,aACC,OAAlBL,QAA4C,IAAlBA,OAA2B,EAASA,EAAcxiC,cAAc8iC,SAASF,EAAa5iC,iBAChH2iC,EAAa,EACbH,EAAgB9kC,KAAKqlC,aAAaP,EAAeI,KAE1B,OAAlBJ,QAA4C,IAAlBA,OAA2B,EAASA,EAAcxiC,cAAc8iC,SAASD,EAAe7iC,kBACvHwiC,EAAgB9kC,KAAKqlC,aAAaP,EAAeK,GAEzD,CACA,IAAIn0B,EAAS,CACTs0B,SAAU,EACVlB,QAASA,EACTmB,OAAQ,KACRpB,GAAI/nC,EACJopC,UAAW,CACP,CACIC,WAAY,IACZC,MAAOZ,EACPG,WAAYA,EACZD,OAAQA,EACRF,cAAe,GACftY,KAAMA,IAGduY,UAAWA,GAEf,IACI,MAAMv7B,QAAYxJ,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,sBACRF,OAAQA,EACRkW,aAAc,CACV9qB,QAASA,EACT0oC,cAAeA,EACfnQ,QAASA,IAEdpsB,GACH,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,OAEV,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiB85B,EAAG/jC,gBACpB,MAAMiK,EAEV,MAAM,IAAI85B,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,2CAC3E,CACJ,GACJ,CACAupB,SAAAA,CAAUp9B,EAASnM,EAASwpC,EAAQC,EAAQlR,GACxC,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAKuI,IAAYnM,IAAYwpC,IAAWC,EACpC,MAAM,IAAInC,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,wCAE3E,IACI6oB,EADApB,EAAK7jC,KAAK8jC,aAAav7B,GAU3B,QARUrF,GAAN2gC,IACIA,EAAG76B,WAAW,OACdi8B,EAAa,GAERpB,EAAG76B,WAAW,aACnBi8B,EAAa,UAGX/hC,GAAN2gC,QAAiC3gC,GAAd+hC,EACnB,MAAM,IAAIvB,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,IAAImQ,EAAcvsB,KAAK4jC,qBAAqBr7B,GACxCyI,EAAS,CACTub,YAAaA,EACb0Y,WAAYA,EACZ7oC,QAASA,EACTwpC,OAAQA,EACRC,OAAQA,EACRlR,QAASA,IAEb,EAAIzsB,EAAO5M,UAAU,kCAAgCC,KAAKC,UAAUwV,IACpE,MAAMxH,QAAYxJ,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,gBACRF,OAAQA,EACRkW,aAAc,CACV9qB,QAASA,EACTwpC,OAAQA,EACRC,OAAQA,EACRlR,QAASA,IAEdpsB,GACH,OAAOiB,EAAInO,MACf,CACA,MAAO+Y,GACH,MAAMA,CACV,CACJ,GACJ,CACA0xB,gBAAAA,CAAiBv9B,EAASw9B,EAAQF,GAC9B,OAAO5+B,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAKuI,IAAYw9B,IAAWF,EACxB,MAAM,IAAInC,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,wCAE3E,IACI6oB,EADApB,EAAK7jC,KAAK8jC,aAAav7B,GAU3B,QARUrF,GAAN2gC,IACIA,EAAG76B,WAAW,OACdi8B,EAAa,EAERpB,EAAG76B,WAAW,aACnBi8B,EAAa,UAGX/hC,GAAN2gC,QAAiC3gC,GAAd+hC,EACnB,MAAM,IAAIvB,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,mBAE3E,IAAImQ,EAAcvsB,KAAK4jC,qBAAqBr7B,GACxCyI,EAAS,CACTub,YAAaA,EACb0Y,WAAYA,EACZc,OAAQA,EACRF,OAAQA,IAEZ,EAAI39B,EAAO5M,UAAU,yCAAuCC,KAAKC,UAAUwV,UACzDhR,KAAKoI,SAASqB,QAAQ,CACpCyH,OAAQ,uBACRF,OAAQA,GACTzI,EACP,CACA,MAAO6L,GACH,MAAMA,CACV,CACJ,GACJ,CACAixB,YAAAA,CAAaza,EAAKob,GACd,OAAIpb,EAAIwa,SAASY,GACNpb,EAAIxtB,MAAM,EAAGwtB,EAAIvuB,OAAS2pC,EAAO3pC,QAErCuuB,CACX,CACA0Z,eAAAA,CAAgBtzB,KAAWsL,GACvB,IAAI2pB,EAAc,GAMlB,OALA3pB,EAAKxf,SAAQ+a,IACH,GAAGA,MAAS7G,GACdi1B,EAAY3pC,KAAKub,EACrB,MAEAouB,EAAY5pC,OAAS,KACrB8mB,QAAQpX,IAAI,iBAAkBk6B,EAAY5oC,KAAK,OACxC,EAGf,CAMAymC,YAAAA,CAAav7B,GACT,GAAIvI,KAAK2jC,KAAKxkC,SAASoJ,GAAU,CAC7B,IAAK29B,EAAclF,GAAKz4B,EAAQrL,MAAM,KACtC,OAAOgpC,CACX,CAEJ,EAEJrrC,EAAQsK,eAAiBA,EACzBtK,EAAAA,WAAkBsK,C,qCC7clBxK,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsrC,cAAgBtrC,EAAQurC,WAAavrC,EAAQwrC,cAAW,EAChExrC,EAAQ26B,SAAWA,EACnB36B,EAAQyrC,MAAQA,EAChBzrC,EAAQ0rC,SAAWA,EACnB1rC,EAAQ2rC,SAAWA,EACnB3rC,EAAQ4rC,YAAcA,EACtB,MAAMzP,EAAYt8B,EAAQ,MACpBiG,EAAYjG,EAAQ,OACpBuR,EAAQvR,EAAQ,OAChBQ,EAAQR,EAAQ,OAKtB,SAAS86B,EAAShzB,GACd,IAAIV,EACJ,MAAMtE,GAAS,EAAIyO,EAAMy6B,aACzB,IAAKlpC,EACD,MAAkB,YAAXgF,EAGX,IAAI,EAAI7B,EAAUgmC,eAAe,QAC7B,OAAO,EAEX,MAAMC,EAAQppC,EAAOqpC,WACrB,OAAQrkC,GACJ,IAAK,UACD,OAAOokC,EAAQ/rC,EAAQwrC,SAASS,OACpC,IAAK,SACD,OAAOF,EAAQ/rC,EAAQwrC,SAASU,OACpC,QACA,IAAK,SACD,IAAIC,EAAWJ,GAAS/rC,EAAQwrC,SAASU,SAAU,EAAI/P,EAAUx2B,MAAM,MAAO,UAAW,QACzF,GAAIwmC,EAAU,CACV,MAAMC,KAAkD,QAAjCnlC,GAAK,EAAImK,EAAMy6B,oBAAiC,IAAP5kC,OAAgB,EAASA,EAAGolC,sBACtFC,EAAiBzlC,UAAUylC,gBAAkB,EAC/CF,GAAiC,IAAnBE,IACdH,GAAW,IAEf,EAAI9rC,EAAMI,UAAU,iDAAkD0rC,EAAUC,EAAYE,EAChG,CACA,OAAOH,EAEnB,CACA,SAASV,EAAM9jC,GACX,OAAQA,GACJ,IAAK,SACD,MAAO,sBAAsB3H,EAAQwrC,SAASU,YAClD,IAAK,SACD,MAAO,sBAAsBlsC,EAAQwrC,SAASS,yBAAyBjsC,EAAQwrC,SAASU,YAC5F,QACA,IAAK,UACD,MAAO,sBAAsBlsC,EAAQwrC,SAASS,YAE1D,CACA,SAASP,EAASa,GACd,MAAO,sBAAsBA,MACjC,CACA,SAASZ,EAASY,GACd,MAAO,sBAAsBA,MACjC,CACA,SAASX,EAAYY,EAAOC,GACxB,MAAO,sBAAsBD,wBAA4BC,MAC7D,CArDAzsC,EAAQwrC,SAAW,CACfU,OAAQ,IACRD,OAAQ,MAoDZjsC,EAAQurC,WAAa,uBACrBvrC,EAAQsrC,cAAgB,kC,qCCnEZzrC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoJ,iBAAc,EACtB,MAAM6H,EAAapR,EAAQ,OACrBQ,EAAQR,EAAQ,OACtB,MAAMuJ,EACFkE,WAAAA,GACInI,KAAKogC,mBAAqB,GAC1BpgC,KAAKywB,WAAa,GAClBzwB,KAAKk3B,cAAgB,GACrBl3B,KAAK4c,QAAS,EACd5c,KAAKwiB,KAAO,GACZxiB,KAAKunC,gBAAkB,IAAIjH,KAE3B,EAAIplC,EAAM6f,sBAAsBysB,aACpC,CACA9jB,wBAAAA,CAAyB+K,GACrBzuB,KAAKyuB,sBAAwBA,CACjC,CACAC,oBAAAA,CAAqBJ,GACjBtuB,KAAKsuB,kBAAoBA,CAC7B,CACAC,qBAAAA,GACI,IAAIzsB,EAC8B,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,GAAyBA,EAAG2T,YAAY,gBAAgB,CAACd,EAAOkB,KACtG,IAAIid,GAAe,EAAIhnB,EAAWiD,eAAe8G,IACjD,EAAI3a,EAAMI,UAAU,2CAA2Cw3B,KAC/D9yB,KAAKynC,eAAe9yB,EAAOme,EAAa,IACzC,WACH,GACJ,CACA/Q,qBAAAA,CAAsBwQ,GAClBvyB,KAAKogC,mBAAmB9jC,KAAKi2B,EACjC,CACAlV,wBAAAA,GACI,OAAOpW,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW8C,GAAc,GAC/D,IAAI/Q,QACqC,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGsQ,WAAWS,EAC5F,GACJ,CACA0Q,UAAAA,CAAWC,EAAmB/H,GAC9B,CACAisB,qBAAAA,CAAsBpwB,EAAW/P,GAC7BvH,KAAKunC,gBAAgBI,IAAIrwB,EAAW/P,EACxC,CACA2M,IAAAA,CAAKzK,EAASuoB,EAAe9c,GACzB,OAAOjO,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EACR,WACW0H,EAAQyd,YACnB,CACA,MAAOrf,GACP,EACA,EAAI3M,EAAMI,UAAU,+BAAgCC,KAAKC,UAAUiO,IACnE,MAAM6N,EAAYtX,KAAK4nC,eACvB,IACI,IAAI75B,QAAqD,QAAjCjM,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGoS,KAAK3Y,KAAKC,UAAUb,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGhT,GAAU,CAAE6N,UAAWA,KAAepC,GACnLnH,IACkC,QAAjChM,EAAK/B,KAAKsuB,yBAAsC,IAAPvsB,GAAyBA,EAAGqK,OAAO/K,KAAK0M,EAAUkE,YAAa0C,IACrG,IAAI7S,GACJ,EAAI5G,EAAMI,UAAU,gCAA+B,EAAIwQ,EAAW2C,mBAAmBkG,MACjFA,GAASA,EAAMtZ,SACgB,QAA9ByG,EAAKkwB,EAAcK,aAA0B,IAAPvwB,GAAyBA,EAAG+B,KAAKmuB,GAC5E,KAGJA,EAAczqB,SACdvH,KAAK0nC,sBAAsBpwB,EAAW0a,EAAczqB,QAE5D,CACA,MAAOM,GACH,OAAOL,QAAQC,OAAOI,EAC1B,CACJ,GACJ,CACAmY,cAAAA,CAAeD,EAAa2S,GACxB,OAAOzrB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,QACqC,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGoQ,eAAe6N,EAAYtQ,OACxGijB,EAAgB3S,EACpB,GACJ,CACA4S,uBAAAA,CAAwBljB,GACpB,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,QACqC,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGoQ,eAAezC,EAChG,GACJ,CACAm4B,YAAAA,GACI,MAAMtwB,EAAYtJ,KAAKC,MAAMgE,WAE7B,OADA,EAAI/W,EAAMI,UAAU,+BAAgCgc,GAC7CA,CACX,CACAmwB,cAAAA,CAAe9yB,EAAOnV,GAElB,IADA,EAAItE,EAAMI,UAAU,mDAAkD,EAAIwQ,EAAW2C,mBAAmBjP,KAAamV,GACjH,cAAenV,EAAU,EACzB,EAAItE,EAAMI,UAAU,kDACpB,IAAIgc,EAAY9X,EAAS8X,UACzB,MAAM/P,EAAUvH,KAAKunC,gBAAgB/jC,IAAI8T,GACrC/P,IACA,EAAIrM,EAAMI,UAAU,mDAAoDiM,GACxEA,EAAQ/H,GAERQ,KAAKunC,gBAAgBM,OAAOvwB,MAG5B,EAAIpc,EAAMI,UAAU,wDACI,eAApBkE,EAAS0R,SACTlR,KAAKogC,mBAAmBtjC,SAAQwiB,GAAYA,MAC5Ctf,KAAKogC,mBAAqB,GAC1BpgC,KAAKsyB,aAGjB,CACJ,CACAna,yBAAAA,GACI,IAAIrW,EACJ,SAA4C,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGqW,4BACpF,CACAP,kBAAAA,CAAmBC,EAAK3b,GACpB,IAAI4F,EAC8B,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,GAAyBA,EAAG8V,mBAAmBC,EAAK3b,EAClG,CACA8b,iBAAAA,CAAkBH,GACd,IAAI/V,EACJ,OAAyC,QAAjCA,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGkW,kBAAkBH,EACnG,CACAka,0BAAAA,CAA2BD,GACvB9xB,KAAK8xB,sBAAwBA,CACjC,CACAnB,MAAAA,GACI,MAAO,EACX,CACA6L,MAAAA,GACI,MAAO,cACX,CACAlK,SAAAA,GACItyB,KAAKunC,gBAAgBO,OACzB,EAEJjtC,EAAQoJ,YAAcA,C,2ECpJtB,IAAIgD,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQktC,wBAAqB,EAC7B,MAAM7U,EAA2Bx4B,EAAQ,OACnCy4B,EAAuBz4B,EAAQ,OAC/BiR,EAAUjR,EAAQ,OAClB6E,EAAa7E,EAAQ,OAC3B,MAAMqtC,UAA2B7U,EAAyBrP,uBACtD,cAAI4E,GACA,OAAOzoB,KAAKuzB,WAChB,CACAyU,QAAAA,GACI,IAAIlmC,EACJ,GAAI9B,KAAK0zB,UACL,OAAO1zB,KAAK0zB,UAEhB,IAAKl2B,OAAOyqC,MACR,OAEJ,IAAIC,EAAQ1qC,OAAOyqC,MACnB,OAAIC,IAAUA,EAAMC,cAAgBD,EAAME,cAA4C,QAA3BtmC,EAAKtE,OAAO6qC,iBAA8B,IAAPvmC,OAAgB,EAASA,EAAGwmC,SAAWJ,QAArI,GAGAloC,KAAK0zB,UAAYwU,EACVA,EACX,CACA//B,WAAAA,GACIkrB,QACArzB,KAAKlE,KAAO,QACZkE,KAAKwiB,KAAO,yFACZxiB,KAAKnC,IAAM,GACXmC,KAAKszB,SAAW,UAChBtzB,KAAKuzB,YAAgC,qBAAX/1B,QAA8C,qBAAb6zB,SACrD8B,EAAqBzK,iBAAiB8K,YACtCL,EAAqBzK,iBAAiB+K,YAC5CzzB,KAAK4zB,cAAW1wB,EAChBlD,KAAK6zB,aAAc,EACnB7zB,KAAK8zB,QAAU,KACO,qBAAXt2B,QAA0BwC,KAAKuzB,cAAgBJ,EAAqBzK,iBAAiB8K,cAC5F,EAAI7nB,EAAQooB,gCAA+B,MACnC/zB,KAAKgoC,aACLhoC,KAAKuzB,YAAcJ,EAAqBzK,iBAAiBC,WAElD,IAKvB,CACA,iBAAI7E,GACA,IAAIhiB,EAAIC,EAAIC,EACZ,MAAO,CACHkH,WAAoC,QAAvBpH,EAAK9B,KAAK8zB,eAA4B,IAAPhyB,OAAgB,EAASA,EAAGoH,YAAc,KACtF9M,SAAkC,QAAvB2F,EAAK/B,KAAK8zB,eAA4B,IAAP/xB,OAAgB,EAASA,EAAG3F,UAAY,KAClF43B,SAAkC,QAAvBhyB,EAAKhC,KAAK8zB,eAA4B,IAAP9xB,OAAgB,EAASA,EAAGgyB,UAAY,KAE1F,CACA,cAAIC,GACA,OAAOj0B,KAAK6zB,WAChB,CACA,WAAIlpB,GACA,OAAO3K,KAAKszB,QAChB,CACA,WAAI72B,GACA,MAAO,CACHX,KAAMkE,KAAK4zB,SAEnB,CACAthB,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,GAAMA,KAAKuzB,cAAgBJ,EAAqBzK,iBAAiB6L,UAC7Dv0B,KAAKuzB,cAAgBJ,EAAqBzK,iBAAiBC,UAC3D,MAAM,IAAIppB,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAG5E,GAAIn0B,KAAK8b,UAEL,kBADM9b,KAAKw0B,eAGfx0B,KAAK6zB,aAAc,EACnB,MAAMzrB,EAAWpI,KAAKgoC,WAChBxoC,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAASkK,UACrFtS,KAAK8zB,QAAU,CACX13B,QAAsB,OAAboD,QAAkC,IAAbA,OAAsB,EAASA,EAASpD,QACtE8M,UAAwB,OAAb1J,QAAkC,IAAbA,OAAsB,EAASA,EAAS0J,UACxEurB,aAAa,SAEXz0B,KAAKw0B,aAEf,CACA,MAAO5qB,GACH,MAAMA,CACV,CAAC,QAEG5J,KAAK6zB,aAAc,CACvB,CACJ,GACJ,CACAW,WAAAA,GACI,OAAOvtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMoI,EAAWpI,KAAKgoC,WAChBlsC,QAA2B,OAAbsM,QAAkC,IAAbA,OAAsB,EAASA,EAAS3L,UAGjFuD,KAAK4zB,SAAW93B,CACpB,GACJ,CACAsW,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAKgoC,WACtB,GAAI9oB,EAAQ,CACRlf,KAAK8zB,QAAU,KACf,UACwB,OAAb1rB,QAAkC,IAAbA,OAAsB,EAASA,EAASgK,YACxE,CACA,MAAOxI,GACP,CACJ,CACJ,GACJ,CACAuf,wBAAAA,CAAyBrf,EAAa6qB,GAClC,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAKgoC,WACtB,IAAK9oB,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,MAAM30B,QAAiB4I,EAAS+gB,yBAAyBrf,EAAa6qB,GACtE,GAAIn1B,EAASgU,KACT,MAAM,IAAIrB,MAAM3S,EAAS+R,SAE7B,OAAO/R,CACX,CACA,MAAOoK,GACH,MAAMA,CACV,CACJ,GACJ,CACAmf,eAAAA,CAAgBjf,EAAa6qB,GACzB,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAKgoC,WACtB,IAAK9oB,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,MAAM30B,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAAS2gB,gBAAgBjf,GACrG,GAAItK,EAASgU,KACT,MAAM,IAAIrB,MAAM3S,EAAS+R,SAE7B,OAAO/R,CACX,CACA,MAAOoK,GACH,MAAMA,CACV,CACJ,GACJ,CACAR,WAAAA,CAAYmI,GACR,OAAOtK,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMkf,EAASlf,KAAK8zB,QACd1rB,EAAWpI,KAAKgoC,WACtB,IAAK9oB,IAAW9W,EACZ,MAAM,IAAI7I,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAC5E,MAAM30B,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAASgB,YAAYmI,GACjG,GAAI/R,EACA,OAAOA,EAGP,MAAM,IAAI2S,MAAM,sBAExB,CACA,MAAOvI,GACH,MAAMA,CACV,CACJ,GACJ,CACA0f,eAAAA,CAAgBhK,GACZ,OAAOrY,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACmBA,KAAK8zB,QAApB,MACM1rB,EAAWpI,KAAKgoC,WAChBO,EAAuBlU,GAAeptB,EAAUjH,UAAM,OAAQ,GAAQ,YACxE,IAAI8B,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,EACxB,GAAmB,OAAfmkB,QAAsC,IAAfA,OAAwB,EAASA,EAAWnrB,UACnElJ,KAAK8zB,QAAUn5B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGzc,KAAK8zB,SAAU,CAAE5qB,UAAWmrB,EAAWnrB,YAAsC,QAAvBpH,EAAK9B,KAAK8zB,eAA4B,IAAPhyB,OAAgB,EAASA,EAAGoH,WAAY8qB,QAASK,EAAWL,UAAoC,QAAvBjyB,EAAK/B,KAAK8zB,eAA4B,IAAP/xB,OAAgB,EAASA,EAAGiyB,SAAU53B,QAASi4B,EAAWj4B,UAAoC,QAAvB4F,EAAKhC,KAAK8zB,eAA4B,IAAP9xB,OAAgB,EAASA,EAAG5F,eAE7W,CACD,MAAMoD,QAA+B,OAAb4I,QAAkC,IAAbA,OAAsB,EAASA,EAASkK,UACrFtS,KAAK8zB,QAAUn5B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGzc,KAAK8zB,SAAU,CAAEE,SAAuB,OAAbx0B,QAAkC,IAAbA,OAAsB,EAASA,EAASw0B,WAAqC,QAAvBtrB,EAAK1I,KAAK8zB,eAA4B,IAAPprB,OAAgB,EAASA,EAAGsrB,SAAU53B,SAAuB,OAAboD,QAAkC,IAAbA,OAAsB,EAASA,EAASpD,WAAqC,QAAvBuM,EAAK3I,KAAK8zB,eAA4B,IAAPnrB,OAAgB,EAASA,EAAGvM,SAAU8M,WAAyB,OAAb1J,QAAkC,IAAbA,OAAsB,EAASA,EAAS0J,aAAuC,QAAvBgH,EAAKlQ,KAAK8zB,eAA4B,IAAP5jB,OAAgB,EAASA,EAAGhH,YAC5gB,CAEa,OAAboW,QAAkC,IAAbA,GAA+BA,EAAStf,KAAK8zB,QACtE,IACa,OAAb1rB,QAAkC,IAAbA,GAA+BA,EAASkhB,gBAAgBif,EACjF,CACA,MAAO3+B,GACH,MAAMA,CACV,CACJ,GACJ,CACA0qB,eAAAA,GACI,OAAOrtB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACmBA,KAAK8zB,QACH9zB,KAAKgoC,UAO1B,CACA,MAAOp+B,GACH,MAAMA,CACV,CACJ,GACJ,EAEJ/O,EAAQktC,mBAAqBA,C,qCCpO7BptC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkkB,gCAAkClkB,EAAQ2tC,mCAAgC,EAClF,IAAIC,EAAuB/tC,EAAQ,OACnCC,OAAOC,eAAeC,EAAS,gCAAiC,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOilC,EAAqBD,6BAA+B,IAClK7tC,OAAOC,eAAeC,EAAS,kCAAmC,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOilC,EAAqB1pB,+BAAiC,G,4/BCL1JrkB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoK,oBAAiB,EACzB,MAAMy+B,EAAKhpC,EAAQ,MACbwN,EAASxN,EAAQ,OACvB,MAAMuK,EACFkD,WAAAA,CAAYd,GACRrH,KAAK0oC,0BAA4B,GACjC1oC,KAAK2oC,+BAAiC,GACtC3oC,KAAKoI,SAAWf,EAChBrH,KAAKoI,SAASiX,GAAG,WAAW,KACxB,IAAIupB,EAAY5oC,KAAKkf,UACrB,EAAIhX,EAAO5M,UAAU,gCAAiCC,KAAKC,UAAUotC,IACrE5oC,KAAK0oC,0BAA0B5rC,SAAQ+rC,GAAYA,EAASD,IAAW,IAE3E5oC,KAAKoI,SAASiX,GAAG,aAAa,KAC1B,IAAIupB,EAAY5oC,KAAKkf,UACrB,EAAIhX,EAAO5M,UAAU,kCAAmCC,KAAKC,UAAUotC,IACvE5oC,KAAK0oC,0BAA0B5rC,SAAQ+rC,GAAYA,EAASD,IAAW,IAE3E5oC,KAAKoI,SAASiX,GAAG,cAAc,MAC3B,EAAInX,EAAO5M,UAAU,oCACrB0E,KAAK0oC,0BAA0B5rC,SAAQ+rC,GAAYA,EAAS,OAAM,IAEtE7oC,KAAKoI,SAASiX,GAAG,iBAAkBzV,KAC/B,EAAI1B,EAAO5M,UAAU,sCAAuCC,KAAKC,UAAUoO,IAC3E5J,KAAK2oC,+BAA+B7rC,SAAQgsC,GAAiBA,EAAcl/B,IAAO,GAE1F,CACAkS,SAAAA,GACI,QAAI9b,KAAKoI,SAAS0T,eACL9b,KAAKoI,SAASS,QAAQC,WAAW,MAGlD,CACAF,OAAAA,GACI,IACI,IAAK5I,KAAKoI,SAASS,QACf,OAAO,KAEX,IAAIkgC,EAAe/oC,KAAKoI,SAASS,QAAQC,WAAW,OACpD,IAAKigC,IAAiBA,EAAartC,UAAYqtC,EAAartC,QAAQS,SAChE,OAAO,KAEX,IAAIA,EAAW4sC,EAAartC,QAAQS,SACpC,MAAO,CACHC,QAASD,EAASC,QAClBe,MAAOhB,EAASM,QAChBusC,gBAAiB7sC,EAAS6sC,gBAC1B9/B,UAAW/M,EAAS+M,UAE5B,CACA,MAAOrB,GAEH,OADA,EAAIK,EAAO5M,UAAU,iCAAkCC,KAAKC,UAAUqM,IAC/D,IACX,CACJ,CACAqX,MAAAA,GACI,GAAIlf,KAAK8b,YACL,IACI,IAAImtB,EAAgBjpC,KAAKoI,SAASS,QAAQqW,OACtCgqB,EAAgB,CAChBhX,SAAU+W,EAAc/W,SACxB7zB,QAAS4qC,EAAc5qC,QACvB2mB,WAAYikB,EAAcjkB,WAC1B8L,mBAAoBmY,EAAcnY,mBAClCiE,SAAU,CAAC,wBAEf,MAAM7V,EAAS,CACX1c,OAAQ0mC,EACR9gC,SAAU,OACVQ,QAAS5I,KAAK4I,WAElB,IAAImgC,EAAe/oC,KAAKoI,SAASS,QAAQC,WAAW,OAOpD,OANIigC,GAAgBA,EAAartC,SAAWqtC,EAAartC,QAAQgB,YAC7DwiB,EAAOiqB,aAAe,CAClB3sC,SAAUusC,EAAartC,QAAQgB,aAGvC,EAAIwL,EAAO5M,UAAU,0BAA2BC,KAAKC,UAAU0jB,IACxDA,CACX,CACA,MAAOrX,GAEH,OADA,EAAIK,EAAO5M,UAAU,gCAAiCC,KAAKC,UAAUqM,IAC9D,IACX,CAEJ,OAAO,IACX,CACAuhC,cAAAA,CAAeP,EAAUC,GAKrB,OAJA9oC,KAAK0oC,0BAA0BpsC,KAAKusC,GAChCC,GACA9oC,KAAK2oC,+BAA+BrsC,KAAKwsC,GAEtC,KACH9oC,KAAK0oC,0BAA4B1oC,KAAK0oC,0BAA0BxqC,QAAOrC,GAAQA,IAASgtC,IACpFC,IACA9oC,KAAK2oC,+BAAiC3oC,KAAK2oC,+BAA+BzqC,QAAOrC,GAAQA,IAASitC,IACtG,CAER,CACAj/B,eAAAA,CAAgBC,GACZ,OAAO7C,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAI8J,EAAYrN,SAAWqN,EAAYrN,UAAYyL,EAAO5K,SAAS6I,QAC/D,MAAM,IAAIu9B,EAAG/jC,gBAAgB+jC,EAAG9jC,wBAAwBwc,cAAe,gDAK3E,GAHKtS,EAAYrN,UACbqN,EAAYrN,QAAUyL,EAAO5K,SAAS6I,SAEtCnG,KAAKoI,SAASS,UACTiB,EAAY0iB,KAAM,CACnB,MAAMzwB,EAAWiE,KAAKoI,SAAS4a,6BAA6B,OAC5DlZ,EAAY0iB,KAAOzwB,EAAS,EAChC,CAEJ,MAAMstC,EAAgB,CAClBn4B,OAAQ,sBACRF,OAAQlH,GAEZ,IAAI3M,EAAQ,OAAS+K,EAAO5K,SAAS6I,QAErC,OADA,EAAI+B,EAAO5M,UAAU,kDAAmD6B,EAAO5B,KAAKC,UAAU6tC,IACvFrpC,KAAKoI,SAASqB,QAAQ4/B,EAAelsC,EAChD,GACJ,EAEJtC,EAAQoK,eAAiBA,EACzBpK,EAAAA,WAAkBoK,C,qCCvINvK,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQyuC,oBAAiB,EACzB,MAAM99B,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAM4uC,EACFnhC,WAAAA,CAAY0S,EAAM/e,EAAM+gB,EAAQzQ,GAC5BpM,KAAKlE,KAAO,SACZkE,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,sBAC1BvlB,KAAKlE,KAAOA,CAChB,CACA+rB,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACA8gB,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3d,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,iCAAkCC,KAAKC,UAAUsE,KACtE,EAAIoI,EAAO5M,UAAU,8BAA+B0E,KAAK/D,YACpD+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAC9E,OAAOlR,KAAK6c,OAAOpT,QAAQ3J,GAG3B,MAAM,IAAIoI,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAAsB,yBAE9F,GACJ,CACAK,eAAAA,CAAgBlX,EAASmX,GAEhB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAChC,GAAoB,qBAAT4qB,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,CACJ,CACAwb,SAAAA,CAAUh7B,GACN,OAAOvI,KAAKwjC,iBAAiBj7B,EACjC,CAWAi7B,gBAAAA,CAAiBj7B,GAOb,OANKA,IACDA,EAAUvI,KAAK/D,UAAU8hB,cACP,OAAZxV,QAAgC,IAAZA,OAAqB,EAASA,EAAQS,WAAW,aACvET,EAAU,UAAUA,MAGrBvI,KAAK/D,UAAUF,SAASmC,QAAO,SAAU0K,GAC5C,IAAI66B,EAAa76B,EAAQ1L,MAAM,KAC/B,OAAOumC,EAAWpnC,OAAS,GAAKuM,EAAQI,WAAWT,EACvD,IAAGuV,KAAI,SAAUlV,GACb,IAAI66B,EAAa76B,EAAQ1L,MAAM,KAC/B,OAAOumC,EAAW,EACtB,IAAG,EACP,CACAngB,gBAAAA,CAAiBxjB,GACb,OAAO,CACX,EAEJjF,EAAQyuC,eAAiBA,EACzBzuC,EAAAA,WAAkByuC,C,qCCnJlB,IAAIriC,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQotB,uBAAoB,EAC5B,MAAMxc,EAAkB/Q,EAAQ,OAC1B6uC,EAAgBxpC,EAAgBrF,EAAQ,QACxCwN,EAASxN,EAAQ,OACjB++B,EAAS/+B,EAAQ,OACjB8uC,EAAuB,CACzBC,OAAQ,mBACR,eAAgB,oBAEdC,EAAsB,OACtBC,EAAqB,CACvBC,QAASJ,EACTt4B,OAAQw4B,GAIZ,MAAMzhB,EACF9f,WAAAA,CAAYtK,EAAKgsC,GAAsB,GAMnC,GALA7pC,KAAKnC,IAAMA,EACXmC,KAAK6pC,oBAAsBA,EAC3B7pC,KAAKoM,OAAS,IAAIX,EAAgBY,aAClCrM,KAAK8pC,aAAc,EACnB9pC,KAAK+pC,aAAc,IACd,EAAItQ,EAAO9f,WAAW9b,GACvB,MAAM,IAAIsU,MAAM,wDAAwDtU,KAE5EmC,KAAKnC,IAAMA,EACXmC,KAAK6pC,oBAAsBA,CAC/B,CACA,aAAI/tB,GACA,OAAO9b,KAAK8pC,WAChB,CACA,cAAI7V,GACA,OAAOj0B,KAAK+pC,WAChB,CACA1qB,EAAAA,CAAG1K,EAAO2K,GACNtf,KAAKoM,OAAOiT,GAAG1K,EAAO2K,EAC1B,CACAje,IAAAA,CAAKsT,EAAO2K,GACRtf,KAAKoM,OAAO/K,KAAKsT,EAAO2K,EAC5B,CACAE,GAAAA,CAAI7K,EAAO2K,GACPtf,KAAKoM,OAAOoT,IAAI7K,EAAO2K,EAC3B,CACAC,cAAAA,CAAe5K,EAAO2K,GAClBtf,KAAKoM,OAAOmT,eAAe5K,EAAO2K,EACtC,CACAxe,IAAAA,GACI,OAAOmG,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWlS,EAAMmC,KAAKnC,WACtDmC,KAAKgqC,SAASnsC,EACxB,GACJ,CACAi8B,KAAAA,GACI,OAAO7yB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAK8pC,YACN,MAAM,IAAI33B,MAAM,6BAEpBnS,KAAKk6B,SACT,GACJ,CACAhmB,IAAAA,CAAKxY,GACD,OAAOuL,EAAUjH,UAAM,OAAQ,GAAQ,YAC9BA,KAAK8pC,oBACA9pC,KAAKgqC,YAEf,IACI,MAAMC,GAAO,EAAI/hC,EAAOuG,mBAAmB/S,GACrCwuC,QAAY,EAAIX,EAAcrnC,SAASlC,KAAKnC,IAAKlD,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGktB,GAAqB,CAAEM,UACxG/tC,QAAaguC,EAAIC,OACvBnqC,KAAKi6B,UAAU,CAAE/9B,QACrB,CACA,MAAO2L,GACH7H,KAAKoqC,QAAQ1uC,EAAQiV,GAAI9I,EAC7B,CACJ,GACJ,CAEAmiC,QAAAA,GACI,OAAO/iC,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWlS,EAAMmC,KAAKnC,KAC5D,KAAK,EAAI47B,EAAO9f,WAAW9b,GACvB,MAAM,IAAIsU,MAAM,wDAAwDtU,KAE5E,GAAImC,KAAK+pC,YACL,OAAO,IAAIviC,SAAQ,CAACD,EAASE,KACzBzH,KAAKoM,OAAO/K,KAAK,kBAAmBuI,IAChCnC,EAAOmC,EAAM,IAEjB5J,KAAKoM,OAAO/K,KAAK,QAAQ,KACrB,GAAgC,qBAArBrB,KAAK8pC,YACZ,OAAOriC,EAAO,IAAI0K,MAAM,0CAE5B5K,GAAS,GACX,IAGVvH,KAAKnC,IAAMA,EACXmC,KAAK+pC,aAAc,EACnB,IACI,IAAK/pC,KAAK6pC,oBAAqB,CAC3B,MAAMI,GAAO,EAAI/hC,EAAOuG,mBAAmB,CAAEkC,GAAI,EAAG0D,QAAS,MAAOnD,OAAQ,OAAQF,OAAQ,WACtF,EAAIu4B,EAAcrnC,SAASrE,EAAKlD,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGktB,GAAqB,CAAEM,SACjG,CACAjqC,KAAKqT,QACT,CACA,MAAOxL,GACH,MAAM+B,EAAQ5J,KAAKqqC,WAAWxiC,GAG9B,MAFA7H,KAAKoM,OAAOsE,KAAK,iBAAkB9G,GACnC5J,KAAKk6B,UACCtwB,CACV,CACJ,GACJ,CACAyJ,MAAAA,GACIrT,KAAK8pC,aAAc,EACnB9pC,KAAK+pC,aAAc,EACnB/pC,KAAKoM,OAAOsE,KAAK,OACrB,CACAwpB,OAAAA,GACIl6B,KAAK8pC,aAAc,EACnB9pC,KAAK+pC,aAAc,EACnB/pC,KAAKoM,OAAOsE,KAAK,QACrB,CACAupB,SAAAA,CAAUpyB,GACN,GAAsB,qBAAXA,EAAE3L,KACT,OACJ,MAAMR,EAA4B,kBAAXmM,EAAE3L,MAAoB,EAAIgM,EAAO6G,eAAelH,EAAE3L,MAAQ2L,EAAE3L,KACnF8D,KAAKoM,OAAOsE,KAAK,UAAWhV,EAChC,CACA0uC,OAAAA,CAAQz5B,EAAI9I,GACR,MAAM+B,EAAQ5J,KAAKqqC,WAAWxiC,GACxB0J,EAAU3H,EAAM2H,SAAW3H,EAAMqI,WACjCvW,GAAU,EAAI+9B,EAAO7f,oBAAoBjJ,EAAIY,GACnDvR,KAAKoM,OAAOsE,KAAK,UAAWhV,EAChC,CACA2uC,UAAAA,CAAWxiC,EAAGhK,EAAMmC,KAAKnC,KACrB,OAAO,EAAI47B,EAAO/f,sBAAsB7R,EAAGhK,EAAK,OACpD,EAEJhD,EAAQotB,kBAAoBA,C,qCCxJhBvtB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQyvC,iBAAc,EACtB,MAAM/qC,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClB6vC,EAASxqC,EAAgBrF,EAAQ,OACjCo6B,EAAUp6B,EAAQ,OAClB0/B,EAAgB1/B,EAAQ,OAC9B,MAAM4vC,EACFniC,WAAAA,GAGInI,KAAKwqC,qCAAuC,IAChD,CACAt2B,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EACJ,UACU9B,KAAKkS,kBACX,EAAIvG,EAAQrQ,UAAU,4BAA6BC,KAAKC,UAAUiO,IAClE,MAAMyH,EAASzH,EAAQyH,OACvB,IAAI7V,EACJ,IAAIoO,EAAQyd,aA2DR,MAAM,IAAI3nB,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,2BAA2BlL,MA1DlH,OAAQA,GACJ,IAAK,qBAEG,GAAIzH,EAAQyd,cAAgD,kBAAzBzd,EAAQyd,cAA6B,YAAazd,EAAQyd,aAAc,CACvG,IAAI3V,EAA0C,QAA/BzP,EAAK2H,EAAQyd,oBAAiC,IAAPplB,OAAgB,EAASA,EAAGyP,QAClF,MAAMk5B,GAAiB,IAAIC,aAAcC,OAAOp5B,GAC1Cq5B,QAAsBptC,OAAO6qC,UAAUwC,OAAOzhC,YAAYqhC,EAAgB,QAMhF,OALApvC,EAAS,CACL6V,OAAQzH,EAAQyH,OAChB7V,OAAQkvC,EAAOroC,QAAQyoC,OAAOC,EAAc3hB,aAEhD,EAAItd,EAAQrQ,UAAU,2BAA4BC,KAAKC,UAAUovC,IAC1DvvC,CACX,CAEI,MAAM,IAAIkE,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,2BAA2BlL,MAI9H,IAAK,yBACD,CACI,IAAI45B,QAAqBttC,OAAO6qC,UAAUwC,OAAO9hB,gBAAgBtf,EAAQyd,cAOzE,OANA,EAAIvb,EAAQrQ,UAAU,iCAAkCC,KAAKC,UAAUsvC,IACvEzvC,EAAS,CACL6V,OAAQzH,EAAQyH,OAChBmkB,aAAcyV,IAElB,EAAIn/B,EAAQrQ,UAAU,4BAA4B,EAAIqQ,EAAQ8C,mBAAmBpT,IAC1EA,CACX,CAEJ,IAAK,6BACD,CACI,IAAI0vC,QAAkBvtC,OAAO6qC,UAAUwC,OAAOG,oBAAoBvhC,EAAQyd,cAM1E,OALA,EAAIvb,EAAQrQ,UAAU,4BAA4B,EAAIqQ,EAAQ8C,mBAAmBs8B,IACjF1vC,EAAS,CACL6V,OAAQzH,EAAQyH,OAChBmkB,aAAc0V,GAEX1vC,CACX,CAEJ,IAAK,gCAEG,IAAI4vC,QAA0BztC,OAAO6qC,UAAUwC,OAAOhf,uBAAuBpiB,EAAQyd,cAMrF,OALA,EAAIvb,EAAQrQ,UAAU,4BAA4B,EAAIqQ,EAAQ8C,mBAAmBw8B,IACjF5vC,EAAS,CACL6V,OAAQzH,EAAQyH,OAChBmkB,aAAc4V,GAEX5vC,EAGf,QACI,MAAM,IAAIkE,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,qBAAsB,YAAYlO,MAM1H,CACA,MAAOtH,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,0BAA2BsO,GAC3CA,CACV,CACJ,GACJ,CACAwI,UAAAA,GACA,CACAF,cAAAA,GACI,OAAI,EAAI4iB,EAAQU,UAAU,UACfx1B,KAAKsS,UAET9K,QAAQD,SACnB,CACAozB,oBAAAA,CAAqBC,EAASC,EAAeC,EAAaC,EAAwBC,EAA8BtY,GAC5G,OAAOzb,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAIi7B,EAAe,GACnBF,EAAuBj+B,SAAQjB,IACvBA,EAAKI,YAAcsD,EAAWqH,iBAC9Bq0B,EAAa3+B,QAAQT,EAAKkB,OAC9B,IAEJ,IAAIJ,EAAY,GACZE,EAAQ,CAAC,EACTd,EAAW,CAAC,EAsBhB,GAjBAk/B,EAAan+B,SAASo+B,IAClB,IAAIC,EAAkBH,EAA6B5+B,QAAQR,MAAMoB,GAC7B,QAAxBA,EAAYuL,SAA8C,MAAzBvL,EAAYo+B,UAC7Cp+B,EAAYq+B,mBAAqBH,IAEzCC,IACAx+B,EAAUL,KAAK4+B,EAAW,IAAMC,EAAgB/+B,SAE5CS,EAAMq+B,GADNn/B,GAAY,cAAeA,EACTA,EAGA,CACdmN,UAAWiyB,EAAgBjyB,WAGvC,IAEAvM,GAAaA,EAAUN,OAAS,EAAG,CACnC,IAAIu/B,EAAoB,CACpB3/B,UAAWsD,EAAWqH,gBACtBjK,UAAWA,EACXC,QAAS,IAAIw9B,EAAc8Q,eAC3BruC,MAAOA,GAGX,OADA,EAAI8O,EAAQrQ,UAAU,2CAA4CC,KAAKC,UAAUogC,IAC1EA,CACX,CAEJ,GACJ,CACAtpB,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOxC,OAAO6qC,UAAUwC,OAAOv4B,SACnC,GACJ,CACAwpB,aAAAA,GACI,OAAO97B,KAAKsS,SAChB,CACA+W,yBAAAA,CAA0BoF,GACtBtL,QAAQpX,IAAI,uCAAwC,OACpD/L,KAAKwqC,qCAAwCthC,IACzCia,QAAQpX,IAAI,8CAA+CiC,KAAKC,MAAO,MAAO/E,GAC1EA,GACAulB,GACJ,EAEJjxB,OAAO6qC,UAAUwC,OAAOxrB,GAAG,iBAAkBrf,KAAKwqC,qCACtD,CACAjrB,cAAAA,GACQvf,KAAKwqC,sCACLhtC,OAAO6qC,UAAUwC,OAAOtrB,eAAe,iBAAkBvf,KAAKwqC,qCAEtE,EAEJ3vC,EAAQyvC,YAAcA,C,qCCnLV5vC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAMywC,EACFhjC,WAAAA,CAAY0S,EAAM/e,EAAM+gB,EAAQzQ,GAC5BpM,KAAKlE,KAAO,WACZkE,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,sBAC1BvlB,KAAKlE,KAAOA,CAChB,CACA+rB,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACA8gB,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3d,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,mCAAoCC,KAAKC,UAAUsE,KACxE,EAAIoI,EAAO5M,UAAU,gCAAiC0E,KAAK/D,YACtD+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAC9E,OAAOlR,KAAK6c,OAAOpT,QAAQ3J,GAG3B,MAAM,IAAIoI,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAAsB,yBAA2Btf,EAAKoR,OAE9H,GACJ,CACAuO,eAAAA,CAAgBlX,EAASmX,GAEhB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAChC,GAAoB,qBAAT4qB,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,CACJ,CACAzE,gBAAAA,CAAiBxjB,GACb,OAAO,CACX,EAEJjF,EAAAA,WAAkBswC,C,qCCtHNzwC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmJ,8BAA2B,EACnC,MAAMM,EAAoB5J,EAAQ,OAC5B6E,EAAa7E,EAAQ,OACrB0wC,EAAW1wC,EAAQ,OACnB2wC,EAAgB3wC,EAAQ,OACxB4wC,EAAkB5wC,EAAQ,OAC1B6wC,EAAgB7wC,EAAQ,OACxB8wC,EAAiB9wC,EAAQ,OACzB+wC,EAAiB/wC,EAAQ,OACzBiR,EAAUjR,EAAQ,OAClBqf,EAAgBrf,EAAQ,OACxBo6B,EAAUp6B,EAAQ,OAClB0zB,EAAiB1zB,EAAQ,KACzBwzB,EAAexzB,EAAQ,OAC7B,MAAMsJ,UAAiCM,EAAkBH,gBACrD2qB,OAAAA,GACI,OAAOZ,EAAaxE,eAAeW,OAAON,iBAC9C,CACA5hB,WAAAA,GACIkrB,QACArzB,KAAKywB,WAAa,aAClBzwB,KAAKk3B,cAAgB,oDACrBl3B,KAAKqgC,YAAYsH,IAAIpoC,EAAWw8B,mBAAoB,IAAIqP,EAASzqB,gBACjE3gB,KAAKqgC,YAAYsH,IAAIpoC,EAAWqH,gBAAiB,IAAIykC,EAAcf,aACnEtqC,KAAKqgC,YAAYsH,IAAIpoC,EAAWwH,kBAAmB,IAAIukC,EAAgBI,eACvE1rC,KAAKqgC,YAAYsH,IAAIpoC,EAAWsH,gBAAiB,IAAI0kC,EAAcnf,aACnEpsB,KAAKqgC,YAAYsH,IAAIpoC,EAAWuH,gBAAiB,IAAI0kC,EAAelqB,aACpEthB,KAAKqgC,YAAYsH,IAAIpoC,EAAWmH,gBAAiB,IAAI+kC,EAAezd,YACxE,CACAzK,UAAAA,CAAWC,EAAmB/H,GAC1B,OAAOxU,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EAAIC,EAEZ,IADA,EAAI2J,EAAQrQ,UAAU,8BAA+BC,KAAKC,UAAUgoB,KAC/DA,EACD,MAAM,IAAIjkB,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,mBAE5E9E,KAAK0iB,SAAWc,EAAkB2M,eAAeZ,SACjD,IAAIF,EAA0B7L,EAAkB2M,eAChD,IACI,IAAI3yB,SAAUA,OAAO6qC,UA+DjB,MAAM,IAAI9oC,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,mBA9DxE,GAAIuqB,EAAwBI,SAAU,CAClC,IAAI1S,EAAkBsS,EAAwBI,SACzC7zB,MAAKC,GAAsB,oBAAdA,EAAKC,OACnB6O,QAAgBnN,OAAO6qC,UAAU9f,aACjCltB,EAAS,CACT6V,OAAQ,UACRoG,UAAW+X,EAAwB/X,UACnC5b,QAAS,CACLwjB,OAAQ,CACJgT,SAAwC,QAA7BpwB,EAAKJ,UAAUwwB,gBAA6B,IAAPpwB,EAAgBA,EAAK,IACrEzD,QAAS0b,EAAcoQ,oBACvBnF,WAAwB,OAAZra,QAAgC,IAAZA,EAAqBA,EAAU,QAC/DmmB,mBAAoB,GAExBn1B,UAAW,KAGfgwC,EAAe,CACf7vC,KAAM,kBACNC,SAAU,IAEdV,EAAOK,QAAQC,UAAUW,KAAKqvC,SACxB3rC,KAAKoS,aACX,MAAMw5B,EAAyD,QAA7C7pC,EAAKgb,EAAgB8uB,0BAAuC,IAAP9pC,EAAgBA,EAAK,GACtF+pC,EAAyD,QAA7C9pC,EAAK+a,EAAgBa,0BAAuC,IAAP5b,EAAgBA,EAAK,GAC5F,IAAI44B,GAAU,EACVE,GAAc,EAClB,GAAI8Q,EAASvvC,OAASyvC,EAASzvC,SAAW,KAAM,EAAIy4B,EAAQU,UAAU,UAAW,CAC7E,MAAMuW,EAAiC,IAApBH,EAASvvC,OAAeuvC,EAAS,GAAKE,EAAS,GAC5DE,EAAiBhsC,KAAKwgC,kBAAkBuL,EAAW9vC,WAEzD,IAAIgwC,QAAgD,OAAnBD,QAA8C,IAAnBA,OAA4B,EAASA,EAAelQ,cAAciQ,EAAY/rC,KAAK0iB,UACzIupB,IACFnR,GAAc,EACdF,GAAU,EAElB,CACA,IAAI7+B,QAAiBiE,KAAKksC,2BAA2BtR,GAAS,EAAOE,EAAa8Q,EAAUE,GAC5F,IAAI/vC,EAOA,MAAM,IAAIwD,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,kCALvF,GADAuvB,EAAa5vC,SAASO,QAAQP,GACO,IAAjC4vC,EAAa5vC,SAASM,OACtB,MAAM,IAAIkD,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,mCAM3Fpc,KAAK8xB,wBACD9xB,KAAKugC,mBACL/iC,OAAO6qC,UAAU9oB,eAAe,aAAcvf,KAAKugC,mBAEvDvgC,KAAKugC,kBAAoB,KACrBpd,QAAQpX,IAAI,gCACZ/L,KAAKogC,mBAAmBtjC,SAAQwiB,GAAYA,MAC5Ctf,KAAKogC,mBAAqB,EAAE,EAEhC5iC,OAAO6qC,UAAUhpB,GAAG,aAAcrf,KAAKugC,mBACvCvgC,KAAK8xB,sBAAsBz2B,EAAQ2E,MAE3C,CAKR,CACA,MAAO4J,GACH,IAAI4J,EAAOjU,EAAWK,wBAAwBwc,cAE1CxS,aAAiBrK,EAAWI,kBAC5B6T,EAAO5J,EAAM4J,KACH5J,EAAM2H,SAEhBvR,KAAK8xB,uBACL9xB,KAAK8xB,sBAAsB,CACvBxa,UAAW,KACXpG,OAAQ,gBACRxV,QAAS,CACL8X,KAAMA,IAEXxT,KAEX,CACJ,GACJ,CACAmsC,mBAAAA,GACI,OAAOllC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EACJ,IACI,IAAIi/B,EAAiD,QAAjCj/B,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGkW,kBAAkB,kBAC3G,IAAK+oB,EACD,MAAM,IAAIxhC,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,uBAE5E,EAAIxoB,EAAQrQ,UAAU,sDAAuDC,KAAKC,UAAUulC,IAC5F,IAAI8K,EAAqB7rC,KAAKosC,+BAA+BrL,IAC7D,EAAIp1B,EAAQrQ,UAAU,6DAA8DC,KAAKC,UAAUqwC,IAEnG,IAAI9vC,QAAiBiE,KAAKksC,4BAA2B,GAAO,GAAM,EAAOL,EAAoB,IAE7F,IADA,EAAIlgC,EAAQrQ,UAAU,mDAAoDC,KAAKC,UAAUO,KACrFA,EAgBA,MAAM,IAAIwD,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,kCAhB7E,CACV,IAAIiwB,EAAkB,CAAC,GACvB,EAAIje,EAAenzB,wBAAwBc,EAAUswC,GAChDrsC,KAAKssC,2BAA2BvL,EAAaj4B,WAAYujC,MAC1D,EAAI1gC,EAAQrQ,UAAU,8DAA+DC,KAAKC,UAAUulC,IAChG/gC,KAAKyuB,wBACL,EAAI9iB,EAAQrQ,UAAU,+DAAgE0E,KAAKyuB,uBAC3FzuB,KAAKyuB,sBAAsBsS,MAG3B,EAAIp1B,EAAQrQ,UAAU,0DAChB0E,KAAKoS,cAGvB,CAIJ,CACA,MAAOvK,GAEH,MADA,EAAI8D,EAAQrQ,UAAU,8CAA+CC,KAAKC,UAAUqM,IAC9EA,CACV,CACJ,GACJ,CACAykC,0BAAAA,CAA2BC,EAAaC,GACpC,IAAIC,GAAiB,EACrB,IAAK,MAAM50B,KAAO00B,EACd,GAAIC,EAAY30B,GAAM,CAClB,MAAM60B,EAAMH,EAAY10B,GAClB80B,EAAMH,EAAY30B,IACxB,EAAIlM,EAAQrQ,UAAU,4CAA6CC,KAAKC,UAAUkxC,KAClF,EAAI/gC,EAAQrQ,UAAU,4CAA6CC,KAAKC,UAAUmxC,IAClF,MAAMC,EAAkBrxC,KAAKC,UAAU,IAAIkxC,EAAI3wC,UAAU8wC,UAAYtxC,KAAKC,UAAU,IAAImxC,EAAI5wC,UAAU8wC,QACjGD,IACDH,GAAiB,EACjBC,EAAI3wC,SAAW,IAAI4wC,EAAI5wC,UACvB2wC,EAAI7vC,MAAQlC,OAAO8hB,OAAO,CAAC,EAAGkwB,EAAI9vC,OAClC6vC,EAAIhxC,QAAUf,OAAO8hB,OAAO,CAAC,EAAGkwB,EAAIjxC,WAExC,EAAIiQ,EAAQrQ,UAAU,gDAAiDC,KAAKC,UAAUkxC,GAC1F,CAGJ,OADA,EAAI/gC,EAAQrQ,UAAU,wEAAwEmxC,KACvFA,CACX,CACAzsB,cAAAA,CAAeD,EAAa2S,GACxB,IAAI5wB,EACJ,GAAKtE,OAAO6qC,UAAZ,CAIAroC,KAAK0iB,SAAgD,QAApC5gB,EAAKie,EAAYpD,qBAAkC,IAAP7a,OAAgB,EAASA,EAAG4gB,UACzF,EAAI/W,EAAQrQ,UAAU,iDAAkDC,KAAKC,UAAUukB,IACvF,IAAI8rB,EAAqB7rC,KAAKosC,+BAA+BrsB,IAC7D,EAAIpU,EAAQrQ,UAAU,wDAAyDC,KAAKC,UAAUqwC,IAC9F7rC,KAAKksC,4BAA2B,GAAO,GAAO,EAAOL,EAAoB,IACpE7jC,MAAMjM,KACP,EAAI4P,EAAQrQ,UAAU,8CAA+CC,KAAKC,UAAUO,IAEpF,IAAI+wC,GAAW,EACf,IAAK,IAAIC,KAAiBhtB,EAAYjX,WAAY,CAC9C,IAAIkkC,EAAejxC,EAASH,MAAMC,GAASA,EAAKI,YAAc8wC,IAC1DE,EAAkBltB,EAAYjX,WAAWikC,GAAehxC,SAC5D,IAAKixC,EACD,MAAM,IAAIztC,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,2CAE/F,IAAIooC,EAAqBD,EACrBF,IAAkBxtC,EAAWwH,mBAAqBmmC,GAAsBA,EAAmB7wC,OAAS,IACpG6wC,EAAqBD,EAAgBnvB,KAAK1hB,IAC/B,EAAIuP,EAAQ6Q,2BAA2BpgB,MAGtD,MAAM+wC,EAAWH,EAAarwC,UAAUN,SAAW6wC,EAAmB7wC,QAClE2wC,EAAarwC,UAAUS,QAAQyvC,OAAOO,OAAM,CAACtyC,EAAOojB,KAChD,GAAI6uB,IAAkBxtC,EAAWwH,kBAAmB,CAChD,IAAIsmC,EAAWH,EAAmB9vC,QAAQyvC,OAAO3uB,GAEjD,OADA,EAAIvS,EAAQrQ,UAAU,4CAA6CR,EAAOuyC,GACnEA,IAAavyC,CACxB,CAEI,OAAOA,IAAUoyC,EAAmB9vC,QAAQyvC,OAAO3uB,EACvD,IAEHivB,IACDL,GAAW,EAEnB,CACA,IAAIA,EAIA,MAAM,IAAIvtC,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,wDAH3F4tB,EAAgB3S,EAIpB,IACD5L,OAAOtM,KACN,EAAI8D,EAAQrQ,UAAU,8CAA+CC,KAAKC,UAAUqM,IACpF6qB,EAAgB,KAAK,GA7CzB,MAFIA,EAAgB,KAiDxB,CACA0Z,8BAAAA,CAA+BrsB,GAC3B,IAAIje,EAAIC,EACJ8pC,EAAqB,GACzB,IAAK,IAAIkB,KAAiBhtB,EAAYjX,WAAY,CAC9C,IAAIyU,EAAYwC,EAAYjX,WAAWikC,GACnChS,EAAyB,CACzB9+B,UAAW8wC,EACXhwC,OAAQwgB,EAAUxgB,QAEtB,GAAIgwC,IAAkBxtC,EAAWwH,kBAAmB,CAChD,IAAIumC,EAAc,GAClB/vB,EAAUxgB,OAAOD,SAASo+B,IACtB,IAAIqS,GAAa,EAAI5hC,EAAQ6Q,2BAA2B0e,GACxDoS,EAAYhxC,KAAKixC,EAAW,IAEhCxS,EAAyB,CACrB9+B,UAAW8wC,EACXhwC,OAAQuwC,EAEhB,MACK,GAAIP,IAAkBxtC,EAAWsH,gBAAiB,CACnD,IAAI2mC,EACAC,GAC6B,QAA5B3rC,EAAKyb,EAAU7hB,eAA4B,IAAPoG,OAAgB,EAASA,EAAGpF,aACjE8wC,EAAqD,QAA5BzrC,EAAKwb,EAAU7hB,eAA4B,IAAPqG,OAAgB,EAASA,EAAGrF,UACrF8wC,EAAsBE,MAAMhyC,UAC5B+xC,EAAY,CACR3xC,KAAM,YACNJ,QAAS8xC,EAAsBE,MAAMhyC,WAIjDq/B,EAAyB,CACrB9+B,UAAW8wC,EACXhwC,OAAQwgB,EAAUxgB,OAClBiU,OAAQ,CACJ7U,SAAU,CAAEL,KAAM,YAClBY,UAAW+wC,GAGvB,CACA5B,EAAmBvvC,KAAKy+B,EAC5B,CACA,OAAO8Q,CACX,CACAK,0BAAAA,CAA2BtR,EAAS+S,EAAiB7S,EAAa+Q,EAAoBjuB,GAClF,OAAO3W,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAI4tC,EAAa,GACbC,EAAgB,GACpB,IAAI,EAAI/Y,EAAQU,UAAU,UAAW,CACjC,IAAIsY,QAAuBtwC,OAAO6qC,UAAU0F,cAAcnT,EAAS,CAC/DiR,mBAAoBA,EACpBjuB,mBAAoBA,IAExBgwB,EAAWtxC,KAAKwxC,EACpB,MAEIF,QAAoBpwC,OAAO6qC,UAAU2F,eAAepT,GAExD,IAAIqT,EAAe,IAA4B,OAAvBpC,QAAsD,IAAvBA,EAAgCA,EAAqB,MAAgC,OAAvBjuB,QAAsD,IAAvBA,EAAgCA,EAAqB,IACzM,IAEIswB,EAFAC,EAAkBP,EAAW,GAGjC,IAFA,EAAIjiC,EAAQrQ,UAAU,yCAA0CC,KAAKC,UAAU2yC,IAE3EF,GAAgBE,GAAmBA,EAAgB/xC,QACnD,IAAK,MAAOqkC,EAAQr4B,KAAapI,KAAKqgC,YAAYK,UAAW,CACzD,IAAI0N,QAAmBhmC,EAASuyB,qBAAqBC,EAAS+S,EAAiB7S,EAAamT,EAAcE,EAAiBnuC,KAAK0iB,UAC5H0rB,IACAF,EAAWzN,EACXoN,EAAcvxC,KAAK8xC,GAE3B,CAGJ,IAAIC,EAAgBxC,EAAmBuB,OAAMkB,IAEzC,IAAIC,EAAYV,EAAcjyC,MAAK4yC,GACxBA,EAAWvyC,YAAcqyC,EAAYryC,YAEhD,GAAIsyC,EAAW,CACX,IAAIE,EAAcH,EAAYvxC,OAAOqwC,OAAMjwC,IACvC,IAAIuxC,EAAUH,EAAU5xC,UAAUf,MAAKQ,GAC5BA,EAAQ4M,WAAW7L,EAAQ,OAEtC,QAASuxC,CAAO,IAEpB,OAAOD,CACX,CACA,OAAO,CAAK,IAIhB,IAFA,EAAI9iC,EAAQrQ,UAAU,2CAA4CC,KAAKC,UAAUqwC,KACjF,EAAIlgC,EAAQrQ,UAAU,sCAAuCC,KAAKC,UAAUqyC,KACvEQ,EAED,YADMruC,KAAKoS,aACL,IAAI7S,EAAWI,gBAAgBJ,EAAWK,wBAAwB4I,qBAM5E,OAJK,EAAIssB,EAAQU,UAAU,YACvBx1B,KAAK2uC,mBAAmBT,SAClB1wC,OAAO6qC,UAAU2F,eAAepT,IAEnCiT,CACX,CACA,MAAOhmC,GACH,GAAIA,GAAkB,kBAANA,GAAkB,SAAUA,GACzB,OAAXA,EAAE2L,KACF,MAAM,IAAIjU,EAAWI,gBAAgBJ,EAAWK,wBAAwBC,oBAGhF,MAAM,IAAIN,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAC5E,CACJ,GACJ,CACAuyB,kBAAAA,CAAmB92B,GACf,IAAI/V,EAAIC,EACR,IAAK,IAAI6sC,KAAkB5uC,KAAKqgC,YACoB,QAA/Cv+B,EAAK9B,KAAKqgC,YAAY78B,IAAIorC,UAAoC,IAAP9sC,GAAyBA,EAAGyd,iBAEjD,QAAtCxd,EAAK/B,KAAKwgC,kBAAkB3oB,UAAyB,IAAP9V,GAAyBA,EAAGsnB,2BAA0B,KACjGrpB,KAAKmsC,sBAAsBh4B,OAAMtM,IAC7Bsb,QAAQpX,IAAI,8CAA+ClE,EAAE,GAC/D,GAEV,CACAuK,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAI2L,EAAQrQ,UAAU,wDAClBkC,OAAO6qC,kBACD7qC,OAAO6qC,UAAUj2B,cACvB,EAAIzG,EAAQrQ,UAAU,2DAE9B,GACJ,EAEJT,EAAQmJ,yBAA2BA,C,qCC7XvBtJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIkI,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI4H,EAAsB5K,MAAQA,KAAK4K,qBAAwBjQ,OAAOkI,OAAU,SAASC,EAAG+H,GACxFlQ,OAAOC,eAAekI,EAAG,UAAW,CAAES,YAAY,EAAMzI,MAAO+P,GACnE,EAAK,SAAS/H,EAAG+H,GACb/H,EAAE,WAAa+H,CACnB,GACIC,EAAgB9K,MAAQA,KAAK8K,cAAkB,WAC/C,IAAIC,EAAU,SAASjI,GAMnB,OALAiI,EAAUpQ,OAAOqQ,qBAAuB,SAAUlI,GAC9C,IAAImI,EAAK,GACT,IAAK,IAAIjI,KAAKF,EAAOnI,OAAOgJ,UAAUC,eAAeC,KAAKf,EAAGE,KAAIiI,EAAGA,EAAG5O,QAAU2G,GACjF,OAAOiI,CACX,EACOF,EAAQjI,EACnB,EACA,OAAO,SAAU7C,GACb,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAI5E,EAAS,CAAC,EACd,GAAW,MAAP4E,EAAa,IAAK,IAAI+C,EAAI+H,EAAQ9K,GAAMiL,EAAI,EAAGA,EAAIlI,EAAE3G,OAAQ6O,IAAkB,YAATlI,EAAEkI,IAAkBtI,EAAgBvH,EAAQ4E,EAAK+C,EAAEkI,IAE7H,OADAN,EAAmBvP,EAAQ4E,GACpB5E,CACX,CACJ,CAhBmD,GAiB/C4L,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQg0C,6BAA0B,EAClC,MAAMzjC,EAAY1Q,EAAQ,OACpB2Q,EAAa3Q,EAAQ,OACrB4Q,EAAqB5Q,EAAQ,OAC7B6Q,EAAiB7Q,EAAQ,OACzB8Q,EAAc9Q,EAAQ,OACtBo0C,EAA8Bp0C,EAAQ,OACtCwR,EAA4BxR,EAAQ,OACpC+Q,EAAkB/Q,EAAQ,OAC1BgR,EAAYhR,EAAQ,OACpBiR,EAAUjR,EAAQ,OAClBkR,EAAWlR,EAAQ,OACnBmR,EAAQnR,EAAQ,OAChBoR,EAAapR,EAAQ,OACrBqR,EAAMjB,EAAapQ,EAAQ,QAC3BQ,EAAQR,EAAQ,OAChB04B,EAAU14B,EAAQ,OACxB,MAAMm0C,EACF1mC,WAAAA,GACInI,KAAKoM,OAAS,IAAIX,EAAgBY,aAClCrM,KAAK+uC,kBAAoB,IAAItjC,EAAgBY,aAC7CrM,KAAKsM,aAAe,IAAIJ,EAA0BK,wBAAwB,UAC1ER,EAAIzQ,SAAS,6BAEb0E,KAAKyM,eAAiB,IAAIf,EAAUgB,QAAQpB,EAAmB0jC,wBAC/DhvC,KAAKyN,WAAazN,KAAK0N,sBACvB1N,KAAK2N,eAAe3N,KAAKyN,YAEzBzN,KAAK4N,UAAY,IAAIxC,EAAUyC,mBAAmBrC,EAAYsC,uBAC9D9N,KAAK+N,UAAYC,KAAKC,MAEtBjO,KAAKivC,qBAAuB,IAAI3O,IAEhCtgC,KAAKkvC,SAAU,EACflvC,KAAKmvC,WAAY,CACrB,CACA/gC,gBAAAA,CAAiBghC,EAAS,GACtB,IAAI/gC,EAAUL,KAAKC,MAAQmhC,EACvB/gC,GAAWrO,KAAK+N,YAChB/N,KAAK+N,UAAYM,EAAU,GAE/BrO,KAAK+N,UAAYM,CACrB,CACAC,iBAAAA,CAAkBmD,EAASlD,GACvB,IAAIC,GAAY,EAAI1C,EAAW2C,mBAAmBF,GAElDvO,KAAKyM,eAAeiC,gBAAgBF,EAAWlD,EAAmBqD,wBAA0B8C,EAChG,CACArE,sBAAAA,CAAuBqE,GAEnB,MAAM7C,EAAK5O,KAAKyM,eAAeoC,cAAcvD,EAAmBqD,wBAA0B8C,GACpF3C,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAC5B/C,EAAIzQ,SAAS,0BACbyQ,EAAIzQ,SAASwT,GACb,IAAI3B,GAAc,EAAIrB,EAAWiD,eAAeD,GAChD,OAAO3B,CACX,CAIA,OAFInN,KAAKyM,eAAeY,aAEjB,IACX,CACAM,cAAAA,CAAeY,GACX,IAAIS,EAAa,CACb9F,WAAW,EAAIyC,EAAQsD,aAAaV,EAAQrF,WAC5CgG,WAAW,EAAIvD,EAAQsD,aAAaV,EAAQW,YAEhDnD,EAAIzQ,SAAS,eACb,IAAIkT,GAAY,EAAI1C,EAAW2C,mBAAmBO,GAClDjD,EAAIzQ,SAASkT,GAEbxO,KAAKyM,eAAeiC,gBAAgBF,EAAWlD,EAAmB6D,sBAClEpD,EAAIzQ,SAAS,oBACjB,CACAoS,mBAAAA,GACI,MAAMkB,EAAK5O,KAAKyM,eAAeoC,cAAcvD,EAAmB6D,sBAC1DL,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAE5B/C,EAAIzQ,SAAS,sBACbyQ,EAAIzQ,SAASwT,GACb,IAAIM,GAAiB,EAAItD,EAAWiD,eAAeD,GACnD/C,EAAIzQ,SAAS,eACbyQ,EAAIzQ,SAAS8T,GACb,IAAIb,EAAU,CACVrF,WAAW,EAAIyC,EAAQ0D,gBAAgBD,EAAelG,WACtDgG,WAAW,EAAIvD,EAAQ0D,gBAAgBD,EAAeF,YAE1D,OAAOX,CACX,CAEI,OAAO,EAAI1C,EAAMyD,kBAEzB,CACA+/B,qBAAAA,CAAsB59B,GAElB,OADA1F,EAAIzQ,SAAS,+BAA+BmW,KACrCzR,KAAKivC,qBAAqBzrC,IAAIiO,EACzC,CACAjC,OAAAA,CAAQ8/B,GACJ,OAAOroC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,aAAa,EAAI6L,EAAM6D,SAAS4/B,EAAc/jC,EAAewnB,6BAA8BxnB,EAAeqE,qBAC1G5P,KAAKyN,WACT,GACJ,CACA8hC,gBAAAA,CAAiBC,GACb,IACI,IAAIC,GAAc,EAAI3jC,EAAWiD,eAAeygC,GAC5CrvB,EAASsvB,EAAY,qBACzB,GAAItvB,GAAUA,EAAO9jB,OAAS,EAAG,CAC7B,IAAIqzC,GAAgB,EAAItc,EAAQ8C,cAAc/V,GAAQ,GACtD,OAAOuvB,EAAcz9B,UACzB,CACJ,CACA,MAAOrI,GACHmC,EAAIoH,SAAS,qBAAsBvJ,EACvC,CACJ,CACA+lC,cAAAA,CAAelgC,EAAOkD,GAClB,IAAIoN,EAAc/f,KAAKivC,qBAAqBzrC,IAAIiM,GAEhD,IADA,EAAIvU,EAAMI,UAAU,iBAAkBykB,EAAatQ,EAAOkD,GACtDoN,GAAepN,GAAYA,EAAStW,OAAS,EAAG,CAChD,GAAI0jB,EAAY6vB,IAAK,CAEjB,IAAIC,GAAY,EAAIlkC,EAAQmkC,mBAAmBn9B,GAC3CoN,EAAY6vB,KAAOC,EACnB9vB,EAAYgwB,cAAgBp9B,EAG5B5G,EAAIoH,SAAS,mBAAoB4M,EAAatQ,EAAOkD,EAE7D,MAEIoN,EAAYgwB,cAAgBp9B,EAGhC3S,KAAKgwC,sBACT,CACA,OAAO,CACX,CACAngC,YAAAA,CAAa0G,EAASzG,GAClB,OAAO7I,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWN,EAAOO,EAAOC,GAAY,GAC3E,IAAInO,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIw/B,EAAIC,EAAIC,EAAIC,EACpEpwC,KAAKoM,OAAOsE,KAAKV,EAAMW,GAAIX,GAE3B,IAAI+P,EAAc/f,KAAKivC,qBAAqBzrC,IAAIiM,GAChD1D,EAAIzQ,SAAS,qCAAsCmU,GACnD1D,EAAIzQ,SAAS,+BAAgC0U,EAAMW,GAAIlB,EAAOsQ,EAAa/f,KAAKivC,sBAChF,IAAIoB,GAAgB,EACpB,GAAItwB,GAAe/P,EAAMgB,OAAO9U,OACK,QAA5B4F,EAAKkO,EAAMgB,OAAO9U,YAAyB,IAAP4F,OAAgB,EAASA,EAAGyP,SAEjE,GAAiC,QAA5BxP,EAAKiO,EAAMgB,OAAO9U,YAAyB,IAAP6F,OAAgB,EAASA,EAAGuuC,eAAgB,CACjF,IAAIC,EAA6C,QAA5BvuC,EAAKgO,EAAMgB,OAAO9U,YAAyB,IAAP8F,OAAgB,EAASA,EAAGuP,QACjFi/B,EAA2C,QAA5B9nC,EAAKsH,EAAMgB,OAAO9U,YAAyB,IAAPwM,OAAgB,EAASA,EAAG+G,MAC/EigC,EAAgB1vC,KAAKuvC,iBAAiBgB,IAC1C,EAAIr1C,EAAMI,UAAU,0BAA2Bo0C,GAC3CA,GAAiBA,EAAcrzC,OAAS,GACxC2D,KAAK+uC,kBAAkBr+B,KAAK,SAAUg/B,EAAec,EAE7D,MAGI,IACI,IAAIj/B,EAAuC,QAA5B5I,EAAKqH,EAAMgB,OAAO9U,YAAyB,IAAPyM,OAAgB,EAASA,EAAG4I,QAM/E,GALIvB,EAAMkB,QAAUlB,EAAMkB,SAAW7F,EAAW8F,uBAE5C,EAAIjW,EAAMI,UAAU,4CACpB0E,KAAKoR,kBAAkB3B,IAEvB8B,EAAQuE,YAAY9M,WAAW,KAAM,CAErC,IAAIqI,EAAoBrR,KAAKsM,aAAagF,4BAA4BC,GACtE,GAAIF,EAAmB,EACnB,EAAInW,EAAMI,UAAU,2BAA4B+V,GAEhDg/B,GAAgB,EAChB,IAAI7+B,EAAY,CACZC,QAAqF,QAA3EtB,EAA6B,QAAvBD,EAAKF,EAAMgB,cAA2B,IAAPd,OAAgB,EAASA,EAAGhU,YAAyB,IAAPiU,OAAgB,EAASA,EAAGV,MACzHwB,UAAuF,QAA3EZ,EAA6B,QAAvBD,EAAKJ,EAAMgB,cAA2B,IAAPZ,OAAgB,EAASA,EAAGlU,YAAyB,IAAPmU,OAAgB,EAASA,EAAGY,UAC3HS,cAAeL,EACfM,YAAyF,QAA3EpB,EAA6B,QAAvBD,EAAKN,EAAMgB,cAA2B,IAAPV,OAAgB,EAASA,EAAGpU,YAAyB,IAAPqU,OAAgB,EAASA,EAAGoB,aAE7HC,QAAoB5R,KAAKsM,aAAauF,uBAAuBL,GASjE,GARII,EAAYE,uBACZF,EAAYE,sBAAsBhV,SAASiV,GAAU9K,EAAUjH,UAAM,OAAQ,GAAQ,YAEjFA,KAAKoO,yBACCpO,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAAYF,EAAOtC,EAC7D,MAGAmC,EAAY6+B,aAAc,CAC1B,IAAIl/B,EAAUwO,EAAYjT,OAAO4jC,cAAc9+B,EAAY6+B,aAAc1wB,EAAYgwB,gBACrF,EAAI70C,EAAMI,UAAU,8BAA+BmU,EAAO8B,GAC1DvR,KAAK+uC,kBAAkBr+B,KAAKjB,EAAO8B,EACvC,CACJ,KACK,CACD,IAAI8U,GAAa,EAAIva,EAAWiD,eAAewC,GAC/C,GAAI8U,EAAWnV,OAAQ,CACnB,GAAyB,gBAArBmV,EAAWnV,OAA0B,CACrC,IAAIy/B,EAAoBtqB,EAAWrV,OAAO+O,YACtC6wB,GAAgB,EAAIxd,EAAQ8C,cAAcya,GAAmB,IACjE,EAAIz1C,EAAMI,UAAU,mDAAoDs1C,IACxE,EAAI11C,EAAMI,UAAU,iBAAmBs1C,GACvC,IAAIC,EAAmBD,EAAcE,WACrC9wC,KAAK2vC,eAAelgC,EAAOohC,EAAiBl+B,SAChD,EACA,EAAIzX,EAAMI,UAAU,qBAAsBmU,EAAO4W,GACjDrmB,KAAK+uC,kBAAkBr+B,KAAKjB,EAAO8B,EACvC,CACJ,CACJ,KACK,CACD,IAAIA,EAAUwO,EAAYjT,OAAO4jC,cAA2C,QAA5BlgC,EAAKR,EAAMgB,OAAO9U,YAAyB,IAAPsU,OAAgB,EAASA,EAAGe,QAASwO,EAAYgwB,gBACrI,EAAI70C,EAAMI,UAAU,mBAAoBmU,EAAO8B,GAC/CvR,KAAK+uC,kBAAkBr+B,KAAKjB,EAAO8B,EACvC,CACJ,CACA,MAAO3H,GACH,IAAI2H,EAAUwO,EAAYjT,OAAO4jC,cAA2C,QAA5BjgC,EAAKT,EAAMgB,OAAO9U,YAAyB,IAAPuU,OAAgB,EAASA,EAAGc,QAASwO,EAAYgwB,gBACrI,EAAI70C,EAAMI,UAAU,mBAAoBmU,EAAO8B,GAC/CvR,KAAK+uC,kBAAkBr+B,KAAKjB,EAAO8B,EACvC,CAOZ,IAAKtB,UACKjQ,KAAK4Q,QAAQZ,EAAMW,IAAI,GACzBlB,IAAU4gC,GAAe,CACzB,IAAIt/B,EAAWf,GACoE,QAA9EkgC,EAAgC,QAA1BD,EAAKl/B,EAASC,cAA2B,IAAPi/B,OAAgB,EAASA,EAAG/zC,YAAyB,IAAPg0C,OAAgB,EAASA,EAAGj/B,aACnHjR,KAAKoO,yBACCpO,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAA2F,QAA9Em+B,EAAgC,QAA1BD,EAAKp/B,EAASC,cAA2B,IAAPm/B,OAAgB,EAASA,EAAGj0C,YAAyB,IAAPk0C,OAAgB,EAASA,EAAGn/B,UAAWxB,GAExL,CAER,GACJ,CACAshC,2BAAAA,GAII,IAAI94B,EAAUjY,KAAKyM,eAAeoC,cAAcigC,EAA4BkC,0CAE5E,GADAjlC,EAAIzQ,SAAS,2BAA4B2c,GACrCA,EAAS,CACT,IAAIg5B,GAAW,EAAInlC,EAAWiD,eAAekJ,GAC7C,IAAK,IAAIxG,KAAWw/B,EAAU,CAC1B,IAAIC,EAAYD,EAASx/B,GACzB1F,EAAIzQ,SAAS,kBAAmB41C,GAChC,IAAIC,EAAa,CACb1hC,MAAOgC,EACP3E,OAAQ,IAAIlB,EAASmB,cAAc,CAC/B7D,UAAWgoC,EAAU74B,cAAcnP,UACnCgG,UAAWgiC,EAAU74B,cAAcnJ,YAEvC6gC,cAAemB,EAAUnB,cACzBH,IAAKsB,EAAUtB,KAEnB5vC,KAAKivC,qBAAqBtH,IAAIl2B,EAAS0/B,EAC3C,CACJ,CACAplC,EAAIzQ,SAAS,+BAAgC0E,KAAKivC,qBACtD,CACAe,oBAAAA,GACI,IAAIiB,EAAW,CAAC,EAChB,IAAK,IAAKx/B,EAAS0/B,KAAenxC,KAAKivC,qBACnCljC,EAAIzQ,SAAS,gBAAiBmW,GAC1B0/B,IACAF,EAASx/B,GAAW,CAChB4G,cAAe84B,EAAWrkC,OAAO8F,mBACjCm9B,cAAeoB,EAAWpB,cAC1BH,IAAKuB,EAAWvB,MAI5B,IAAI73B,GAAW,EAAIjM,EAAW2C,mBAAmBwiC,GACjDllC,EAAIzQ,SAAS,2BAA4Byc,GACzC/X,KAAKyM,eAAeiC,gBAAgBqJ,EAAU+2B,EAA4BkC,yCAC9E,CACAI,gBAAAA,CAAiB3hC,EAAOsQ,EAAasxB,GAAO,GACxC,IAAItB,EAAgBhwB,EAAYgwB,cAE5BuB,EAAmB,GACvB,IAAK,IAAK7/B,EAAS0/B,KAAenxC,KAAKivC,qBACnCljC,EAAIzQ,SAAS,gBAAiBmW,GAC1B0/B,EAAWpB,eAAiBA,IAC5BhkC,EAAIzQ,SAAS,8BAA+BmW,EAASs+B,GACrDuB,EAAiBh1C,KAAKmV,IAG9B,IAAK,IAAKA,EAAS0/B,KAAenxC,KAAKivC,qBAC/BqC,EAAiBnyC,SAASsS,IAC1BzR,KAAKivC,qBAAqBpH,OAAOp2B,GAazC,OATA1F,EAAIzQ,SAAS,iCAAkC0E,KAAKivC,sBAGpDjvC,KAAKivC,qBAAqBtH,IAAIl4B,EAAOsQ,GAErChU,EAAIzQ,SAAS,qBAAsBmU,EAAOsQ,EAAa/f,KAAKivC,sBACxDoC,GACArxC,KAAKgwC,uBAEFsB,CACX,CACAh8B,qBAAAA,CAAsB7F,EAAO8F,GACzBvV,KAAKsM,aAAakJ,yBAAyB/F,EAAO8F,EACtD,CAEAg8B,WAAAA,CAAY9hC,EAAO+hC,EAAkB5B,GACjC,OAAO3oC,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAI9E,EAAMI,UAAU,yBAA0BmU,GAEvC,IAAIjI,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAKA,KAAKmvC,UAAW,CACjB,IAAIvlC,EAAQ,IAAIuI,MAKhB,OAJAvI,EAAM2H,QAAU,4BAChB3H,EAAM9N,KAAO,oBAEb2L,EAAOmC,EAEX,CAEA,IAAIunC,EAAa,CACb1hC,MAAOA,EACP3C,OAAQ,IAAIlB,EAASmB,cACrBgjC,cAAeyB,GAAsC,GACrD5B,IAAKA,GAEL0B,EAAmBtxC,KAAKoxC,iBAAiB3hC,EAAO0hC,GAAY,SAE1DnxC,KAAKyxC,gBAAgBlnC,MAAMiiB,KAAK,CAAC/c,KACvCzP,KAAKoO,mBACLrC,EAAIzQ,SAAS,oDAAoD0E,KAAK+N,cAAc0B,KACpF1D,EAAImB,UAAU,mDACd,MAAMuG,GAAQ,IAAIzF,MAAO+E,WACzB,EAAI7X,EAAMI,UAAU,gCAAiCmY,EAAQzT,KAAK8S,SAClEvL,EAAQ+pC,EACZ,KACJ,GACJ,CACAI,sBAAAA,GACI1xC,KAAKgwC,sBACT,CACA19B,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAK8S,SAAU,IAAI9E,MAAO+E,WAC1B,EAAI7X,EAAMI,UAAU,iCAAkC0E,KAAK8S,SAC3D/G,EAAImB,UAAU,iCAEd,IAAIoiC,EAAethC,KAAKC,MAAMgE,WAC9B,IAAImB,QAAiBpT,KAAKwP,QAAQ8/B,GAKlC,OAJAvjC,EAAIzQ,SAAS,uBAAuB8X,KACpCpT,KAAKyM,eAAe4F,YAAYe,EAAU,OAC1CpT,KAAK+wC,8BAEE,IAAIvpC,SAAQ,CAACD,EAASE,KAEzBzH,KAAKkvC,SAAU,EACflvC,KAAK4N,UAAUyF,QAAO,IAAMpM,EAAUjH,UAAM,OAAQ,GAAQ,YACxD+L,EAAIzQ,SAAS,wBACbyQ,EAAImB,UAAU,qCACd,MAAMoG,GAAU,IAAItF,MAAO+E,WAC3B,EAAI7X,EAAMI,UAAU,uBAAwBgY,EAAUtT,KAAK8S,SAE3D9S,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAEjF,GAAIuT,GAAOA,EAAI3J,MAAO,CAClBmC,EAAIoH,SAAS,2BACPnT,KAAK4N,UAAUwE,aACrB,IAAIxI,EAAQ,IAAIuI,MAChBvI,EAAM2H,QAAUgC,EAAI3J,MAAM2H,QAC1B3H,EAAM9N,KAAOyX,EAAI3J,MAAM4J,KAAKvB,WAE5BxK,EAAOmC,EACX,MAEI5J,KAAKmvC,WAAY,EACjB5nC,IAEAwE,EAAIzQ,SAAS,6BAA8B0E,KAAKivC,sBAChDljC,EAAImB,UAAU,qDACVlN,KAAKivC,qBAAqB0C,KAAO,UAC3B3xC,KAAKyxC,gBAAgBlnC,MAAMiiB,KAAKxsB,KAAKivC,qBAAqB3yB,SAG5E,MACAvQ,EAAIzQ,SAAS,mBACbyQ,EAAImB,UAAU,wCACRlN,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI,CACA3B,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWmJ,qBACnBxD,OAAQ,CACJyD,MAAOrB,IAGnB,MACApT,KAAK4N,UAAU0E,UAAU6B,OAAOC,KAC5B,EAAIlZ,EAAMI,UAAU,wCAAyC8Y,GAC7D3M,EAAO2M,EAAI,IAGfpU,KAAK4N,UAAU8G,iBAAiBC,IAC5B,IAAI7S,EAAIC,EACRgK,EAAIzQ,SAAS,0BACbyQ,EAAIzQ,SAASqZ,GACP,WAAYA,GAAY,SAAUA,EAAM,WAKb,QAA5B7S,EAAK6S,EAAM3D,OAAO9U,YAAyB,IAAP4F,OAAgB,EAASA,EAAG2N,QACjEzP,KAAK6P,aAA0C,QAA5B9N,EAAK4S,EAAM3D,OAAO9U,YAAyB,IAAP6F,OAAgB,EAASA,EAAG0N,MAAOkF,EAAOA,EAAMzD,SAAW7F,EAAW0J,wBAL7H/U,KAAK6P,aAAa,GAAI8E,GAAO,EAMjC,GACF,GAmBV,GACJ,CAGAi9B,mBAAAA,CAAoBngC,GAChB,GAAIzR,KAAKqvC,sBAAsB59B,GAAU,CACrC,IAAI5V,EAAOmE,KAAKivC,qBAAqBzrC,IAAIiO,GACzC,GAAI5V,EACA,OAAO,EAAI8P,EAAQsD,aAAapT,EAAKiR,OAAOyB,QAAQrF,UAE5D,CAEJ,CACA2oC,2BAAAA,GACI,OAAOtnC,MAAMiiB,KAAKxsB,KAAKivC,qBAAqB3yB,OAChD,CACAtH,cAAAA,CAAevF,GACX,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAKoO,mBACL,MAAM1S,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAW4J,0BACnBjE,OAAQ,CACJO,QAAS,CACL9B,MAAOA,EACPyF,IAAK1J,EAAY2J,6CAIvBnV,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACA0Z,kBAAAA,CAAmB3F,GACf,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAKoO,mBACL,MAAM1S,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWgK,+BACnBrE,OAAQ,CACJvB,MAAOA,UAGTzP,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACA0W,UAAAA,GACI,OAAOnL,EAAUjH,KAAM+P,eAAW,GAAQ,UAAW8C,GAAc,SACzD7S,KAAK4N,UAAUwE,aAGrBpS,KAAKyM,eAAeY,WAAW/B,EAAmBwF,0BAC7C+B,GACD7S,KAAKyM,eAAeY,WAAW/B,EAAmB4H,oCAE1D,GACJ,CACAU,OAAAA,CAAQiC,EAAKpG,GACT,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YAC/ByP,UACMzP,KAAK8xC,QAAQriC,EAAOoG,EAAKrK,EAAY4K,0BAEnD,GACJ,CACA07B,OAAAA,CAAQriC,EAAO8B,EAAS2D,GACpB,OAAOjO,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAIuR,EAAS,CACTvR,KAAKoO,mBACL,MAAM1S,EAAU,CACZiV,GAAI3Q,KAAK+N,UAAUkE,WACnBf,OAAQ7F,EAAW8K,uBACnB9B,QAAS7I,EAAY8I,oBACrBtD,OAAQ,CACJO,QAAS,CACL9B,MAAOA,EACP8B,QAASA,EACT2D,IAAKA,KAIjBlV,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAE7EuT,GAAOA,EAAI3J,MACXmC,EAAIoH,SAAS,KAAI,IAAInF,MAAOqI,0CAEvB9C,IAAQA,EAAI3J,OACjBmC,EAAIzQ,SAAS,iBAAgB,IAAI0S,MAAOqI,uCAAuCrW,KAAK+N,sBAE5F,YACM/N,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,CACJ,GACJ,CACAwY,IAAAA,CAAKqC,EAASG,GACV,OAAOzP,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWN,EAAOoG,EAAKk8B,GAAgB,EAAO78B,EAAM1J,EAAY4K,yBAA0B47B,GAAS,GACzI,IAAIlwC,EAAIC,EAGR,GADAgK,EAAIzQ,SAAS,uBAAuBua,MAC/B7V,KAAKqvC,sBAAsB5/B,GAE5B,MAAM,IAAI0C,MAAM,yBAEpB,IAEIkU,EAFA4rB,EAAkE,QAA/CnwC,EAAK9B,KAAKivC,qBAAqBzrC,IAAIiM,UAA2B,IAAP3N,OAAgB,EAASA,EAAGiuC,cACtGmC,EAA+D,QAA/CnwC,EAAK/B,KAAKivC,qBAAqBzrC,IAAIiM,UAA2B,IAAP1N,OAAgB,EAASA,EAAG+K,OAEnGklC,IACA3rB,EAAa,CACT9U,QAASsE,IAGjB,IAAIs8B,GAAY,EAChB,GAAID,GAAgBD,IAAoBD,EAAQ,CAC5C,IAAIzgC,EAAU2gC,EAAaE,cAAcv8B,EAAKo8B,GAC9CE,GAAY,EACZ9rB,EAAa,CACT9U,QAASA,EAEjB,CACA,GAAI8U,EAAY,CACR0rB,GAAiBG,IACjB7rB,EAAW1T,UAAW,EAAIhH,EAAQsD,aAAaijC,EAAa3jC,QAAQrF,YAMxE,IAAImpC,GAAa,EAAIvmC,EAAW2C,mBAAmB4X,IAC9C2rB,GAAUG,QACLnyC,KAAKsM,aAAasK,kBAAkBnH,EAAO4iC,EAAYryC,KAAK8xC,QAAQj+B,KAAK7T,MAAOA,KAAK4T,QAAQC,KAAK7T,aAGlGA,KAAK8xC,QAAQriC,EAAO4iC,EAAYn9B,EAE9C,CACJ,GACJ,CACAtE,OAAAA,CAAQiG,EAASC,GACb,OAAO7P,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWgC,EAAO2D,EAASqB,OAAS7T,GAC1E,IAAgB,IAAZwS,EAAkB,CAClB,MAAMha,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrBjZ,QAAQ,SAEN2E,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,MACK,GAAIqb,EAAQ,CACb,MAAMrb,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrB1K,MAAO,CACH4J,KAAMuD,EAAOvD,KACbjC,QAASwF,EAAOxF,gBAGlBvR,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,CACJ,GACJ,CAEAsW,WAAAA,CAAYD,EAAOd,EAAWxB,GAC1B,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMtE,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAW0J,uBACnB/D,OAAQ,CACJ9U,KAAM,CACF+U,UAAWA,EACXxB,MAAOA,WAIbzP,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACA42C,eAAAA,CAAgB7iC,GACZ,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,kBAE7BA,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI,CACA3B,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWknC,qBACnBvhC,OAAQ,CACJvB,MAAOA,KAGf,UACUzP,KAAKgV,eAAevF,EAC9B,CACA,MAAO7F,GACHmC,EAAIoH,SAAS,iCAAkCvJ,EACnD,CAEA5J,KAAKivC,qBAAqBpH,OAAOp4B,GACjCzP,KAAKgwC,sBACT,GACJ,CAKAt8B,2BAAAA,CAA4B3B,EAAOtC,GAC/B,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YAEnCA,KAAKoM,OAAO/K,KAAK0Q,GAAQiF,GAAoB/P,EAAUjH,UAAM,OAAQ,GAAQ,YACzE,IAAI8B,EAAIC,EAER,GAAIiV,EAAgB3b,OAAQ,CACxB,IAAI4b,EAAUD,EAAgB3b,OAAO4b,QACjCC,EAAeF,EAAgB3b,OAAOa,KAC1C,GAAIgb,EACA,IAAK,IAAIhM,EAAI,EAAGA,EAAIgM,EAAa7a,OAAQ6O,IAAK,CAC1C,IAAI2K,EAAMqB,EAAahM,GACvB,GAAI2K,GAAOA,EAAIpG,OAASA,EAAO,CAC3B,IAAIwB,EAAY4E,EAAI5E,gBACdjR,KAAK4N,UAAU4J,yBAAyB3B,GAE9C7V,KAAKoO,yBACCpO,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAAYhB,EAAWxB,EACjE,CACJ,CAGAwH,IACAjX,KAAKoO,yBACCpO,KAAK0T,4BAA4B1T,KAAK+N,UAAUkE,WAAYxC,GAE1E,MAEI1D,EAAIzQ,SAAS,0BAA2D,QAAhCwG,EAAKkV,EAAgBpN,aAA0B,IAAP9H,OAAgB,EAASA,EAAG0R,UAA2C,QAAhCzR,EAAKiV,EAAgBpN,aAA0B,IAAP7H,OAAgB,EAASA,EAAGwP,UAEnM,MACAxF,EAAIzQ,SAAS,sBACb,MAAMmc,GAAW,IAAIzJ,MAAO+E,WAC5B,EAAI7X,EAAMI,UAAU,oBAAqBmc,EAAWzX,KAAK8S,SACzD,MAAMpX,EAAU,CACZiV,GAAIoB,EACJsC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWqM,wBACnB1G,OAAQ,CACJ9U,KAAM,CACFuT,MAAOA,WAIbzP,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI5W,EACR,GACJ,CACA82C,gCAAAA,CAAiCzkC,EAAW0kC,GACxC,OAAOxrC,EAAUjH,UAAM,OAAQ,GAAQ,YAEnCA,KAAKoM,OAAO/K,KAAK0M,GAAYiJ,GAAoB/P,EAAUjH,UAAM,OAAQ,GAAQ,YAC7E,IAAI8B,EAAIC,EAER,GAAIiV,EAAgB3b,OAAQ,CACxB,IAAI4b,EAAUD,EAAgB3b,OAAO4b,QACjCC,EAAeF,EAAgB3b,OAAOa,KAC1C,MAAMib,EAAqBH,EAAgB3b,OAAO8b,mBAClD,GAAIA,EACA,IACI,IAAK,IAAIjM,EAAI,EAAGA,EAAIiM,EAAmB9a,OAAQ6O,IAAK,CAChD,MAAMkM,EAAYD,EAAmBjM,GACrC,GAAIkM,EAAU3H,MAAO,EACjB,EAAIvU,EAAMI,UAAU,2BAA4B8b,EAAU3H,aACpDzP,KAAKoV,mBAAmBgC,EAAU3H,OAExC,IAAI4H,GAAoB,EAAIvL,EAAW2C,mBAAmB,CACtD6I,UAAWF,EAAUzF,YAAYM,WACjCf,OAAQ7F,EAAW4J,4BAEnBsC,EAAgB,CAChBtG,UAAWmG,EAAUzF,YAAYM,WACjCV,SAAS,EAAIzF,EAAW2C,mBAAmB,CACvC8C,QAAS8F,IAEb5H,MAAO2H,EAAU3H,MACjBkC,YAAayF,EAAUzF,mBAErB3R,KAAK4N,UAAU4J,yBAAyBD,EAClD,CACJ,CACJ,CACA,MAAO3N,GACHmC,EAAIoH,SAAS,yBAA0BvJ,EAC3C,CAEJ,GAAIsN,EACA,IAAK,IAAIhM,EAAI,EAAGA,EAAIgM,EAAa7a,OAAQ6O,IAAK,CAC1C,IAAI2K,EAAMqB,EAAahM,GACvB,GAAI2K,GAAOA,EAAIpG,MAAO,CAElB,IAAI4B,EAAoBrR,KAAKsM,aAAagF,4BAA4BuE,EAAItE,SAC1E,GAAIF,QACMrR,KAAK4N,UAAU4J,yBAAyB3B,OAE7C,CACD,IAAI5E,EAAY4E,EAAI5E,gBACdjR,KAAK4N,UAAU4J,yBAAyB3B,GAC9C7V,KAAKoO,iBAAiBlD,SAChBlL,KAAKgS,YAAYhS,KAAK+N,UAAUkE,WAAYhB,EAAW4E,EAAIpG,MACrE,CACJ,CACJ,CAGAwH,IACAjX,KAAKoO,yBACCpO,KAAKwyC,iCAAiCxyC,KAAK+N,UAAUkE,WAAYwgC,GAE/E,MAEI1mC,EAAIzQ,SAAS,0BAA2D,QAAhCwG,EAAKkV,EAAgBpN,aAA0B,IAAP9H,OAAgB,EAASA,EAAG0R,UAA2C,QAAhCzR,EAAKiV,EAAgBpN,aAA0B,IAAP7H,OAAgB,EAASA,EAAGwP,UAEnM,MACAxF,EAAIzQ,SAAS,sBACbyQ,EAAImB,UAAU,sBACd,MAAMuK,GAAW,IAAIzJ,MAAO+E,WAC5B,EAAI7X,EAAMI,UAAU,oBAAqBmc,EAAWzX,KAAK8S,SACzD,MAAMpX,EAAU,CACZiV,GAAI5C,EACJsG,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWqnC,8BACnB1hC,OAAQ,CACJ2hC,OAAQF,EACRG,kBAAkB,UAGpB5yC,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAC5D+L,EAAIzQ,SAAS,wCACP0E,KAAK4N,UAAU0E,SACzB,KAAI5W,EACR,GACJ,CACAic,UAAAA,GACI,OAAO1Q,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAKyM,eAAeY,YACxB,GACJ,CACAuK,kBAAAA,CAAmBC,EAAK3b,GACfA,GACD8D,KAAKyM,eAAeY,WAAW/B,EAAmBwM,gCAAkCD,GAExF,IAAIE,GAAW,EAAIjM,EAAW2C,mBAAmBvS,GACjD8D,KAAKyM,eAAeiC,gBAAgBqJ,EAAUzM,EAAmBwM,gCAAkCD,EACvG,CACAG,iBAAAA,CAAkBH,GACd,IAAII,EAAUjY,KAAKyM,eAAeoC,cAAcvD,EAAmBwM,gCAAkCD,GACrG,GAAII,EAAS,CACT,IAAIC,GAAS,EAAIpM,EAAWiD,eAAekJ,GAC3C,OAAOC,CACX,CAEJ,CAEAu5B,eAAAA,CAAgBgB,GACZ,OAAOxrC,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAI9E,EAAMI,UAAU,kBAAmBm3C,GACvC1mC,EAAImB,UAAU,mBACdlN,KAAKoO,mBACL,MAAMqF,GAAQ,IAAIzF,MAAO+E,UAEzB,OADA,EAAI7X,EAAMI,UAAU,oCAAqCmY,EAAQzT,KAAK8S,SAC/D,IAAItL,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAI6yC,EAAc,EAElB,IAAK,IAAIC,EAAM,EAAGA,EAAML,EAAYp2C,SAAUy2C,EAAK,CAC/C,IAAIrhC,EAAUghC,EAAYK,GAC1B9yC,KAAKoO,iBAAiB0kC,GACtB9yC,KAAKoM,OAAO/K,KAAKrB,KAAK+N,UAAUkE,YAAasB,GAAQtM,EAAUjH,UAAM,OAAQ,GAAQ,YAEjF,GAAIuT,GAAOA,EAAI3J,MAAO,CAClBmC,EAAIoH,SAAS,+BACPnT,KAAK4N,UAAUwE,aACrB,IAAIxI,EAAQ,IAAIuI,MAChBvI,EAAM2H,QAAUgC,EAAI3J,MAAM2H,QAC1B3H,EAAM9N,KAAOyX,EAAI3J,MAAM4J,KAAKvB,WAE5B4gC,GAAe,EACXA,GAAeJ,EAAYp2C,QAC3BkL,GAER,CACAvH,KAAKoO,iBAAiB0kC,GACtB,MAAMr/B,GAAQ,IAAIzF,MAAO+E,UAGzB,IAFA,EAAI7X,EAAMI,UAAU,oCAAqCmY,EAAQzT,KAAK8S,SACtE+/B,GAAe,EACXA,GAAeJ,EAAYp2C,OAAQ,CAEnC0P,EAAIzQ,SAAS,sBAAsB0E,KAAK+N,cAAc0D,WAChDzR,KAAKwyC,iCAAiCxyC,KAAK+N,UAAUkE,WAAYwgC,SAEjEzyC,KAAKsM,aAAaqH,KAAK3T,KAAK4T,QAAQC,KAAK7T,OAE/C,IAAI8T,EAAe9T,KAAK+T,YAAYtC,GAChCqC,IACA,EAAI5Y,EAAMI,UAAU,sCACd0E,KAAKgU,mBAAmBvC,MAG9B,EAAIvW,EAAMI,UAAU,wBACpB0E,KAAKoR,kBAAkBK,IAE3BlK,GACJ,CACJ,MACAwE,EAAIzQ,SAAS,0CAA0C0E,KAAK+N,cAAc0D,KAC1E1F,EAAImB,UAAU,yCACd,MAAM+G,GAAS,IAAIjG,MAAO+E,WAC1B,EAAI7X,EAAMI,UAAU,iCAAkC2Y,EAASjU,KAAK8S,eAC9D9S,KAAK4N,UAAUsG,MAAK,IAAMjN,EAAUjH,UAAM,OAAQ,GAAQ,YAE5D,OADA+L,EAAIzQ,SAAS,wCACA0E,KAAK4N,UAAU0E,SAChC,KAAI,CACA3B,GAAI3Q,KAAK+N,UAAUkE,WACnBoC,QAAS7I,EAAY8I,oBACrBpD,OAAQ7F,EAAWkJ,mBACnBvD,OAAQ,CACJvB,MAAOgC,IAGnB,CACJ,KACJ,GACJ,CAIAsC,WAAAA,CAAYtE,GACR,IAAI8I,GAAY,EAChB,GAAoB,GAAhB9I,EAAMpT,OAEN,OADA,EAAInB,EAAMI,UAAU,8BACbid,EAEX,IAAIC,EAAmBxY,KAAKgY,kBAAkB1M,EAAmBynC,gDACjE,GAAIv6B,GAAoBA,aAA4B7d,OAChD,IACI,IAAIq4C,EAAiB,IAAI1S,IAAI3lC,OAAO+lC,QAAQloB,IACxCy6B,EAAgBD,EAAexvC,IAAIiM,GACnCwjC,EACIjlC,KAAKC,MAAQglC,KACb,EAAI/3C,EAAMI,UAAU,sCACpBid,GAAY,KAIhB,EAAIrd,EAAMI,UAAU,oCACpBid,GAAY,EAEpB,CACA,MAAO3O,IACH,EAAI1O,EAAMI,UAAU,4BACpBid,GAAY,CAChB,MAGA,EAAIrd,EAAMI,UAAU,kCACpB0E,KAAKoR,kBAAkB3B,GACvB8I,GAAY,EAEhB,OAAOA,CACX,CACAnH,iBAAAA,CAAkB3B,IACd,EAAIvU,EAAMI,UAAU,kCAAkCmU,KACtD,IACI,IAAIyjC,EAAgBlzC,KAAKgY,kBAAkB1M,EAAmBynC,gDAC1D9B,EAAW,IAAI3Q,IACf4S,IACAjC,EAAW,IAAI3Q,IAAI3lC,OAAO+lC,QAAQwS,KAEtC,IAAIC,EAAkBnlC,KAAKC,MAAQzC,EAAYqN,8BAC/Co4B,EAAStJ,IAAIl4B,EAAO0jC,GACpBnzC,KAAK4X,mBAAmBtM,EAAmBynC,+CAAgDp4C,OAAOy4C,YAAYnC,GAClH,CACA,MAAOrnC,IACH,EAAI1O,EAAMI,UAAU,sBACxB,CACJ,CACA0Y,kBAAAA,CAAmBvE,GACf,OAAOxI,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,IAAIqX,GAAoB,EAAIvL,EAAW2C,mBAAmB,CACtD6I,UAAW,GACXpG,OAAQ7F,EAAW4J,4BAEnBsC,EAAgB,CAChBtG,UAAW,GACXM,SAAS,EAAIzF,EAAW2C,mBAAmB,CACvC8C,QAAS8F,IAEb5H,MAAOA,EACPkC,YAAa,SAEX3R,KAAK4N,UAAU4J,yBAAyBD,EAClD,GACJ,EAEJ1c,EAAQg0C,wBAA0BA,C,qCCj/BtBn0C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIqF,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2uB,gBAAkB3uB,EAAQo7B,cAAgBp7B,EAAQw4C,cAAgBx4C,EAAQ4F,UAAY5F,EAAQ0mC,oBAAsB1mC,EAAQy4C,gBAAkBz4C,EAAQ04C,oBAAsB14C,EAAQ24C,oCAAiC,EAC7N34C,EAAQwU,eAAiBA,EACzBxU,EAAQmpB,WAAaA,EACrBnpB,EAAQoU,YAAcA,EACtBpU,EAAQw7B,kBAAoBA,EAC5Bx7B,EAAQu7B,mBAAqBA,EAC7Bv7B,EAAQs7B,aAAeA,EACvBt7B,EAAQq7B,aAAeA,EACvBr7B,EAAQ44C,WAAaA,EACrB54C,EAAQ64C,QAAUA,EAClB74C,EAAQ84C,sBAAwBA,EAChC94C,EAAQ2X,cAAgBA,EACxB3X,EAAQ+4C,gBAAkBA,EAC1B/4C,EAAQg5C,YAAcA,EACtBh5C,EAAQi5C,YAAcA,EACtBj5C,EAAQk5C,cAAgBA,EACxBl5C,EAAQm5C,cAAgBA,EACxBn5C,EAAQ01B,MAAQA,EAChB11B,EAAQi1C,kBAAoBA,EAC5Bj1C,EAAQm7B,uBAAyBA,EACjCn7B,EAAQk7B,aAAeA,EACvBl7B,EAAQ2hB,0BAA4BA,EACpC3hB,EAAQojB,0BAA4BA,EACpCpjB,EAAQi7B,uBAAyBA,EACjCj7B,EAAQk5B,8BAAgCA,EACxC,MAAMiE,EAAcj4B,EAAgBrF,EAAQ,QACtCu5C,EAAmBl0C,EAAgBrF,EAAQ,QAC3Cw5C,EAAcx5C,EAAQ,MACtBy5C,EAAWz5C,EAAQ,OACnBoR,EAAapR,EAAQ,OACrBQ,EAAQR,EAAQ,OAChB8jC,EAAgB9jC,EAAQ,OACxBymC,EAAcphC,EAAgBrF,EAAQ,QACtC6E,EAAa7E,EAAQ,OACrB05C,EAAS,SACf,SAAS/kC,EAAeglC,GACpB,GAAIA,EAAUh4C,OAAS,IAAM,EACzB,MAAM,IAAI8V,MAAM,kBAAkBkiC,mBAEtC,MAAMh5C,EAAS,IAAIq6B,WAAW2e,EAAUh4C,OAAS,GACjD,IAAK,IAAI6O,EAAI,EAAGA,EAAImpC,EAAUh4C,OAAQ6O,GAAK,EACvC7P,EAAO6P,EAAI,GAAKwZ,SAAS2vB,EAAUj3C,MAAM8N,EAAGA,EAAI,GAAI,IAExD,OAAO7P,CACX,CACA,SAAS2oB,EAAW7mB,GAChB,OAAOA,EAAMgC,SAAS,KAAOhC,EAAMD,MAAM,KAAK,GAAKC,CACvD,CACA,SAAS8R,EAAYqlC,GACjB,IAAID,EAAY,GAIhB,OAHAC,EAAUx3C,SAAQy3C,IACdF,IAAc,KAAc,IAAPE,GAAatiC,SAAS,KAAK7U,OAAO,EAAE,IAEtDi3C,CACX,CACA,SAAShe,EAAkBme,EAASC,GAChC,MAAMC,EAAc,IAAIhf,WAAW8e,EAAQn4C,OAASo4C,EAAQp4C,QAG5D,OAFAq4C,EAAY/M,IAAI6M,GAChBE,EAAY/M,IAAI8M,EAASD,EAAQn4C,QAC1Bq4C,CACX,CACA,SAASte,EAAmBue,EAAOz2B,GAC/B,GAAIA,GAASy2B,EAAMt4C,OACf,MAAM,IAAI8V,MAAM,0BAEpB,MAAMyiC,EAAYD,EAAMv3C,MAAM,EAAG8gB,GAC3B22B,EAAYF,EAAMv3C,MAAM8gB,GAC9B,MAAO,CAAC02B,EAAWC,EACvB,CACA,SAASC,EAAiBh6C,EAAOi6C,GAC7B,MAAM9V,EAAUgV,EAAiB/xC,QAAQ8yC,aAAal6C,GACtD,OAAKi6C,EAGEE,mBAAmBhW,GAFfA,CAGf,CACA,SAASiW,EAAmBp6C,EAAOi6C,GAI/B,OAHIA,IACAj6C,EAAQq6C,mBAAmBr6C,IAExBm5C,EAAiB/xC,QAAQkzC,aAAat6C,EACjD,CACA,SAASq7B,EAAar7B,EAAOi6C,GACzB,IAAIM,EAUJ,OATIv6C,aAAiB46B,WACjB2f,EAAav6C,GAGQ,kBAAVA,IACPA,GAAQ,EAAIgR,EAAW2C,mBAAmB3T,IAE9Cu6C,EAAapB,EAAiB/xC,QAAQozC,WAAWx6C,IAE9Cg6C,EAAiBO,EAAYN,EACxC,CACA,SAAS7e,EAAap7B,EAAOi6C,GACzB,MAAMQ,EAAoBL,EAAmBp6C,EAAOi6C,GACpD,MAAO,CACH9iC,QAAAA,GACI,OAAOgiC,EAAiB/xC,QAAQszC,WAAWD,EAC/C,EACAzE,QAAAA,GACI,IACI,OAAO,EAAIhlC,EAAWiD,eAAeklC,EAAiB/xC,QAAQszC,WAAWD,GAC7E,CACA,MAAO1tC,GACH,OAAO,IACX,CACJ,EACA4tC,YAAAA,GACI,OAAOF,CACX,EAER,CACA,SAAS9B,EAAW51C,GAChB,MAAMk7B,EAAQl7B,EAAIk7B,MAAM,IAAIK,OAAO,QAAS,OAC5C,IAAKL,IAAUA,EAAM18B,OACjB,OAAO,EAEX,IAAIq5C,EAAS3c,EAAM,GACnB,YAAe71B,IAAXwyC,GAGG,IAAItc,OAAO,UAAU33B,KAAKi0C,EACrC,CACA,MAAMlC,EAAiCA,IACV,qBAAdmC,UACAA,UAEgB,qBAAXC,EAAAA,GAAsD,qBAArBA,EAAAA,EAAOD,UAC7CC,EAAAA,EAAOD,UAES,qBAAXn4C,QAAsD,qBAArBA,OAAOm4C,UAC7Cn4C,OAAOm4C,UAEO,qBAATE,MAAkD,qBAAnBA,KAAKF,UACzCE,KAAKF,UAETA,UAIX96C,EAAQ24C,+BAAiCA,EACzC,MAAMD,EAAsBA,IAA2B,qBAAdoC,WAClB,qBAAXC,EAAAA,GAAsD,qBAArBA,EAAAA,EAAOD,WAC7B,qBAAXn4C,QAAsD,qBAArBA,OAAOm4C,WAC/B,qBAATE,MAAkD,qBAAnBA,KAAKF,UAChD96C,EAAQ04C,oBAAsBA,EAC9B,MAAMD,EAAkBA,IAAyB,qBAAXsC,EAAAA,GAA0D,qBAAxBA,EAAAA,EAAOtU,cACxD,qBAAX9jC,QAAyD,qBAAxBA,OAAO8jC,aACpDzmC,EAAQy4C,gBAAkBA,EAC1B,MAAM/R,EAAsBA,IACF,qBAAXqU,EAAAA,GAAyD,qBAAxBA,EAAAA,EAAOtU,aACxCsU,EAAAA,EAAOtU,aAES,qBAAX9jC,QAAyD,qBAAxBA,OAAO8jC,aAC7C9jC,OAAO8jC,aAEXA,aAEXzmC,EAAQ0mC,oBAAsBA,EAC9B,MAAM9gC,EAAYA,IAAwB,qBAAXjD,OAG/B,SAASk2C,EAAQ77B,EAAK8yB,EAASyJ,IAC3B,EAAIl5C,EAAMI,UAAU,mBAAmBuc,KACvC,MAAMxc,GAAS,EAAI84C,EAAS/qB,OAAM,EAAIoV,EAAcG,eAAe9mB,EAAK8yB,IACxE,OAAO,EAAIuJ,EAAYjiC,UAAU5W,EAAQsvC,EAC7C,CACA,SAASgJ,IACL,OAAO3b,EAAY91B,QAAQo2B,YAAYz9B,EAAQw4C,cACnD,CACA,SAAS7gC,IACL,IAAIsjC,EAAgBnC,IAEpB,OADA,EAAIz4C,EAAMI,UAAU,yBAAyBw6C,KACtCpC,GAAQ,EAAIQ,EAAYjiC,UAAU6jC,EAAe1B,GAC5D,CACA,SAASR,IACL,IAAIkC,EAAgB9d,EAAY91B,QAAQo2B,YAAY,IAEpD,OADA,EAAIp9B,EAAMI,UAAU,2BAA2Bw6C,KACxCpC,GAAQ,EAAIQ,EAAYjiC,UAAU6jC,EAAe1B,GAC5D,CAnBAv5C,EAAQ4F,UAAYA,EACpB5F,EAAQw4C,cAAgB,GAmBxB,MAAMpd,EAAiB8f,GAAQp7C,OAAOq7C,eAAeD,KAASp7C,OAAOgJ,WAAahJ,OAAO2hB,KAAKy5B,GAAK15C,OAEnG,SAASw3C,IACL,MAAMlyC,EAAYD,UAAUC,UACtBs0C,EAASt0C,EAAUxC,SAAS,gBAClC,OAAO82C,GAAU1lB,GACrB,CACA,SAASujB,IACL,MAAMnyC,EAAYD,UAAUC,UACtBs0C,EAASt0C,EAAUxC,SAAS,SAClC,OAAO82C,GAAU1lB,GACrB,CACA,SAASwjB,IACL,MAAMpyC,EAAYD,UAAUC,UACtBs0C,EAASt0C,EAAUxC,SAAS,UAClC,OAAO82C,GAAU1lB,GACrB,CACA,SAASyjB,IACL,MAAMryC,EAAYD,UAAUC,UACtBs0C,EAASt0C,EAAUxC,SAAS,mBAClC,OAAO82C,GAAU1lB,GACrB,CACA,SAASA,IACL,MAAM5uB,EAAYD,UAAUC,UACtBwlC,EAAiBzlC,UAAUylC,gBAAkB,EAE7C+O,EAAc,mBAAmBz0C,KAAKE,KAAenE,OAAO24C,SAE5DC,EAAYz0C,EAAUxC,SAAS,QAAUgoC,EAAiB,EAGhE,OAFA,EAAIjsC,EAAMI,UAAU,+BAA+B46C,qBAA+BE,KAE3EF,GAAeE,CAC1B,CACA,SAAStG,EAAkB9/B,GAEvB,MAAMoZ,EAAO+X,EAAYj/B,QAAQm0C,IAAIrmC,GAAOiC,WAE5C,OAAOmX,EAAKhsB,OAAO,EACvB,CACA,SAAS44B,EAAuBsgB,GAC5B,OAAOA,EACFzhC,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACxB,CACA,SAASkhB,IAEL,OAAO,CACX,CASA,SAASvZ,EAA0BjU,GAM/B,OALA1N,EAAQ2uB,gBAAgB1sB,SAAQ,CAAChC,EAAO+c,KAChCtP,EAAQpJ,SAAS0Y,KACjBtP,EAAUA,EAAQsM,QAAQgD,EAAK/c,GACnC,IAEGyN,CACX,CACA,SAAS0V,EAA0B1V,GAM/B,OALA1N,EAAQ2uB,gBAAgB1sB,SAAQ,CAAChC,EAAO+c,KAChCtP,EAAQpJ,SAASrE,KACjByN,EAAUA,EAAQsM,QAAQ/Z,EAAO+c,GACrC,IAEGtP,CACX,CACA,SAASutB,EAAuB34B,GAC5B,IAAK,MAAO+oC,EAAcnpC,KAAWpC,OAAO+lC,QAAQnhC,EAAWoG,cAC3D,GAAIhL,OAAOgM,OAAO5J,GAAQoC,SAAShC,GAC/B,OAAO+oC,EAGf,OAAO/oC,CACX,CACA,SAAS42B,EAA8BwiB,GAEnC,GAAsB,qBAAX/4C,QAA8C,qBAAb6zB,SACxC,OACJ,MAAMmlB,EAAY,GAClB,SAASC,IACL,MAAMC,EAAWH,IACjB,GAAIG,EACA,IAAK,MAAMC,KAAWH,EAClBG,GAGZ,CAEA,MAAMC,EAENC,YAAYJ,EAAkB,KAC9BD,EAAUl6C,MAAK,IAAMw6C,cAAcF,KAIX,YAAxBvlB,SAAS5I,aACL4I,SAASlwB,iBAAiB,mBAAoBs1C,EAAkB,CAAEp1C,MAAM,IACxEm1C,EAAUl6C,MAAK,IAAM+0B,SAAS0lB,oBAAoB,mBAAoBN,MAKlD,aAAxBplB,SAAS5I,aACLjrB,OAAO2D,iBAAiB,OAAQs1C,EAAkB,CAAEp1C,MAAM,IAC1Dm1C,EAAUl6C,MAAK,IAAMkB,OAAOu5C,oBAAoB,OAAQN,MAG5DA,GACJ,CAlHA57C,EAAQo7B,cAAgBA,EAgDxBp7B,EAAQ2uB,gBAAkB,IAAI8W,IAC9BzlC,EAAQ2uB,gBAAgBme,IAAI,gBAAiB,aAC7C9sC,EAAQ2uB,gBAAgBme,IAAI,mBAAoB,kBAChD9sC,EAAQ2uB,gBAAgBme,IAAI,mBAAoB,kBAChD9sC,EAAQ2uB,gBAAgBme,IAAI,wCAAyC,gBACrE9sC,EAAQ2uB,gBAAgBme,IAAI,wCAAyC,gBACrE9sC,EAAQ2uB,gBAAgBme,IAAI,2CAA4C,gBACxE9sC,EAAQ2uB,gBAAgBme,IAAI,yCAA0C,e,wDCnP1DjtC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmzB,iBAAc,EACtB,MAAMzuB,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClB0/B,EAAgB1/B,EAAQ,OACxBo6B,EAAUp6B,EAAQ,OACxB,MAAMszB,EACF7lB,WAAAA,GACInI,KAAKg3C,yBAA2B,IACpC,CACA1kC,OAAAA,GACI,OAAO9U,OAAO6qC,UAAU4O,OAAO3kC,SACnC,CACA4kC,WAAAA,CAAY/5C,GACR,OAAO8J,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAIqoC,EAAY7qC,OAAO6qC,UAAU4O,OACjC,OAAQ95C,GACJ,KAAKoC,EAAW0G,WAAWE,cACjBkiC,EAAU6O,YAAY,mBAC5B,MACJ,KAAK33C,EAAW0G,WAAWG,cACjBiiC,EAAU6O,YAAY,2BAC5B,MAEZ,GACJ,CACAvc,oBAAAA,CAAqBC,EAASC,EAAeC,EAAaC,EAAwBC,GAC9E,OAAO/zB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIi7B,EAAe,GACnBF,EAAuBj+B,SAAQjB,IACvBA,EAAKI,YAAcsD,EAAWmH,iBAC9Bu0B,EAAa3+B,QAAQT,EAAKkB,OAC9B,IAEJ,IAAIJ,EAAY,GACZE,EAAQ,CAAC,EACb,GAA2B,GAAvBo+B,EAAa5+B,OACb,OAEJ,MAAM86C,EAAcA,CAACx6C,EAAWu+B,IACrBv+B,EAAUf,MAAMoB,IACnB,MAAMo6C,EAAkC,YAArBp6C,EAAYlB,MAAsBo/B,IAAa37B,EAAW0G,WAAWE,SAC3D,mBAArBnJ,EAAYlB,MAA6Bo/B,IAAa37B,EAAW0G,WAAWG,QACpF,OAAiC,IAAzBpJ,EAAYo+B,UAAkBgc,GAC9Bp6C,EAAYq+B,mBAAqBH,CAAS,IAGpDmc,EAAgBnc,GAAaj0B,EAAUjH,UAAM,OAAQ,GAAQ,YAC/D,IAAIm7B,EAAkBgc,EAAYnc,EAA6B5+B,QAAS8+B,GACxE,IAAKC,EACD,OACJx+B,EAAUL,KAAK4+B,EAAW,IAAMC,EAAgB/+B,SAChD,IAAIL,QAAiBiE,KAAKsS,UAC1BzV,EAAMq+B,GAAY,CACdhyB,UAAWnN,EAASmN,UACpBouC,oBAAqBv7C,EAASu7C,oBAEtC,IACMC,EAAWtc,EAAand,IAAIu5B,GAElC,SADM7vC,QAAQgwC,IAAID,GACd56C,GAAaA,EAAUN,OAAS,EAAG,CACnC,IAAIu/B,EAAoB,CACpB3/B,UAAWsD,EAAWmH,gBACtB/J,UAAWA,EACXC,QAAS,IAAIw9B,EAAcqd,YAC3B56C,MAAOA,GAEX,OAAO++B,CACX,CACA,MACJ,CACA,MAAOhyB,GACH,MAAMA,CACV,CACJ,GACJ,CACAsI,cAAAA,GACI,OAAOjL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAI,EAAI80B,EAAQU,UAAU,UACfx1B,KAAKsS,UAET9K,QAAQD,SACnB,GACJ,CACA2M,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAI2L,EAAQrQ,UAAU,4BAA6BC,KAAKC,UAAUiO,IAClE,MAAMyH,EAASzH,EAAQyH,OACjB/T,EAAQsM,EAAQlB,QAItB,SAHMvI,KAAKkS,uBACLlS,KAAKk3C,YAAY/5C,IAEnBsM,EAAQuH,OAoFR,MAAM,IAAIzR,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,kBAAmB,2BAA2BoM,MAnFtH,OAAQA,GACJ,IAAK,kBAAmB,CACpB,MAAM,QAAE6yB,EAAO,KAAEvW,GAAU/jB,EAAQuH,QAAU,CAAC,EACxCiY,QAAkBzrB,OAAO6qC,UAAU4O,OAAO7tC,YAAY26B,EAASvW,GACrE,MAAO,CACHtc,OAAQzH,EAAQyH,OAChB7V,OAAQ4tB,EAEhB,CACA,IAAK,WAAY,CACb,MAAM,KAAEuD,EAAI,GAAE2X,EAAE,MAAErpC,EAAK,SAAE48C,GAAcjuC,EAAQuH,QAAU,CAAC,EACpDoY,QAAa5rB,OAAO6qC,UAAU4O,OAAO/iC,KAAK,CAAEsY,OAAM2X,KAAIrpC,QAAO48C,aACnE,MAAO,CACHxmC,OAAQzH,EAAQyH,OAChB7V,OAAQ+tB,EAEhB,CACA,IAAK,gBAAiB,CAClB,MAAM,SAAEub,EAAQ,QAAEhQ,GAAalrB,EAAQuH,QAAU,CAAC,EAClD,IAAI2mC,EACJ,GAAIptC,MAAMC,QAAQm6B,IAAiC,IAApBA,EAAStoC,OAAc,CAClD,IAAI4sB,EAEAA,EADA1e,MAAMC,QAAQmqB,SACIn3B,OAAO6qC,UAAU4O,OAAO1S,SAASI,EAAS,GAAIhQ,EAAQt4B,OAAS,GAA2B,kBAAfs4B,EAAQ,GAAkBA,EAAQ,QAAKzxB,SAGlH1F,OAAO6qC,UAAU4O,OAAO1S,SAASI,EAAS,IAEhEgT,EAAa,CAAC1uB,EAClB,MAEI0uB,QAAmBn6C,OAAO6qC,UAAU4O,OAAOxS,UAAUE,EAAUhQ,GAEnE,MAAO,CACHzjB,OAAQzH,EAAQyH,OAChB7V,QAAQ,EAAIsQ,EAAQ8C,mBAAmBkpC,GAE/C,CACA,IAAK,sBAAuB,CACxB,MAAM,QAAEnT,EAAO,QAAE7P,GAAalrB,EAAQuH,QAAU,CAAC,EAC3C4mC,QAAmBp6C,OAAO6qC,UAAU4O,OAAO1S,SAASC,EAAS7P,GAC7DvL,QAAa5rB,OAAO6qC,UAAU4O,OAAOY,SAASD,GACpD,MAAO,CACH1mC,OAAQzH,EAAQyH,OAChB7V,QAAQ,EAAIsQ,EAAQ8C,mBAAmB,CACnCmpC,WAAYA,EACZE,OAAQ1uB,IAGpB,CACA,IAAK,sBAAuB,CACxB,MAAM,QAAEhtB,EAAO,cAAE0oC,EAAa,QAAEnQ,GAAalrB,EAAQyd,cAAgB,CAAC,EAChE7rB,QAAemC,OAAO6qC,UAAU4O,OAAOpS,gBAAgBzoC,EAAS0oC,EAAenQ,GACrF,MAAO,CACHzjB,OAAQzH,EAAQyH,OAChB7V,OAAQA,EAEhB,CACA,IAAK,uBACD,GAAI2E,KAAK+3C,YAAY,oBAAqB,CACtC,MAAM,OAAEhS,EAAM,OAAEF,GAAYp8B,EAAQuH,QAAU,CAAC,EACzC3V,QAAemC,OAAO6qC,UAAU4O,OAAOnR,iBAAiBC,EAAQF,GACtE,MAAO,CACH30B,OAAQzH,EAAQyH,OAChB7V,OAAQA,EAEhB,CAEJ,IAAK,gBACD,GAAI2E,KAAK+3C,YAAY,aAAc,CAC/B,MAAM,QAAE37C,EAAO,OAAEwpC,EAAM,OAAEC,EAAM,QAAElR,GAAalrB,EAAQyd,cAAgB,CAAC,EACjE7rB,QAAemC,OAAO6qC,UAAU4O,OAAOtR,UAAUvpC,EAASwpC,EAAQC,EAAQlR,GAChF,MAAO,CACHzjB,OAAQzH,EAAQyH,OAChB7V,OAAQA,EAEhB,CAEJ,QACI,MAAM,IAAIkE,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,qBAAsB,YAAYlO,kBAM1H,CACA,MAAOtH,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,0BAA2BsO,GAC3CA,CACV,CACJ,GACJ,CACAmuC,WAAAA,CAAYC,GACR,SAAIx6C,OAAO6qC,YAAa7qC,OAAO6qC,UAAU4O,QAA2D,oBAA1Cz5C,OAAO6qC,UAAU4O,OAAOe,GAMtF,CACAlc,aAAAA,CAAcmc,GACV,OAAOhxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAmC,GAA/Bi4C,EAAcl7C,OAAOV,QACd2D,KAAKsS,SAGpB,GACJ,CACA+W,yBAAAA,CAA0BoF,GACtBzuB,KAAKg3C,yBAA4Bj7C,IAC7BonB,QAAQpX,IAAI,wBAAyBiC,KAAKC,MAAO,MAAOlS,GACpDA,GAAYA,EAASM,OAAS,GAC9BoyB,GACJ,EAEJjxB,OAAO6qC,UAAU4O,OAAO53B,GAAG,kBAAmBrf,KAAKg3C,yBACvD,CACAz3B,cAAAA,GACI/hB,OAAO6qC,UAAU4O,OAAO13B,eAAe,kBAAmBvf,KAAKg3C,yBACnE,EAEJn8C,EAAQmzB,YAAcA,C,qCCjOtB,IAAIprB,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAkBG,GACvC4I,EAAa/I,EAAQ,OAAeG,GACpC4I,EAAa/I,EAAQ,MAAYG,GACjC4I,EAAa/I,EAAQ,OAAwBG,E,qCClB7C,IAAI+H,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8K,aAAe9K,EAAQ+K,WAAa/K,EAAQgL,cAAgBhL,EAAQiL,aAAejL,EAAQkL,WAAalL,EAAQmL,cAAgBnL,EAAQoL,WAAapL,EAAQiE,mBAAqBjE,EAAQgE,YAAchE,EAAQmE,YAAcnE,EAAQ8D,qBAAuB9D,EAAQ+D,iBAAmB/D,EAAQkE,sBAAwBlE,EAAQ0gB,gBAAkB1gB,EAAQkO,qBAAuBlO,EAAQ6vB,iBAAmB7vB,EAAQmM,mBAAqBnM,EAAQkM,kBAAoBlM,EAAQ6L,gBAAkB7L,EAAQiM,gBAAkBjM,EAAQgM,gBAAkBhM,EAAQ+L,gBAAkB/L,EAAQkhC,wBAAqB,EACllBt4B,EAAa/I,EAAQ,OAAYG,GACjC,IAAIqL,EAASxL,EAAQ,OACrBC,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAO61B,kBAAoB,IAC9HphC,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOU,eAAiB,IACxHjM,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOW,eAAiB,IACxHlM,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOY,eAAiB,IACxHnM,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOQ,eAAiB,IACxH/L,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOa,iBAAmB,IAC5HpM,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOc,kBAAoB,IAC9HrM,OAAOC,eAAeC,EAAS,mBAAoB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOwkB,gBAAkB,IAC1H/vB,OAAOC,eAAeC,EAAS,uBAAwB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAO6C,oBAAsB,IAClIpO,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO0C,EAAOqV,eAAiB,IACxH,IAAI/P,EAAc9Q,EAAQ,MAC1BC,OAAOC,eAAeC,EAAS,wBAAyB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgI,EAAYzM,qBAAuB,IACzIpE,OAAOC,eAAeC,EAAS,mBAAoB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgI,EAAY5M,gBAAkB,IAC/HjE,OAAOC,eAAeC,EAAS,uBAAwB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgI,EAAY7M,oBAAsB,IACvIhE,OAAOC,eAAeC,EAAS,cAAe,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgI,EAAYxM,WAAa,IACrHrE,OAAOC,eAAeC,EAAS,cAAe,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgI,EAAY3M,WAAa,IACrHlE,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOgI,EAAY1M,kBAAoB,IACnI2E,EAAa/I,EAAQ,OAAcG,GACnC,IAAIq9C,EAAWx9C,EAAQ,MACvBC,OAAOC,eAAeC,EAAS,aAAc,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAASjyC,UAAY,IAChHtL,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAASlyC,aAAe,IACtHrL,OAAOC,eAAeC,EAAS,aAAc,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAASnyC,UAAY,IAChHpL,OAAOC,eAAeC,EAAS,eAAgB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAASpyC,YAAc,IACpHnL,OAAOC,eAAeC,EAAS,gBAAiB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAASryC,aAAe,IACtHlL,OAAOC,eAAeC,EAAS,aAAc,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAAStyC,UAAY,IAChHjL,OAAOC,eAAeC,EAAS,eAAgB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO00C,EAASvyC,YAAc,G,qCC3CpHhL,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkU,cAAgBA,EACxBlU,EAAQ4T,kBAAoBA,EAC5B,MAAMvT,EAAQR,EAAQ,OAChBy9C,EAAiBj8C,GAASX,KAAKC,UAAUU,GAAM,CAAC8kC,EAAGlmC,IAA4B,kBAAVA,EAAqBA,EAAMmX,WAAa,IAAMnX,IAQnHs9C,EAAajO,IAQf,MAAMkO,EAA0B,sQAC1BC,EAAiBnO,EAAKt1B,QAAQwjC,GAAyB,CAACtf,EAAOwf,IAAU,KAAKA,QACpF,IACI,OAAOh9C,KAAKmO,MAAM4uC,GAAgB,CAACtX,EAAGlmC,KAClC,MAAM09C,EAAwC,kBAAV19C,GAAsBA,EAAMi+B,MAAM,UACtE,OAAIyf,EACO7f,OAAO79B,EAAM29C,UAAU,EAAG39C,EAAMuB,OAAS,IAC7CvB,CAAK,GAEpB,CACA,MAAO+M,GACH,OAAOtM,KAAKmO,MAAMygC,EACtB,GAEJ,SAASp7B,EAAcjU,GACnB,GAAqB,kBAAVA,EAEP,MADA,EAAII,EAAMI,UAAUR,GACd,IAAIqX,MAAM,+CAA+CrX,GAEnE,IACI,OAAOs9C,EAAUt9C,EACrB,CACA,MAAO+M,GAGH,OADAsb,QAAQvZ,MAAM,uBAAwB/B,GAC/B/M,CACX,CACJ,CACA,SAAS2T,EAAkB3T,GACvB,MAAwB,kBAAVA,EAAqBA,EAAQq9C,EAAcr9C,IAAU,EACvE,C,mCClDAH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ69C,eAAiB79C,EAAQg4B,qBAAuBh4B,EAAQyZ,oBAAsBzZ,EAAQge,8BAAgChe,EAAQsa,oCAAsCta,EAAQub,yBAA2Bvb,EAAQ89C,uCAAyC99C,EAAQ+9C,yBAA2B/9C,EAAQg+C,4BAA8Bh+C,EAAQi+C,sBAAwBj+C,EAAQk+C,sBAAwBl+C,EAAQiT,sBAAwBjT,EAAQm+C,4BAA8Bn+C,EAAQo+C,mCAAgC,EACvfp+C,EAAQo+C,8BAAgC,EACxCp+C,EAAQm+C,4BAA8B,GACtCn+C,EAAQiT,sBAAwB,oDAChCjT,EAAQk+C,sBAAwB,mDAChCl+C,EAAQi+C,sBAAwB,wDAChCj+C,EAAQg+C,4BAA8B,OACtCh+C,EAAQ+9C,yBAA2B,CAC/B/9C,EAAQiT,sBACRjT,EAAQk+C,sBACRl+C,EAAQi+C,uBAEZj+C,EAAQ89C,uCAAyC,CAC7CO,SAAU,KACVC,SAAU,KACVC,SAAU,MAEdv+C,EAAQub,yBAA2B,IACnCvb,EAAQsa,oCAAsC,MAC9Cta,EAAQge,8BAAgC,MAExChe,EAAQyZ,oBAAsB,MAE9BzZ,EAAQg4B,qBAAuB,EAC/Bh4B,EAAQ69C,eAAiB,CACrBW,UAAW,EACXC,WAAY,EACZC,UAAW,EACXC,aAAc,EACdC,QAAS,E,wDC/BD/+C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6+C,2BAAwB,EAChC,MAAMn6C,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBwL,EAASxL,EAAQ,MACvB,MAAMg/C,EACFvxC,WAAAA,CAAY+W,GACRlf,KAAKkf,OAASA,EACdlf,KAAK25C,gBAAkB,CACnBpxC,QAAS,IACTzM,KAAMoK,EAAO9G,aAAa+G,QAElC,CACAoiB,UAAAA,GACI,OAAOvoB,KAAKkf,OAAOvU,OACvB,CACA6d,aAAAA,CAAczrB,GACV,OAAsB,IAAlBA,EAAOV,QAAgBU,EAAO,KAAOwC,EAAWuG,aAAaK,OAIrE,CACA+N,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,KACI,EAAI2L,EAAQrQ,UAAU,sCAAuCC,KAAKC,UAAUiO,GAChF,CACA,MAAOG,GACP,OACM5J,KAAK4oB,eAAenf,EAAQlB,SAClC,MAAM2I,EAASzH,EAAQyH,OACvB,IAAI7V,EACJ,GAAIoO,EAAQyd,cAAgBlnB,KAAKkf,OAAQ,CACrC,IAAI2J,EAAiBpf,EAAQyd,aAC7B,OAAQhW,GACJ,IAAK,wBACD,IAAI4X,EACJ,IAAI9oB,KAAKkf,OAAO6V,SAAS,yBAYrB,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAZzB,CAC/C,IAAI/jB,QAAe2E,KAAKkf,OAAO6V,SAAS,yBAAyBhM,gBAAgBF,GACjFC,GAAmB,EAAI5iB,EAAO5G,SAASjE,GACnCytB,aAA4B4M,YAC5B5M,EAAmB9oB,KAAK21B,oBAAoB7M,GAC5CA,EAAmB8M,KAAK3P,OAAO4P,gBAAgB/M,KAE1CA,EAAiBG,YACtBH,EAAmBA,EAAiBG,UAAUhX,WAEtD,CAIA5W,EAAS,CACL6V,OAAQ,wBACR7V,OAAQytB,GAEZ,MACJ,IAAK,oBACD,IAAIE,EACJ,IAAIhpB,KAAKkf,OAAO6V,SAAS,qBAKrB,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAL7B,CAC3C,IAAI/jB,QAAe2E,KAAKkf,OAAO6V,SAAS,qBAAqB3rB,YAAYyf,GACzEG,GAAoB,EAAI9iB,EAAO5G,SAASjE,EAC5C,CAIAA,EAAS,CACL6V,OAAQ,oBACR7V,OAA8B,OAAtB2tB,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBC,UAAUhX,YAE9G,MACJ,IAAK,iCACD,IAAIiX,EACJ,IAAIlpB,KAAKkf,OAAO6V,SAAS,kCAsBrB,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBArBxE,GAAuE,UAAnEpf,KAAKkf,OAAO6V,SAAS,kCAAkCpqB,QAAqB,CAC5E,IAAItP,QAAe2E,KAAKkf,OAAO6V,SAAS,kCAAkC5L,yBAAyBN,GACnGK,GAAoB,EAAIhjB,EAAO5G,SAASjE,EAC5C,KACK,CACYoO,EAAQuH,OAArB,IACI4oC,EAAa,CAAEl+C,QAAS,CAAC,GACzB+N,EAAQuH,QAAoC,kBAAnBvH,EAAQuH,QAAuB,mBAAoBvH,EAAQuH,SACpF4oC,EAAWl+C,QAAQm+C,cAAgBpwC,EAAQuH,OAAO8oC,gBAElDrwC,EAAQuH,QAAoC,kBAAnBvH,EAAQuH,QAAuB,cAAevH,EAAQuH,SAC/E4oC,EAAWl+C,QAAQq+C,kBAAoBtwC,EAAQuH,OAAOjB,WAEtDtG,EAAQuH,QAAoC,kBAAnBvH,EAAQuH,QAAuB,aAAcvH,EAAQuH,SAC9E4oC,EAAWl+C,QAAQs+C,SAAWvwC,EAAQuH,OAAOgpC,UAEjD,IAAI3+C,QAAe2E,KAAKkf,OAAO6V,SAAS,kCAAkC5L,yBAAyBywB,GACnG1wB,GAAoB,EAAIhjB,EAAO5G,SAASjE,EAC5C,CAKJA,EAAS,CACL6V,OAAQ,iCACR7V,OAAQ6tB,EAAkBE,KAAKnX,YAEnC,MACJ,IAAK,sBACD,MAAMqjB,QAA6Bt1B,KAAKkf,OAAO6V,SAAS,uBAAuBklB,cAAcpxB,GAC7FxtB,EAAS,CACL6V,OAAQ,4BACR7V,OAAQi6B,EAAqBrM,UAAUhX,YAE3C,MAEZ,CACA,OAAO5W,CACX,CACA,MAAOwM,GAEH,MADA,EAAI8D,EAAQrQ,UAAU,4BAA6BuM,GAC7CA,CACV,CACJ,GACJ,CACA0X,cAAAA,GACQvf,KAAKkf,OAAO6V,SAAS,0BACrB/0B,KAAKkf,OAAO6V,SAAS,yBAAyBzL,iBAAiB4wB,OAEvE,CACA7wB,yBAAAA,CAA0B8wB,GAClBn6C,KAAKkf,OAAO6V,SAAS,0BACrB/0B,KAAKkf,OAAO6V,SAAS,yBAAyBzL,iBAAiB4wB,IAC3D,IAAIp4C,EAAIC,EACRo4C,EAA0H,QAAlGp4C,EAAiD,QAA3CD,GAAK,EAAIoE,EAAO5G,SAAS46C,UAAiC,IAAPp4C,OAAgB,EAASA,EAAG1F,eAA4B,IAAP2F,OAAgB,EAASA,EAAGkQ,WAAW,IAG7KjS,KAAKkf,OAAO6V,SAAS,0BACrB/0B,KAAKkf,OAAO6V,SAAS,yBAAyBT,iBAAiB8lB,OAGvE,CACA9nC,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkf,OAAO6V,SAAS,iBAAiBziB,SACjD,GACJ,CACA7J,UAAAA,GACI,OAAOxB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI4I,GAAU,EAAI1C,EAAO5G,eAAeU,KAAKsS,WACzClW,EAAUwM,EAAQxM,QAClBA,aAAmBs5B,aACnBt5B,EAAU4D,KAAK21B,oBAAoBv5B,GACnCA,EAAUw5B,KAAK3P,OAAO4P,gBAAgBz5B,KAE1C,IAAI8M,EAAYN,EAAQM,UAAU+I,WAC9BpV,EAAQ,CAAC,EAEb,OADAA,EAAM0C,EAAWuG,aAAaK,SAAW,CAAE+C,UAAWA,GAC/C,CACHjN,UAAWsD,EAAWwH,kBACtBpK,UAAW,CAAC,GAAG4C,EAAWuG,aAAaK,WAAW/J,KAClDQ,QAAS,GACTC,MAAOA,EAEf,GACJ,CACA84B,mBAAAA,CAAoBz5B,GAChB,OAAoB,KAAhBA,EAAKG,QAA6B,IAAZH,EAAK,GACpBA,EAAKkB,MAAM,GAEflB,CACX,CACAkW,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAKkf,OAAO6V,SAAS,oBACrB,OAAO/0B,KAAKkf,OAAO6V,SAAS,oBAAoB3iB,YAExD,GACJ,CACAwW,cAAAA,CAAeW,GACX,OAAOtiB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAIupB,IAAY5d,EAAQ6d,gBAAgBhmB,IAAIjE,EAAWuG,aAAaK,SAChE,MAAM,IAAI5G,EAAWI,gBAAgBJ,EAAWK,wBAAwB4I,qBAE5E,IAAIxI,KAAKkf,OAAO6V,SAAS,iBAQrB,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBARjC,CACvC,IAAIqK,QAAsBzpB,KAAKkf,OAAO6V,SAAS,iBAAiBt4B,UAChE,GAA6B,GAAzBgtB,EAAclhB,SAAgBkhB,EAAc3tB,KAAKwG,eAAiB4D,EAAO9G,aAAa+G,QACtF,OAAOqB,QAAQD,gBAEbvH,KAAKq6C,mBACf,CAIJ,GACJ,CACAA,iBAAAA,GACI,OAAOpzC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAIA,KAAKkf,OAAO6V,SAAS,uBAQrB,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAR3B,CAC7C,IAAI/jB,QAAgB2E,KAAKkf,OAAO6V,SAAS,uBAAuBklB,cAAcj6C,KAAK25C,iBAC/EW,GAAsB,EAAIp0C,EAAO5G,SAASjE,GAC9C,GAAIi/C,EAAoB5kC,QACpB,OAAOlO,QAAQD,SAEvB,CAIJ,GACJ,EAEJ1M,EAAQ6+C,sBAAwBA,C,mCCtNhC/+C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQk4C,+CAAiDl4C,EAAQ4d,wCAA0C5d,EAAQ0/C,oCAAsC1/C,EAAQ2/C,mCAAqC3/C,EAAQkoC,qCAAuCloC,EAAQgoC,kCAAoChoC,EAAQioC,qCAAuCjoC,EAAQgS,qBAAuBhS,EAAQqY,oCAAsCrY,EAAQiW,yBAA2BjW,EAAQsU,qBAAuBtU,EAAQid,gCAAkCjd,EAAQ8T,wBAA0B9T,EAAQ8R,4BAA8B9R,EAAQm0C,4BAAyB,EAClnBn0C,EAAQm0C,uBAAyB,KACjCn0C,EAAQ8R,4BAA8B,UACtC9R,EAAQ8T,wBAA0B,QAClC9T,EAAQid,gCAAkC,QAC1Cjd,EAAQsU,qBAAuB,QAC/BtU,EAAQiW,yBAA2B,KACnCjW,EAAQqY,oCAAsC,MAC9CrY,EAAQgS,qBAAuB,iBAC/BhS,EAAQioC,qCAAuC,MAC/CjoC,EAAQgoC,kCAAoC,MAC5ChoC,EAAQkoC,qCAAuC,OAC/CloC,EAAQ2/C,mCAAqC,cAC7C3/C,EAAQ0/C,oCAAsC,8BAC9C1/C,EAAQ4d,wCAA0C,2BAClD5d,EAAQk4C,+CAAiD,2B,qCChBzD,IAAInwC,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAcG,GACnC4I,EAAa/I,EAAQ,OAAeG,GACpC4I,EAAa/I,EAAQ,OAAYG,GACjC4I,EAAa/I,EAAQ,OAAaG,GAClC4I,EAAa/I,EAAQ,MAAgBG,E,mCCXrC,SAASoe,IACL,MAAO,CACH,QAAW,eACX,KAAQpe,EAAQie,cAChB,SAAY,kEAEpB,CACA,SAASE,IACL,MAAO,CACH,QAAW,aACX,KAAQne,EAAQqvB,kBAChB,SAAY,kEAEpB,CACA,SAASnR,IACL,MAAO,CACH,QAAW,kBACX,KAAQle,EAAQsvB,oBAChB,SAAY,GAEpB,CA5BAxvB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsvB,oBAAsBtvB,EAAQqvB,kBAAoBrvB,EAAQie,mBAAgB,EAClFje,EAAQoe,mBAAqBA,EAC7Bpe,EAAQme,0BAA4BA,EACpCne,EAAQke,yBAA2BA,EACnCle,EAAQie,cAAgB,aACxBje,EAAQqvB,kBAAoB,kBAC5BrvB,EAAQsvB,oBAAsB,mB,qCCRlBzvB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8lB,oBAAiB,EACzB,MAAMphB,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBo6B,EAAUp6B,EAAQ,OAClB0/B,EAAgB1/B,EAAQ,OAC9B,MAAMimB,EACFxY,WAAAA,GACInI,KAAKy6C,yBAA2B,IACpC,CACAvmC,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EACJ,KACI,EAAI6J,EAAQrQ,UAAU,gCAAgC,EAAIqQ,EAAQ8C,mBAAmBhF,UAC/EzJ,KAAKkS,iBACX,IAAIwoC,EAAY,KAChB,OAAQjxC,EAAQyH,QACZ,IAAK,gBACGzH,EAAQuH,QAAU,YAAavH,EAAQuH,SACvC0pC,EAAY,CACRxpC,OAAQzH,EAAQyH,OAChBF,OAAQ,CACJvH,EAAQuH,OAAOO,QACf9H,EAAQrN,WAIpB,MACJ,IAAK,sBACL,IAAK,0BACL,IAAK,6BAEOqN,EAAQuH,SACR0pC,EAAY,CACRxpC,OAAQzH,EAAQyH,OAChBF,OAAQ,CAACvH,EAAQuH,UAI7B,MACJ,IAAK,uBAEOvH,EAAQuH,QAAU,kBAAmBvH,EAAQuH,SAAqC,QAAzBlP,EAAK2H,EAAQuH,cAA2B,IAAPlP,OAAgB,EAASA,EAAG4kB,gBAA0D,kBAAjCjd,EAAQuH,OAAO0V,gBAC9Jg0B,EAAY,CACRxpC,OAAQzH,EAAQyH,OAChBF,OAAQ,CACJvH,EAAQrN,QACRqN,EAAQuH,OAAO0V,iBAK/B,MACJ,IAAK,oBAEOjd,EAAQuH,SACR0pC,EAAY,CACRxpC,OAAQzH,EAAQyH,OAChBF,OAAQvH,EAAQuH,SAI5B,MACJ,QACI0pC,EAAY,CACRxpC,OAAQzH,EAAQyH,OAChBF,OAAQvH,EAAQyd,cAG5B,IAAIwzB,EAmCA,MAAM,IAAIn7C,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAjCxE,IAAwB,+BAAnB3V,EAAQyH,QAA8D,4BAAnBzH,EAAQyH,SACzDzH,EAAQuH,QACR,YAAavH,EAAQuH,OAAQ,EAChC,EAAIrF,EAAQrQ,UAAU,qDAAqD,EAAIqQ,EAAQ8C,mBAAmBisC,IAC1G,MAAM/0B,EAAgBjB,SAASjb,EAAQuH,OAAOzI,QAAS,IAAI0J,iBACrDzU,OAAO6qC,UAAU5+B,QAAQixC,GAC/B,MAAMC,EAAe,UAAUh1B,KAAiBlc,EAAQrN,UAExD,OADA,EAAIuP,EAAQrQ,UAAU,6CAA8Cq/C,GAC7D,CACHt/C,OAAQs/C,EACRzpC,OAAQzH,EAAQyH,OAExB,CACK,CACD,MAAM/T,GAAQ,EAAIwO,EAAQqY,YAAYva,EAAQlB,SACxCqyC,EAAW,KAAKh2B,OAAOznB,GAAO8U,SAAS,MAE7C,IADA,EAAItG,EAAQrQ,UAAU,kCAAmC6B,EAAOy9C,GAC5DA,EAAU,OACJp9C,OAAO6qC,UAAU5+B,QAAQ,CAC3ByH,OAAQ,6BACRF,OAAQ,CAAC,CAAEzI,QAASqyC,OAExB,EAAIjvC,EAAQrQ,UAAU,6CAA8Cs/C,GAAU,EAAIjvC,EAAQ8C,mBAAmBisC,IAC7G,MAAMlgB,QAAiBh9B,OAAO6qC,UAAU5+B,QAAQixC,GAEhD,OADA,EAAI/uC,EAAQrQ,UAAU,uCAAuC,EAAIqQ,EAAQ8C,mBAAmB+rB,IACrF,CACHn/B,OAAQm/B,EACRtpB,OAAQzH,EAAQyH,OAExB,CACJ,CAKR,CACA,MAAOtH,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,uCAAwCsO,GACxDA,CACV,CACJ,GACJ,CACAsI,cAAAA,GACI,OAAI,EAAI4iB,EAAQU,UAAU,UACfh4B,OAAO6qC,UAAU5+B,QAAQ,CAAEyH,OAAQ,wBAEvC1J,QAAQD,SACnB,CACAozB,oBAAAA,CAAqBC,EAASC,EAAeC,EAAaC,EAAwBC,EAA8BtY,GAC5G,OAAOzb,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIi7B,EAAe,GACnBF,EAAuBj+B,SAAQjB,IACvBA,EAAKI,YAAcsD,EAAWw8B,oBAC9Bd,EAAa3+B,QAAQT,EAAKkB,OAC9B,IAEJ,IAAIJ,EAAY,GACZE,EAAQ,CAAC,EAcb,GAbAo+B,EAAan+B,SAASo+B,IAClB,IAAI2f,GAAe,EAAIlvC,EAAQqY,YAAYkX,GACvCC,EAAkBH,EAA6B5+B,QAAQR,MAAMoB,GACrDA,EAAYuL,UAAYsyC,GAAyC,KAAzB79C,EAAYo+B,UACpDp+B,EAAYq+B,mBAAqBH,IAEzCC,IACAx+B,EAAUL,KAAK4+B,EAAW,IAAMC,EAAgB/+B,SAChDS,EAAMq+B,GAAY,CACdhyB,UAAWiyB,EAAgBjyB,WAEnC,IAEAvM,GAAaA,EAAUN,OAAS,EAAG,CACnC,IAAIu/B,EAAoB,CACpB3/B,UAAWsD,EAAWw8B,mBACtBp/B,UAAWA,EACXC,QAAS,IAAIw9B,EAAc0gB,cAC3Bj+C,MAAOA,GAEX,OAAO++B,CACX,CACA,MACJ,CACA,MAAOhyB,GACH,MAAMA,CACV,CACJ,GACJ,CACA0I,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOxC,OAAO6qC,UAAU5+B,QAAQ,CAAEyH,OAAQ,uBAC9C,GACJ,CACA4qB,aAAAA,GACI,OAAO97B,KAAKsS,SAChB,CACA+W,yBAAAA,CAA0BoF,GACtBtL,QAAQpX,IAAI,+CACZ/L,KAAKy6C,yBAA4B1+C,IAC7BonB,QAAQpX,IAAI,2CAA4CiC,KAAKC,MAAO,SAAUlS,GAC1EA,GAAYA,EAASM,OAAS,GAC9BoyB,GACJ,EAEJjxB,OAAO6qC,UAAUhpB,GAAG,kBAAmBrf,KAAKy6C,yBAChD,CACAl7B,cAAAA,GACQvf,KAAKy6C,0BACLj9C,OAAO6qC,UAAU9oB,eAAe,kBAAmBvf,KAAKy6C,yBAEhE,EAEJ5/C,EAAQ8lB,eAAiBA,C,qCCjMzB,IAAI/d,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAgBG,GACrC4I,EAAa/I,EAAQ,OAAWG,E,qCCjBpBH,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkyB,YAAclyB,EAAQkgD,cAAgBlgD,EAAQ0S,cAAgB1S,EAAQmgD,gBAAa,EAC3F,MAAMzR,EAAgBxpC,EAAgBrF,EAAQ,QACxCQ,EAAQR,EAAQ,OAChBuR,EAAQvR,EAAQ,OAChBiR,EAAUjR,EAAQ,OAClBugD,EAAgBl7C,EAAgBrF,EAAQ,QAC9CG,EAAQmgD,WAAa,QACrB,MAAME,EAAgB,CAClB,8CACA,8CAEEC,EAAiB,YACjBC,EAAgB,iBAChBC,EAAwB,IACxB7R,EAAuB,CACzBC,OAAQ,MACR,eAAgB,cAEdC,EAAsB,OACtBC,EAAqB,CACvBC,QAASJ,EACTt4B,OAAQw4B,GAEZ7uC,EAAQ0S,cAAgB,CACpB0jB,QAAS,UACTqqB,SAAU,WACVC,MAAO,QACP/tC,IAAK,OAET3S,EAAQkgD,cAAgB,CACpBS,KAAM,OACNC,OAAQ,UAIZ,MAUMC,EAAuBA,CAACC,KAAWC,IAAW30C,OAAU,EAAQ,CAAC00C,KAAWC,QAAS,GAAQ,UAAWC,EAAMlnB,EAAU,CAAC,EAAGmnB,EAAU,KACxI,IAAK,MAAMj+C,KAAOg+C,EACd,IACI,MAAME,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OACpBC,GAAe,EAAI3S,EAAcrnC,SAASrE,EAAKlD,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGkY,GAAU,CAAEsnB,YAC3FE,EAAiB,IAAI30C,SAAQ,CAACw5B,EAAGv5B,IAAWvG,YAAW,KACzD66C,EAAWK,QACX30C,EAAO,IAAI0K,MAAM,qBAAqB,GACvC2pC,KACGt8C,QAAiBgI,QAAQ60C,KAAK,CAACH,EAAcC,IACnD,GAAI38C,EAAS88C,GACT,OAAO98C,EAEX,GAAuB,KAAnBA,EAASC,OAET,OADA0jB,QAAQvZ,MAAM,yBAA0B/L,GACjC2B,CAEf,CACA,MAAOoK,GACHuZ,QAAQvZ,MAAM,mBAAmB/L,KAAQ+L,EAC7C,CAGJ,MADAuZ,QAAQvZ,MAAM,gCACR,IAAIuI,MAAM,6BACpB,IACA,MAAM4a,EACF5kB,WAAAA,GACInI,KAAKu8C,YAAc1hD,EAAQkgD,cAAcS,KACzCx7C,KAAKw8C,eAAiB3hD,EAAQmgD,WAC9Bh7C,KAAKy8C,QAAUxB,EAAc/4C,QAAQw6C,eAAe,CAChD5gD,KAAM,gBAEVkE,KAAK28C,WAAa,IAAIpyC,MAEtBvK,KAAK48C,YAAc,yDACvB,CACA5hC,oBAAAA,CAAqBrQ,EAASkyC,EAAM1wC,GAChCnM,KAAKw8C,eAAiB7xC,EAAUzP,EAAMwxB,WACtC1sB,KAAKu8C,YAAcM,EACnB78C,KAAK3B,QAAU8N,CACnB,CACA,kBAAI2wC,GACA,OAAO3B,EAAiB,IAAMn7C,KAAK3B,OACvC,CACA,kBAAI0+C,GACA,OAAI,EAAIpxC,EAAQrL,sBACR,EAAIqL,EAAQ4kB,SACL,MAGA,UAIJ,IAEf,CACAiX,WAAAA,GACI,OAAOvgC,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAKg9C,qBACL,IAAIC,QAAgBj9C,KAAKy8C,QAAQ5rC,QAAQ7Q,KAAK88C,gBAC1CI,QAAal9C,KAAKy8C,QAAQ5rC,QAAQuqC,GAClC8B,EACAl9C,KAAK48C,YAAcM,EAGnBl9C,KAAKy8C,QAAQza,QAAQoZ,EAAep7C,KAAK48C,aAEzCK,IACAj9C,KAAK28C,WAAaM,GAClB,EAAI/hD,EAAMI,UAAU,qCAAsC0E,KAAK28C,WAAWtgD,cACpE2D,KAAKm9C,oBAEnB,GACJ,CACAH,kBAAAA,GACI,IAAIx/C,GAAS,EAAIyO,EAAMy6B,aACnBlpC,IACA,EAAItC,EAAMI,UAAU,8BAM5B,CACA8hD,YAAAA,GACI,OAAOp9C,KAAK28C,UAChB,CACAU,UAAAA,CAAWC,GACP,OAAOr2C,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IACI,MAAMiqC,EAAO1uC,KAAKC,UAAU8hD,IAC5B,EAAIpiD,EAAMI,UAAU,oBAAqB2uC,GACzC,MAAMC,QAAYwR,EAAqBR,EAAevgD,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAGktB,GAAqB,CAAEM,KAAMA,MACnH,EAAI/uC,EAAMI,UAAU,oBAAqB4uC,GACrCA,GAAOA,EAAIzqC,QAAwB,KAAdyqC,EAAIzqC,QACzBO,KAAK28C,WAAa38C,KAAK28C,WAAWz+C,QAAQrC,GAC/BA,EAAK8c,WAAa2kC,EAAO3kC,WAAa9c,EAAKiT,SAAWwuC,EAAOxuC,gBAElE9O,KAAKy8C,QAAQza,QAAQhiC,KAAK88C,eAAgB98C,KAAK28C,YACrDp1C,GAAQ,IAGRE,GAAO,EAEf,CACA,MAAOI,IACH,EAAI3M,EAAMI,UAAU,qBAAsBuM,GAC1CN,GAAQ,EAEZ,CACJ,KACJ,GACJ,CACA4lB,iBAAAA,CAAkBI,EAAWF,EAAQC,GACjC,OAAOrmB,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWjB,EAAS0e,EAAMC,EAAQC,OAAYxqB,EAAWyqB,OAAYzqB,EAAW0qB,OAAY1qB,EAAW2qB,OAAY3qB,EAAW4qB,OAAY5qB,EAAW6qB,OAAY7qB,GACvM,IAAIpB,EAAIC,EAAIC,EAAI0G,EAChB,IAAI60C,EAAyC,QAAjCz7C,GAAK,EAAImK,EAAMy6B,oBAAiC,IAAP5kC,OAAgB,EAASA,EAAG7C,SAAShB,SACtFgB,EAA6C,QAAjC8C,GAAK,EAAIkK,EAAMy6B,oBAAiC,IAAP3kC,OAAgB,EAASA,EAAG9C,SAASkhB,OAC1Fo9B,GAAQt+C,IACRA,GAAsBs+C,GAE1B,IAAIC,EAA6C,QAAjCx7C,GAAK,EAAIiK,EAAMy6B,oBAAiC,IAAP1kC,OAAgB,EAASA,EAAGN,UAAU87C,SAC3FC,EAAuC,QAAjC/0C,GAAK,EAAIuD,EAAMy6B,oBAAiC,IAAPh+B,OAAgB,EAASA,EAAGhH,UAAUC,UACrFuwB,EAAWlyB,KAAK+8C,eAChBW,EAAa,CACbR,KAAMl9C,KAAK48C,YACXjyC,QAAS3K,KAAKw8C,eACd1tC,QAASA,EACT2e,OAAQA,EACRovB,KAAM78C,KAAKu8C,YACX5jC,WAAW,IAAI3K,MAAO+E,UACtBlV,IAAKoB,EACL0+C,KAAMH,EACNhwB,KAAMA,EACN0E,SAAUA,EACV,aAAcurB,EACd/vB,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,SAET/tB,KAAK49C,eAAeF,SACpB19C,KAAKq9C,WAAWK,EAC1B,GACJ,CACAP,iBAAAA,GACI,OAAOl2C,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAI69C,EAAW79C,KAAK28C,WAAW7+B,KAAIw/B,GAAUt9C,KAAKq9C,WAAWC,MAC7D,EAAIpiD,EAAMI,UAAU,mDAAmD,IAAI0S,MAAOqI,eAClF7O,QAAQs2C,WAAWD,GAAU71C,MAAM/F,KAC/B,EAAI/G,EAAMI,UAAU,kDAAkD,IAAI0S,MAAOqI,eACjF,IAAI0nC,EAAY,GAChB97C,EAAQnF,SAAQ,CAACzB,EAAQ6iB,KACA,YAAjB7iB,EAAOoE,QACPs+C,EAAUzhD,KAAK4hB,EACnB,IAEJle,KAAK28C,WAAa38C,KAAK28C,WAAWz+C,QAAO,CAAC8iC,EAAG9iB,KAAW6/B,EAAU5+C,SAAS+e,KAC3Ele,KAAKy8C,QAAQza,QAAQhiC,KAAK88C,eAAgB98C,KAAK28C,YAAY30C,MAAK,SAAUlN,GACtEyM,GACJ,IAAG4M,OAAM,SAAUC,GACf3M,EAAO2M,EACX,GAAE,GAEV,KACJ,GACJ,CACAwpC,cAAAA,CAAe/hD,GACX,OAAOoL,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,GADAA,KAAK28C,WAAWrgD,KAAKT,GACjBmE,KAAK28C,WAAWtgD,OAASg/C,EAAuB,CAChD,IAAIjM,EAASpvC,KAAK28C,WAAWtgD,OAASg/C,EACtCr7C,KAAK28C,WAAWqB,OAAO,EAAG5O,EAC9B,CACA,OAAO,IAAI5nC,SAAQ,CAACD,EAASE,KACzBzH,KAAKy8C,QAAQza,QAAQhiC,KAAK88C,eAAgB98C,KAAK28C,YAAY30C,MAAK,SAAUlN,GACtEyM,EAAQ1L,EACZ,IAAGsY,OAAM,SAAUC,GACf3M,EAAO2M,EACX,GAAE,GAEV,GACJ,EAEJvZ,EAAQkyB,YAAcA,C,qCCzPVryB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIkI,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI4H,EAAsB5K,MAAQA,KAAK4K,qBAAwBjQ,OAAOkI,OAAU,SAASC,EAAG+H,GACxFlQ,OAAOC,eAAekI,EAAG,UAAW,CAAES,YAAY,EAAMzI,MAAO+P,GACnE,EAAK,SAAS/H,EAAG+H,GACb/H,EAAE,WAAa+H,CACnB,GACIC,EAAgB9K,MAAQA,KAAK8K,cAAkB,WAC/C,IAAIC,EAAU,SAASjI,GAMnB,OALAiI,EAAUpQ,OAAOqQ,qBAAuB,SAAUlI,GAC9C,IAAImI,EAAK,GACT,IAAK,IAAIjI,KAAKF,EAAOnI,OAAOgJ,UAAUC,eAAeC,KAAKf,EAAGE,KAAIiI,EAAGA,EAAG5O,QAAU2G,GACjF,OAAOiI,CACX,EACOF,EAAQjI,EACnB,EACA,OAAO,SAAU7C,GACb,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAI5E,EAAS,CAAC,EACd,GAAW,MAAP4E,EAAa,IAAK,IAAI+C,EAAI+H,EAAQ9K,GAAMiL,EAAI,EAAGA,EAAIlI,EAAE3G,OAAQ6O,IAAkB,YAATlI,EAAEkI,IAAkBtI,EAAgBvH,EAAQ4E,EAAK+C,EAAEkI,IAE7H,OADAN,EAAmBvP,EAAQ4E,GACpB5E,CACX,CACJ,CAhBmD,GAiB/C4L,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0R,6BAA0B,EAClC,MAAMjB,EAAqB5Q,EAAQ,OAC7BugD,EAAgBl7C,EAAgBrF,EAAQ,QACxCiR,EAAUjR,EAAQ,OAClBoR,EAAapR,EAAQ,OACrBqR,EAAMjB,EAAapQ,EAAQ,QAC3BQ,EAAQR,EAAQ,OAChBujD,EAAuC,EACvCC,EAAoC,KAGpCC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAA4B,6BAClC,MAAM9xC,EACFpE,WAAAA,CAAY00C,GAER78C,KAAKs+C,sBAAwB,IAAIhe,IAEjCtgC,KAAKu+C,0BAA4B,IAAIje,IAErCtgC,KAAKw+C,6BAA+B,IAAIle,IACxCtgC,KAAKy+C,kBAAoBxD,EAAc/4C,QAAQw6C,eAAe,CAC1D5gD,KAAMwP,EAAmBivC,oCAAsCsC,GAEvE,CACAlpC,IAAAA,CAAK+qC,GACD,OAAOz3C,EAAUjH,UAAM,OAAQ,GAAQ,YAInC,SAFMA,KAAK2+C,mBAEP3+C,KAAKs+C,sBAAsB3M,KAAO,EAAG,CACrC,IAAK,MAAOliC,EAAOmvC,KAAgB5+C,KAAKs+C,sBAAsB5d,UAC1D,IAAK,IAAIx1B,EAAI,EAAGA,EAAI0zC,EAAYviD,QAAS,CACrC,MAAMX,EAAUkjD,EAAY1zC,GAC5B,UAEUwzC,GAAW,EAAI5yC,EAAW2C,mBAAmB/S,GAAU+T,GAC7D1D,EAAIzQ,SAAS,+BAA8B,EAAIwQ,EAAW2C,mBAAmB/S,gBAAsB+T,KAEnGmvC,EAAYZ,OAAO9yC,EAAG,EAC1B,CACA,MAAOtB,GACHmC,EAAIoH,SAAS,4BAA2B,EAAIrH,EAAW2C,mBAAmB/S,gBAAsB+T,IAAS7F,GAEzGlO,EAAQmjD,YAAcnjD,EAAQmjD,YAAc,GAAK,EAC7CnjD,EAAQmjD,WAAa,GACrB9yC,EAAIoH,SAAS,oCAAmC,EAAIrH,EAAW2C,mBAAmB/S,MAClFkjD,EAAYZ,OAAO9yC,EAAG,IAGtBA,GAER,CACJ,OAEElL,KAAK8+C,WACf,CACJ,GACJ,CACAxtC,2BAAAA,CAA4BC,GACxB,IAAIzP,EACJ,IAAIzG,EACJ,IACI,GAAIkW,EAAQuE,YAAY9M,WAAW,KAAM,CACrC,IAAIqd,GAAa,EAAIva,EAAWiD,eAAewC,GAC/C,GAAI8U,GACGA,EAAW04B,kBACX14B,EAAW04B,kBAAoB,EAAG,CACrC,IAAIC,EAAwB34B,EACxB24B,EAAsBC,mBAAuE,QAAjDn9C,EAAKk9C,EAAsBC,wBAAqC,IAAPn9C,OAAgB,EAASA,EAAGzF,QAAU,IAC3IhB,EAASgrB,EAEjB,CACJ,MAEI,EAAInrB,EAAMI,UAAU,qBAE5B,CACA,MAAOsO,IACH,EAAI1O,EAAMI,UAAU,qBACxB,CACA,OAAOD,CACX,CACAma,wBAAAA,CAAyB/F,EAAO8F,GAC5B,OAAOtO,EAAUjH,UAAM,OAAQ,GAAQ,YACnCA,KAAKw+C,6BAA6B7W,IAAIl4B,EAAO8F,SACvCvV,KAAK8+C,aACX,EAAI5jD,EAAMI,UAAU,oCAAqCmU,EAAO8F,EACpE,GACJ,CAOAqB,iBAAAA,CAAkBnH,EAAO8B,EAASugC,EAAS4M,GACvC,OAAOz3C,EAAUjH,UAAM,OAAQ,GAAQ,YAMnC,IAAKyP,EAED,YADA1D,EAAIoH,SAAS,mCAGjB,IAAI+rC,EAAgBl/C,KAAKw+C,6BAA6Bh7C,IAAIiM,GACtD0vC,EAAY5tC,EAAQlV,OACxB,IACI,GAAI8iD,EAAYjB,EACZ,MAAM,IAAI/rC,MAAM,0BAA0BgtC,MAE9C,IAAKD,GAAkBA,GAAiBA,EAAgBjB,EACpD,MAAM,IAAI9rC,MAAM,uCAAuC+sC,MAE3D,MAAME,EAAY,GAClB,IAAIC,EAAkBnB,EACtB,IAAK,IAAIhzC,EAAI,EAAGA,EAAIqG,EAAQlV,OAAQ6O,GAAKm0C,EACjCn0C,EAAIm0C,EAAkB9tC,EAAQlV,OAC9B+iD,EAAU9iD,KAAKiV,EAAQnU,MAAM8N,EAAGA,EAAIm0C,IAGpCD,EAAU9iD,KAAKiV,EAAQnU,MAAM8N,IAGrC,IAAIo0C,GAAU,EAAI3zC,EAAQioC,mBACtB2L,EAAuBH,EAAUthC,KAAI,CAACjI,EAAKqI,KAE3C,IAAItI,EAAS,CACTnE,QAAShC,EACTsvC,iBAAkBd,EAClBuB,YAAaJ,EAAU/iD,OACvBojD,cAAevhC,EACf+gC,iBAAkBK,EAClBxwC,QAAS+G,GAEb,OAAOD,CAAM,IAGjB5V,KAAK0/C,mBAAkB,EAAMH,GAE7B,IAAK,IAAIr0C,EAAI,EAAGA,EAAIq0C,EAAqBljD,QAAS,CAC9C,MAAMuZ,EAAS2pC,EAAqBr0C,GAC9BxP,GAAU,EAAIoQ,EAAW2C,mBAAmBmH,GAClD,UAEU8oC,EAAWhjD,EAAS+T,GAC1B1D,EAAIzQ,SAAS,8BAA8BI,eAAqB+T,KAEhE8vC,EAAqBvB,OAAO9yC,EAAG,EACnC,CACA,MAAOtB,GACHmC,EAAIoH,SAAS,2BAA2BzX,eAAqB+T,IAAS7F,GAEtEgM,EAAOipC,YAAcjpC,EAAOipC,YAAc,GAAK,EAC3CjpC,EAAOipC,WAAa,GACpB9yC,EAAIoH,SAAS,mCAAmCzX,KAChD6jD,EAAqBvB,OAAO9yC,EAAG,IAG/BA,GAER,CACJ,CAEAlL,KAAKs+C,sBAAsB3W,IAAIl4B,EAAO,UAChCzP,KAAK8+C,WACf,CACA,MAAOj3C,IACH,EAAI3M,EAAMI,UAAU,iCACpB,EAAIJ,EAAMI,UAAUuM,SACdiqC,EAAQriC,EAAO8B,EACzB,CACJ,GACJ,CACAM,sBAAAA,CAAuBnW,GACnB,OAAOuL,EAAUjH,UAAM,OAAQ,GAAQ,YAEnCA,KAAK0/C,mBAAkB,EAAO,CAAChkD,IAC/B,IAAIikD,EAAc,IAAIrf,IAClBsf,EAAalkD,EAAQ+V,QAEzBzR,KAAKu+C,0BAA0BzhD,SAAQ,CAAC+iD,EAAUpwC,KAC1CA,GAAS/T,EAAQ+V,SACjBouC,EAAS/iD,SAASjB,IACd,GAAIA,EAAK6V,cAAcutC,iBAAkB,CACrC,IAAIa,EAAeH,EAAYn8C,IAAI3H,EAAK6V,cAAcutC,kBACjDa,IACDA,EAAe,IAAIv1C,OAEvBu1C,EAAaxjD,KAAKT,GAClB8jD,EAAYhY,IAAI9rC,EAAK6V,cAAcutC,iBAAkBa,EACzD,IAER,KAEJ,EAAI5kD,EAAMI,UAAU,4CACpB,IAAIsW,EAAc,CACdsE,gBAAgB,GAIpB,GAAIxa,EAAQgW,cAAcutC,iBAAkB,CACxCrtC,EAAYsE,gBAAiB,EAC7B,IAAI4pC,EAAeH,EAAYn8C,IAAI9H,EAAQgW,cAAcutC,kBAEzD,GAAqB,OAAjBa,QAA0C,IAAjBA,OAA0B,EAASA,EAAazjD,OAAQ,CACjF,IAAI0jD,EAAc,IAAIx/B,IAMtB,GALAu/B,EAAahjD,SAASjB,SACuBqH,IAArCrH,EAAK6V,cAAc+tC,eACnBM,EAAYC,IAAInkD,EAAK6V,cAAc+tC,cACvC,IAEAM,EAAYpO,MAAQj2C,EAAQgW,cAAc8tC,YAAa,CAEvDM,EAAajT,MAAK,CAACrrC,EAAGsjB,KACbtjB,EAAEkQ,cAAc+tC,eAAmD,IAAlCj+C,EAAEkQ,cAAc+tC,gBAC9C36B,EAAEpT,cAAc+tC,eAAmD,IAAlC36B,EAAEpT,cAAc+tC,cAI9C,EAHAj+C,EAAEkQ,cAAc+tC,cAAgB36B,EAAEpT,cAAc+tC,gBAM/D,IAAIQ,EAAcH,EAAa5yB,QAAO,CAACgzB,EAASrkD,KAC5CqkD,EAAQ5jD,KAAKT,EAAK6V,cAAc5C,SACzBoxC,IACR,IACCC,EAAgBL,EAAa5yB,QAAO,CAACkzB,EAAWvkD,KAChDukD,EAAU9jD,KAAKT,EAAKoV,WACbmvC,IACR,IACHxuC,EAAYsE,gBAAiB,EAC7BtE,EAAY6+B,aAAewP,EAAY5iD,KAAK,IAC5CuU,EAAYE,sBAAwBquC,EAEpC,IAAIE,EAAergD,KAAKu+C,0BAA0B/6C,IAAIo8C,GAClDS,IACAA,EAAeA,EAAaniD,QAAQrC,IACxBskD,EAAchhD,SAAStD,EAAKoV,aAExCjR,KAAKu+C,0BAA0B5W,IAAIiY,EAAYS,UAE7CrgD,KAAK8+C,WACf,CACJ,CACJ,CAEA,OAAOltC,CACX,GACJ,CAIA8tC,iBAAAA,CAAkBY,EAAWC,GACzB,OAAOt5C,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,IADA,EAAI9E,EAAMI,UAAU,wBAChBglD,EAAW,CACX,IAAIE,EAAiBD,EACjBE,EAAcD,EAAetiD,QAAQxC,IACrC,IAAIkkD,EAAalkD,EAAQ+V,QACrBivC,GAAS,EACTC,EAAiB3gD,KAAKs+C,sBAAsB96C,IAAIo8C,GAQpD,OAPmB,OAAnBe,QAA8C,IAAnBA,GAAqCA,EAAe7jD,SAAS8jD,IAChFA,EAAc3B,kBAAoBvjD,EAAQujD,kBACvC2B,EAAcpB,aAAe9jD,EAAQ8jD,aACrCoB,EAAcnB,eAAiB/jD,EAAQ+jD,gBAC1CiB,GAAS,EACb,IAEGA,CAAM,IAEjB,GAAID,EAAYpkD,OAAS,EAAG,CACxB,IAAIujD,EAAaa,EAAY,GAAGhvC,QAC5BovC,EAAY7gD,KAAKs+C,sBAAsB96C,IAAIo8C,GAC1CiB,IACDA,EAAY,IAAIt2C,OAEpBs2C,EAAYA,EAAUC,OAAOL,GAC7BzgD,KAAKs+C,sBAAsB3W,IAAIiY,EAAYiB,IAC3C,EAAI3lD,EAAMI,UAAU,wCAAyCulD,EACjE,CACJ,KACK,CACD,IAAIE,EAAoBR,EACpBE,EAAcM,EAAkB7iD,QAAQxC,IACxC,IAAIkkD,EAAalkD,EAAQ+V,QACrBivC,GAAS,EACTM,EAAoBhhD,KAAKu+C,0BAA0B/6C,IAAIo8C,GAM3D,OALsB,OAAtBoB,QAAoD,IAAtBA,GAAwCA,EAAkBlkD,SAAS8jD,IACzFA,EAAc3vC,WAAavV,EAAQuV,YACnCyvC,GAAS,EACb,IAEGA,CAAM,IAEjB,GAAID,EAAYpkD,OAAS,EAAG,CACxB,IAAIujD,EAAaa,EAAY,GAAGhvC,QAC5BwvC,EAAejhD,KAAKu+C,0BAA0B/6C,IAAIo8C,GACjDqB,IACDA,EAAe,IAAI12C,OAEvB02C,EAAeA,EAAaH,OAAOL,GACnCzgD,KAAKu+C,0BAA0B5W,IAAIiY,EAAYqB,IAC/C,EAAI/lD,EAAMI,UAAU,yCAA0C2lD,EAClE,CACJ,CACJ,GACJ,CACAnC,SAAAA,GACI,OAAO73C,EAAUjH,UAAM,OAAQ,GAAQ,aACnC,EAAI9E,EAAMI,UAAU,kCACd0E,KAAKy+C,kBAAkBzc,QAAQmc,EAAsBn+C,KAAKu+C,iCAC1Dv+C,KAAKy+C,kBAAkBzc,QAAQoc,EAAmBp+C,KAAKs+C,6BACvDt+C,KAAKy+C,kBAAkBzc,QAAQqc,EAA2Br+C,KAAKw+C,6BACzE,GACJ,CACAG,gBAAAA,GACI,OAAO13C,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,IAAIkhD,QAAkBlhD,KAAKy+C,kBAAkB5tC,QAAQstC,GAEjDn+C,KAAKu+C,0BADL2C,GAIiC,IAAI5gB,IAGzC,IAAI6gB,QAAmBnhD,KAAKy+C,kBAAkB5tC,QAAQutC,GAElDp+C,KAAKs+C,sBADL6C,GAI6B,IAAI7gB,IAGrC,IAAI7wB,QAAczP,KAAKy+C,kBAAkB5tC,QAAQwtC,GAE7Cr+C,KAAKw+C,6BADL/uC,GAIoC,IAAI6wB,GAEhD,GACJ,EAEJzlC,EAAQ0R,wBAA0BA,C,wDC1YlC5R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQumD,yBAA2BvmD,EAAQyC,cAAW,EACtD,IAAI+jD,EAAmB3mD,EAAQ,MAC/BC,OAAOC,eAAeC,EAAS,WAAY,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO69C,EAAiB/jD,QAAU,IACpH,IAAIgkD,EAAkB5mD,EAAQ,OAC9BC,OAAOC,eAAeC,EAAS,2BAA4B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO89C,EAAgBF,wBAA0B,G,qCCNvI1mD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiJ,8BAA2B,EACnC,MAAMQ,EAAoB5J,EAAQ,OAC5B6E,EAAa7E,EAAQ,OACrBwzB,EAAexzB,EAAQ,OACvBiR,EAAUjR,EAAQ,OAClB6mD,EAA0B7mD,EAAQ,OACxC,MAAMoJ,UAAiCQ,EAAkBH,gBACrD2qB,OAAAA,GACI,IAAIhtB,EAAIC,EAAIC,EAAI0G,EAChB,OAAI1I,KAAKywB,cAA+O,QAA9N1uB,EAA+K,QAAxKD,EAAgD,OAA3Cy/C,EAAwBC,qBAAsE,IAA3CD,EAAwBC,oBAA4B,EAASD,EAAwBC,eAAeC,cAA2B,IAAP3/C,OAAgB,EAASA,EAAGhG,YAA0B,IAAPiG,EAAgBA,EAAK,wBAC1QmsB,EAAaxE,eAAeY,QAAQE,cAEtCxqB,KAAKywB,cAA8O,QAA7N/nB,EAA8K,QAAvK1G,EAAgD,OAA3Cu/C,EAAwBC,qBAAsE,IAA3CD,EAAwBC,oBAA4B,EAASD,EAAwBC,eAAeE,aAA0B,IAAP1/C,OAAgB,EAASA,EAAGlG,YAA0B,IAAP4M,EAAgBA,EAAK,uBAC9QwlB,EAAaxE,eAAeY,QAAQC,aAGpC2D,EAAaxE,eAAeW,OAAOV,sBAElD,CACAxhB,WAAAA,CAAYw5C,GACRtuB,QACArzB,KAAKywB,WAAakxB,EAAsBlxB,WACxCkxB,EAAsBC,QAAQ9kD,SAAQ,CAAChC,EAAO+c,KAC1C7X,KAAKqgC,YAAYsH,IAAI9vB,EAAK/c,EAAM,IAEpCkF,KAAKwiB,KAAOm/B,EAAsBn/B,IACtC,CACAq/B,cAAAA,CAAetkC,EAAW2B,GACtBlf,KAAKqgC,YAAYsH,IAAIpqB,EAAW2B,EACpC,CACAyR,MAAAA,GACI,IAAI7uB,EACJ,OAAOosB,EAAavE,wBAAqD,QAA1B7nB,EAAK9B,KAAKywB,kBAA+B,IAAP3uB,EAAgBA,EAAK,GAC1G,CACAggD,gBAAAA,GACI,OAAO76C,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAM+hD,EAAc/hD,KAAKqgC,YAAY15B,SAASiB,OAAO9M,MACrD,IAAKinD,EACD,MAAM,IAAIxiD,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,eAE5E,OAAO2lC,EAAYx5B,YACvB,GACJ,CACAhF,UAAAA,CAAWC,EAAmB/H,GAC1B,OAAOxU,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EAER,IADA,EAAI4J,EAAQrQ,UAAU,8BAA+BC,KAAKC,UAAUgoB,KAC/DA,EACD,MAAM,IAAIjkB,EAAWI,gBAAgBJ,EAAWK,wBAAwBkF,mBAE5E9E,KAAK0iB,SAAWc,EAAkB2M,eAAeZ,SACjD,IAAIF,EAA0B7L,EAAkB2M,eAChD,IACI,GAAId,EAAwBI,SAAU,CAClC,IAAI1S,EAAkBsS,EAAwBI,SACzC7zB,MAAKC,GAAsB,oBAAdA,EAAKC,OACvB,MAAM8vC,EAAyD,QAA7C9pC,EAAKib,EAAgB8uB,0BAAuC,IAAP/pC,EAAgBA,EAAK,GACtFgqC,EAAyD,QAA7C/pC,EAAKgb,EAAgBa,0BAAuC,IAAP7b,EAAgBA,EAAK,GAC5F,IAAI1G,EACJ,GAAIuwC,EAASvvC,OAASyvC,EAASzvC,SAAW,EAAG,CACzC,MAAM0vC,EAAiC,IAApBH,EAASvvC,OAAeuvC,EAAS,GAAKE,EAAS,GAC5DE,EAAiBhsC,KAAKqgC,YAAY78B,IAAIuoC,EAAW9vC,WAGvD,GAFA+D,KAAKyV,YAAYs2B,EAAW9vC,YAExB+vC,EAIA,MAAM,IAAIzsC,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,kCAHvF/gB,QAAe2E,KAAKgiD,qBAAqBhW,EAKjD,CACIhsC,KAAK8xB,uBAAyBz2B,GAC9B2E,KAAK8xB,sBAAsBz2B,EAAQ2E,KAE3C,CACJ,CACA,MAAO4J,GACH,IAAI4J,EAAOjU,EAAWK,wBAAwBwc,cAE1CxS,aAAiBrK,EAAWI,kBAC5B6T,EAAO5J,EAAM4J,KACH5J,EAAM2H,SAEhBvR,KAAK8xB,uBACL9xB,KAAK8xB,sBAAsB,CACvBxa,UAAW,KACXpG,OAAQ,gBACRxV,QAAS,CACL8X,KAAMA,IAItB,CACJ,GACJ,CACAwuC,oBAAAA,CAAqB55C,GACjB,OAAOnB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EACR,IAAI1G,EAAS,CACT6V,OAAQ,UACRoG,UAAWtJ,KAAKC,MAAMgE,WACtBvW,QAAS,CACLwjB,OAAQ,CACJgT,SAAwC,QAA7BpwB,EAAKJ,UAAUwwB,gBAA6B,IAAPpwB,EAAgBA,EAAK,IACrEzD,QAAS6vB,EAAavE,uBAAyB3pB,KAAKywB,WACpDzL,WAA+C,QAAlCjjB,EAAK/B,KAAK8hD,0BAAuC,IAAP//C,EAAgBA,EAAK,QAC5E+uB,mBAAoB,GAExBn1B,UAAW,KAGfgwC,EAAe,CACf7vC,KAAM,kBACNC,SAAU,IAId,OAFAV,EAAOK,QAAQC,UAAUW,KAAKqvC,GAC9BA,EAAa5vC,SAASO,WAAW0D,KAAKyI,WAAWL,IAC1C/M,CACX,GACJ,CACAoN,UAAAA,CAAWL,GACP,OAAOnB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOoI,EAASK,YACpB,GACJ,CACA2J,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,kBAC7BwH,QAAQgwC,IAAI,IAAIx3C,KAAKqgC,YAAY15B,UAAUmX,KAAI1V,GAAYA,EAASgK,eAC9E,GACJ,CACA6vC,YAAAA,GACIjiD,KAAKogC,mBAAmBtjC,SAAQwiB,GAAYA,MAC5Ctf,KAAKogC,mBAAqB,EAC9B,CACApgB,cAAAA,CAAeD,EAAa2S,GACxB,MAAMpW,EAAO3hB,OAAO2hB,KAAKyD,EAAYjX,YAC/Bo5C,EAAgC,IAAhB5lC,EAAKjgB,OAC3B,IAAK6lD,EAED,YADAxvB,EAAgB,MAGpB,MAAMtqB,EAAWpI,KAAKwgC,kBAAkBlkB,EAAK,IAC7C,IAAKlU,EACD,OAAOsqB,EAAgB,MAC3BtqB,EAASK,aAAaT,MAAKY,IACvB,IAAI9G,EACJ,IAAI1F,EAAyF,QAA9E0F,EAAiB,OAAZ8G,QAAgC,IAAZA,OAAqB,EAASA,EAAQjM,iBAA8B,IAAPmF,EAAgBA,EAAK,CAAC,IACvHie,EAAYjX,WAAWwT,EAAK,IAAIvgB,SAAS,GAAGoD,SAAS/C,EAAQ,IAC7Ds2B,EAAgB3S,GAGhB2S,EAAgB,KACpB,IACDve,OAAMvK,IACL8oB,EAAgB,KAAK,GAE7B,CACAyZ,mBAAAA,CAAoB5uB,EAAW4kC,GAC3B,OAAOl7C,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EACR,IACI,IAAIg/B,EAAiD,QAAjCj/B,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,OAAgB,EAASA,EAAGkW,kBAAkB,kBAC3G,GAAImqC,GACIphB,EAAaj4B,WAAWyU,GAAWxhB,SAASoD,SAASgjD,GACrD,OAGR,IAAI/5C,EAAWpI,KAAKwgC,kBAAkBjjB,GACtC,GAAInV,EAAU,CACV,IAAIg6C,QAAmBpiD,KAAKgiD,qBAAqB55C,GACjD,GAAMg6C,GAAcrhB,EAAc,CAC9B,IAAIshB,EAAqBD,EAAW1mD,QAAQC,UACxC2mD,EAAuBD,EAAmB,GAAGtmD,SAAS,GAC1DglC,EAAaj4B,WAAWyU,GAAWxhB,SAAWumD,EAAqB3lD,UACnEokC,EAAaj4B,WAAWyU,GAAW1gB,MAAQylD,EAAqBzlD,MAChEkkC,EAAaj4B,WAAWyU,GAAWiH,YAASthB,EAC5C69B,EAAaj4B,WAAWyU,GAAW3gB,QAAU0lD,EAAqB1lD,QAC5B,QAArCmF,EAAK/B,KAAKyuB,6BAA0C,IAAP1sB,GAAyBA,EAAG8B,KAAK7D,KAAM+gC,EACzF,CACJ,CACJ,CACA,MAAOn3B,SACG5J,KAAKoS,YACf,CACJ,GACJ,CACAqD,WAAAA,CAAY8H,GACR,IAAIzb,EAAIC,EACR,IAAK,IAAI6sC,KAAkB5uC,KAAKqgC,YACoB,QAA/Cv+B,EAAK9B,KAAKqgC,YAAY78B,IAAIorC,UAAoC,IAAP9sC,GAAyBA,EAAGyd,iBAE3C,QAA5Cxd,EAAK/B,KAAKwgC,kBAAkBjjB,UAA+B,IAAPxb,GAAyBA,EAAGsnB,2BAA2B84B,IACpGA,EACAniD,KAAKmsC,oBAAoB5uB,EAAW4kC,GAAYhuC,OAAMtM,QAItD7H,KAAKiiD,cACT,GAER,CACAM,yBAAAA,CAA0BhlC,EAAWxgB,GACjC,IAAIqL,EAAWpI,KAAKqgC,YAAY78B,IAAI+Z,GACpC,QAAKnV,GAGEA,EAASogB,cAAczrB,EAClC,EAEJlC,EAAQiJ,yBAA2BA,C,mCC3NnCnJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,wDCD1CJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQymB,iBAAc,EACtB,MAAM/hB,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBo6B,EAAUp6B,EAAQ,OAClB0/B,EAAgB1/B,EAAQ,OAC9B,MAAM4mB,EACFnZ,WAAAA,CAAY+W,EAAS1hB,OAAO6qC,UAAUma,KAElCxiD,KAAKyiD,sBAAwB,KAgB7BziD,KAAKkf,OAASA,CAClB,CACAwjC,eAAAA,GACI,OAAOz7C,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAM2iD,QAAmB3iD,KAAKsS,UAC9B,IAAIpJ,EAAYy5C,EAAW5mD,SAAS,GAAGmN,UACvC,OAAOA,CACX,GACJ,CACAyxB,oBAAAA,CAAqBC,EAASC,EAAeC,EAAaC,EAAwBC,EAA8BtY,GAC5G,OAAOzb,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIi7B,EAAe,GACnBF,EAAuBj+B,SAAQjB,IACvBA,EAAKI,YAAcsD,EAAWuH,iBAC9Bm0B,EAAa3+B,QAAQT,EAAKkB,OAC9B,IAEJ,IAAIJ,EAAY,GACZE,EAAQ,CAAC,EACb,GAA2B,GAAvBo+B,EAAa5+B,OACb,OAEJ,MAAMumD,QAAqB5iD,KAAK0iD,kBAehC,GAdAznB,EAAan+B,SAASo+B,IAClB,IAAIp5B,GACe,EAAI6J,EAAQqY,YAAYkX,GAA3C,IACIC,EAAkBH,EAA6B5+B,QAAQR,MAAMoB,GAC5B,MAAzBA,EAAYo+B,UACZp+B,EAAYq+B,mBAAqBH,IAEzCC,IACAx+B,EAAUL,KAAK4+B,EAAW,IAAMC,EAAgB/+B,SAChDS,EAAMq+B,GAAY,CACdhyB,UAAgD,QAApCpH,EAAKq5B,EAAgBjyB,iBAA8B,IAAPpH,EAAgBA,EAAK8gD,GAErF,IAEAjmD,GAAaA,EAAUN,OAAS,EAAG,CACnC,IAAIu/B,EAAoB,CACpB3/B,UAAWsD,EAAWuH,gBACtBnK,UAAWA,EACXC,QAAS,IAAIw9B,EAAcyoB,YAC3BhmD,MAAOA,GAEX,OAAO++B,CACX,CACA,MACJ,CACA,MAAOhyB,GACH,MAAMA,CACV,CACJ,GACJ,CACAsI,cAAAA,GACI,OAAI,EAAI4iB,EAAQU,UAAU,UACfx1B,KAAKsS,UAET9K,QAAQD,SACnB,CACAu7C,YAAAA,GACI,OAAO9iD,KAAKkf,MAChB,CACAhL,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,UACUA,KAAKkS,kBACX,EAAIvG,EAAQrQ,UAAU,4BAA6BC,KAAKC,UAAUiO,IAClE,MAAMyH,EAASzH,EAAQyH,OACvB,IAAI7V,EACJ,GAAIoO,EAAQyd,cAAgBlnB,KAAK8iD,eAAgB,CAC7C,IAAIj6B,EAAiBpf,EAAQyd,aAC7B,OAAQhW,GACJ,IAAK,2BACD,IAAI4X,EACJ,GAAI9oB,KAAK8iD,eAAe/tB,SAAS,uBAC7BjM,QAAyB9oB,KAAK8iD,eAAe/tB,SAAS,uBAAuBhM,gBAAgBF,OAE5F,KAAI7oB,KAAK8iD,eAAe/tB,SAAS,4BAIlC,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAHxE0J,QAAyB9oB,KAAK8iD,eAAe/tB,SAAS,4BAA4BC,qBAAqBnM,EAI3G,CAEAxtB,EAAS,CACL6V,OAAQ,2BACR7V,OAA6B,OAArBytB,QAAkD,IAArBA,OAA8B,EAASA,EAAiBG,WAEjG,MACJ,IAAK,qCACD,IAAIgM,EACJ,GAAIj1B,KAAK8iD,eAAe/tB,SAAS,iCAC7BE,QAAyBj1B,KAAK8iD,eAAe/tB,SAAS,iCAAiCG,0BAA0BrM,OAEhH,KAAI7oB,KAAK8iD,eAAe/tB,SAAS,sCAIlC,MAAM,IAAIx1B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,sBAHxE6V,QAAyBj1B,KAAK8iD,eAAe/tB,SAAS,sCAAsCI,+BAA+BtM,EAI/H,CACAxtB,EAAS,CACL6V,OAAQ,qCACR7V,OAAQ45B,EAAiBG,QAE7B,MACJ,IAAK,kBACD,MAAMC,QAAqBr1B,KAAK8iD,eAAe/tB,SAAS,mBAAmB3rB,YAAYyf,GACvFxtB,EAAS,CACL6V,OAAQ,kBACR7V,OAAQg6B,EAAapM,WAEzB,MACJ,IAAK,0BACD,MAAMqM,QAA6Bt1B,KAAK8iD,eAAe/tB,SAAS,2BAA2BQ,oBAAoB1M,GAC/GxtB,EAAS,CACL6V,OAAQ,0BACR7V,OAAQi6B,EAAqBrM,WAEjC,MAEZ,CACA,OAAO5tB,CACX,CACA,MAAOwM,GAEH,MADA,EAAI8D,EAAQrQ,UAAU,0BAA2BuM,GAC3CA,CACV,CACJ,GACJ,CACAyK,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EACJ,OAAsC,QAA9BA,EAAK9B,KAAK8iD,sBAAmC,IAAPhhD,OAAgB,EAASA,EAAGizB,SAAS,oBAAoBziB,SAC3G,GACJ,CACAwpB,aAAAA,GACI,OAAO97B,KAAKsS,SAChB,CACAywC,wBAAAA,CAAyBC,GACrB,IAAIlhD,EAAIC,GAC2B,QAA9BD,EAAK9B,KAAK8iD,sBAAmC,IAAPhhD,OAAgB,EAASA,EAAGizB,SAAS,sBAC5E,EAAIppB,EAAQrQ,UAAU,uCACS,QAA9ByG,EAAK/B,KAAK8iD,sBAAmC,IAAP/gD,GAAyBA,EAAGgzB,SAAS,mBAAmB1V,GAAG,UAAW1K,IACzGquC,EAAsBruC,EAAM,MAIhC,EAAIhJ,EAAQrQ,UAAU,oCAE9B,CACA+tB,yBAAAA,CAA0BoF,GACtB,IAAI3sB,EACJqhB,QAAQpX,IAAI,sBAAuB,OAC/B/L,KAAK8iD,eAAezjC,KACpBrf,KAAKyiD,sBAAyBv5C,IAC1Bia,QAAQpX,IAAI,0BAA2BiC,KAAKC,MAAO,MAAO/E,GACtDA,GACAulB,GACJ,EAE2B,QAA9B3sB,EAAK9B,KAAK8iD,sBAAmC,IAAPhhD,GAAyBA,EAAGud,GAAG,iBAAkBrf,KAAKyiD,uBAErG,CACAljC,cAAAA,GACI,IAAIzd,EACA9B,KAAKyiD,wBAC0B,QAA9B3gD,EAAK9B,KAAK8iD,sBAAmC,IAAPhhD,GAAyBA,EAAGyd,eAAe,iBAAkBvf,KAAKyiD,uBAEjH,EAEJ5nD,EAAQymB,YAAcA,C,qCC7MtB,IAAI1e,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAqBG,E,qCCf1CF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqJ,uBAAoB,EAC5B,MAAMM,EAAgB9J,EAAQ,OACxBwzB,EAAexzB,EAAQ,OACvBiR,EAAUjR,EAAQ,OACxB,MAAMwJ,UAA0BM,EAAcP,YAC1C6qB,OAAAA,GACI,OAAOZ,EAAaxE,eAAeU,GAAGP,aAC1C,CACA1hB,WAAAA,GACIkrB,QACArzB,KAAKywB,WAAa,kBAClBzwB,KAAKk3B,cAAgB,+CACzB,CACAvG,MAAAA,GACI,OAAOzC,EAAarE,aACxB,CACAtG,UAAAA,CAAWC,EAAmB/H,GAC1B,IAAI3Z,EACAmhD,EACAz/B,GAAqBA,EAAkB2M,iBACvC8yB,GAAiB,EAAIt3C,EAAQ4qB,2BAA2B57B,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAG+G,EAAkB2M,gBAAiB,CAAEzT,SAAU,WAE3I,IAAIwmC,GAAQ,EAAIv3C,EAAQ6qB,yBAAyBysB,EAAgI,QAA/GnhD,EAA2B,OAAtB0hB,QAAoD,IAAtBA,OAA+B,EAASA,EAAkByM,oBAAiC,IAAPnuB,EAAgBA,EAAK,SAC9M,EAAI6J,EAAQykB,kCAAkC8yB,EAClD,EAEJroD,EAAQqJ,kBAAoBA,C,qCC3B5B,IAAIpC,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,EAAIC,EADhBzV,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8rC,cAAgBA,EACxB9rC,EAAQoS,QAAUA,EAClBpS,EAAQyG,KAAOA,EACfzG,EAAQsoD,oBAAsBA,EAC9BtoD,EAAQuoD,WAAaA,EACrBvoD,EAAQwoD,qBAAuBA,EAC/BxoD,EAAQkqB,eAAiBA,EACzB,MAAM9Y,EAAQvR,EAAQ,OAChBQ,EAAQR,EAAQ,OAChB6E,EAAa7E,EAAQ,OACrBs8B,EAAYt8B,EAAQ,MAC1B,IAAI4oD,EAAa,CAAC,EAClB,IACI,IAAIC,EAAetkD,SAASmqB,KAAKnX,WACjCqxC,EAAaE,EAAmBD,EACpC,CACA,MAAO17C,GAAK,CACZ,IAAI47C,EAAc,UAIlB,IAHmB,OAAfH,QAAsC,IAAfA,OAAwB,EAASA,EAAWI,oBACnED,EAAqD,QAAtC3hD,EAAKwhD,EAAWI,wBAAqC,IAAP5hD,EAAgBA,EAAK,WAElE,YAAhB2hD,EAA2B,CAC3B,MAAMjmD,GAAS,EAAIyO,EAAMy6B,aACzB+c,EAAuM,QAAxL/6C,EAAsI,QAAhI1G,EAAgF,QAA1ED,EAAgB,OAAXvE,QAA8B,IAAXA,OAAoB,EAASA,EAAOmmD,gBAA6B,IAAP5hD,OAAgB,EAASA,EAAG6hD,cAA2B,IAAP5hD,OAAgB,EAASA,EAAGkwB,gBAA6B,IAAPxpB,EAAgBA,EAAK,SACxO,CACA,IAAIm7C,EAAgB,MAIpB,IAHmB,OAAfP,QAAsC,IAAfA,OAAwB,EAASA,EAAWQ,mBACnED,EAAgBP,EAAWQ,kBAE1BD,EAAe,CAChB,MAAMrmD,GAAS,EAAIyO,EAAMy6B,aACzBmd,EAAwM,QAAvL1zC,EAAsI,QAAhID,EAAgF,QAA1EvH,EAAgB,OAAXnL,QAA8B,IAAXA,OAAoB,EAASA,EAAOmmD,gBAA6B,IAAPh7C,OAAgB,EAASA,EAAGi7C,cAA2B,IAAP1zC,OAAgB,EAASA,EAAGvF,eAA4B,IAAPwF,EAAgBA,EAAK,KACzO,CAKA,SAASw2B,KAAiBod,GACtB,OAAOA,EAAU5kD,SAASskD,EAC9B,CAIA,SAASx2C,IACL,IAAInL,EACJ,MAAuB,YAAhB2hD,MAAkE,QAAjC3hD,GAAK,EAAImK,EAAMy6B,oBAAiC,IAAP5kC,OAAgB,EAASA,EAAGolC,qBACjH,CACA,SAAS5lC,IAEL,OAAO6hD,KAAyBl2C,GACpC,CAIA,SAASk2C,IACL,IAAIrhD,EACJ,MAAMkiD,KAAyD,QAAjCliD,GAAK,EAAImK,EAAMy6B,oBAAiC,IAAP5kC,OAAgB,EAASA,EAAGmiD,iBACnG,OAAQh3C,KAAa+2C,IAAsC,YAAhBP,CAC/C,CAIA,SAASL,IACLc,EAAU,iBAAkB,CAAC,EACjC,CAMA,SAASb,EAAqBc,EAAMpjD,GAChC,MAAMlD,EAAM,IAAIE,IAAIomD,GACpB,GAAqB,UAAjBtmD,EAAI07B,UAAyC,WAAjB17B,EAAI07B,SAAuB,CACvD,GAAIx4B,EACA,OAAOA,IAEX,MAAM,IAAIxB,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,kCAAkCve,IAC7H,CACA,GAAqB,SAAjBA,EAAIqB,SAAqB,CACzB,GAAI6B,EACA,OAAOA,IAEX,MAAM,IAAIxB,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,8BAA8Bve,IACzH,CACA,MAAMumD,EAAWvmD,EAAII,SAAWJ,EAAIwmD,OAChCC,KAAcC,EAAe,OAC7BL,EAAU,uBAAwB,CAAEM,UAAWJ,KAG/C,EAAIptB,EAAU52B,eAAe,eAAiBgkD,EAEtD,CACA,SAASE,IACL,IACI,MAAM9mD,GAAS,EAAIyO,EAAMy6B,aACzB,QAAKlpC,IAGmB,MAAjBA,EAAOinD,QAAkBjnD,IAAWA,EAAOinD,OACtD,CACA,MAAO58C,GACH,OAAO,CACX,CACJ,CACA,SAASq8C,EAAUQ,EAAWC,GAC1B,IACI,MAAMnnD,GAAS,EAAIyO,EAAMy6B,aACzB,IAAKlpC,EACD,MAAM,IAAI+B,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,4DAE3F,QAAoClZ,IAAhC1F,EAAO0pC,sBACP,EAAIhsC,EAAMI,UAAU,YAAaopD,EAAWC,GAC5CnnD,EAAO0pC,qBAAqBgd,UAAUQ,EAAWnpD,KAAKC,UAAUmpD,SAE/D,GAAInnD,EAAOonD,UAAY,WAAYpnD,EAAOonD,UAC3C,EAAI1pD,EAAMI,UAAU,YAAaopD,EAAWC,GAC5CnnD,EAAOonD,SAASC,OAAOtpD,KAAKC,UAAU,CAAEkpD,UAAWA,EAAWC,UAAWA,SAExE,KAAIL,IAOL,MAAM,IAAI/kD,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,2BAPtE,CACjB,MAAM0oC,EAAgB,IAChBvzC,EAAUhW,KAAKC,UAAU,CAAEkpD,UAAWA,EAAWC,UAAWA,KAClE,EAAIzpD,EAAMI,UAAU,YAAaopD,EAAWC,GAC5CnnD,EAAOinD,OAAOM,YAAYxzC,EAASuzC,EACvC,CAGA,CACJ,CACA,MAAOj9C,IACH,EAAI3M,EAAMiY,UAAU,sCAAsCtL,IAC9D,CACJ,CACA,SAAS27C,EAAmBD,GACxBA,EAAeA,EAAa1uC,QAAQ,KAAM,IAC1C,IAAI7D,EAAS,CAAC,EACd,IAAKuyC,EAAalnD,OACd,OAAO2U,EAEX,GAAIuyC,EAAat3B,QAAQ,KAAO,GAAKs3B,EAAat3B,QAAQ,KAAO,EAE7D,OADAjb,EAAOg0C,MAAQC,EAAc1B,GACtBvyC,EAEX,IAAIk0C,EAAS3B,EAAat3B,QAAQ,KAClC,GAAIi5B,GAAU,EAAG,CACb,IAAIC,EAAY5B,EAAa6B,OAAO,EAAGF,GACvCl0C,EAAOg0C,MAAQC,EAAcE,GAC7B5B,EAAeA,EAAa6B,OAAOF,EAAS,EAChD,CACA,IAAIG,EAAeC,EAAoB/B,GACvC,IAAK,IAAIvgD,KAAKqiD,EACVr0C,EAAOhO,GAAKqiD,EAAariD,GAE7B,OAAOgO,CACX,CACA,SAASi0C,EAAcM,GACnB,IAEI,OADAA,EAAaA,EAAW1wC,QAAQ,MAAO,OAChCsgC,mBAAmBoQ,EAC9B,CACA,MAAO19C,GACH,OAAO09C,CACX,CACJ,CACA,SAASD,EAAoBE,GACzB,IAAIx0C,EAAS,CAAC,EACd,IAAKw0C,EAAYnpD,OACb,OAAO2U,EAEX,IACI9F,EAAGu6C,EAAOC,EAAWC,EADrBC,EAAoBJ,EAAYtoD,MAAM,KAE1C,IAAKgO,EAAI,EAAGA,EAAI06C,EAAkBvpD,OAAQ6O,IACtCu6C,EAAQG,EAAkB16C,GAAGhO,MAAM,KACnCwoD,EAAYT,EAAcQ,EAAM,IAChCE,EAAyB,MAAZF,EAAM,GAAa,KAAOR,EAAcQ,EAAM,IAC3Dz0C,EAAO00C,GAAaC,EAExB,OAAO30C,CACX,CACA,SAAS+T,EAAe8gC,EAAIC,GACN,kBAAPD,IACPA,EAAK,IACS,kBAAPC,IACPA,EAAK,IACT,IAEItkD,EAAG0J,EAAG66C,EAAIC,EAFVC,EAASJ,EAAGhxC,QAAQ,aAAc,IAAI3X,MAAM,KAC5CgpD,EAASJ,EAAGjxC,QAAQ,aAAc,IAAI3X,MAAM,KAGhD,IADAsE,EAAIm+B,KAAKwmB,IAAIF,EAAO5pD,OAAQ6pD,EAAO7pD,QAC9B6O,EAAI,EAAGA,EAAI1J,EAAG0J,IAGf,GAFA66C,EAAKrhC,SAASuhC,EAAO/6C,KAAO,EAC5B86C,EAAKthC,SAASwhC,EAAOh7C,KAAO,EACxB66C,IAAOC,EAEX,OAAID,EAAKC,EACE,GACH,EAEZ,OAAO,CACX,CACA,SAASzB,EAAe6B,GACpB,OAAOrhC,EAAe8+B,EAAeuC,IAAQ,CACjD,C,qCC3MY1rD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqK,uBAAoB,EAC5B,MAAMgD,EAASxN,EAAQ,OACvB,MAAMwK,EACFiD,WAAAA,CAAYC,GACRpI,KAAKoI,SAAWA,CACpB,CACAK,UAAAA,CAAWF,GACP,IAAIzG,EAAIC,EAAIC,EAAI0G,EAAIC,EAAIuH,GACxB,EAAIhI,EAAO5M,UAAU,wCAAyCiN,IAC9D,EAAIL,EAAO5M,UAAU,2CAA4CC,KAAKC,UAA2C,QAAhCsG,EAAK9B,KAAKoI,SAASS,eAA4B,IAAP/G,OAAgB,EAASA,EAAGgH,aACrJ,IAAIF,EAAgI,QAArH5G,EAAsC,QAAhCD,EAAK/B,KAAKoI,SAASS,eAA4B,IAAP9G,OAAgB,EAASA,EAAG+G,WAAWZ,EAAOlB,2BAAwC,IAAPhF,OAAgB,EAASA,EAAGjG,SAASmC,QAAO,SAAU0K,GAC9L,OAAOA,EAAQI,WAAWT,EAC9B,IAAG,GAEH,IADA,EAAIL,EAAO5M,UAAU,wCAAyCC,KAAKC,UAAUoN,KACxEA,EAID,OAEJ,MAAMK,EAAeL,EAAQ1L,MAAM,KAC7Bd,EAAUwM,EAAQ1L,MAAM,KAAK,IACnC,EAAIgL,EAAO5M,UAAU,wCAAyCc,GAC9D,IAAIS,EAAmL,QAA1KqT,EAA2H,QAArHvH,EAAsC,QAAhCD,EAAK1I,KAAKoI,SAASS,eAA4B,IAAPH,OAAgB,EAASA,EAAGI,WAAWZ,EAAOlB,2BAAwC,IAAP2B,OAAgB,EAASA,EAAG9L,aAA0B,IAAPqT,OAAgB,EAASA,EAAI,GAAGjH,EAAa,MAAMA,EAAa,MAC3PC,EAAY,GAKhB,YAJahG,GAATrG,IACAqM,EAAYrM,EAAM,aAClBsmB,QAAQpX,IAAI,kBAAmB7C,IAE9B9M,EAME,CACHiqD,KAAM,YACNjqD,QAASA,EACTkqD,cAAelqD,EACf+M,OAAQnJ,KAAKumD,gBAAgBr9C,SAVjC,CAYJ,CACAs9C,aAAAA,CAAcj+C,EAASc,EAAenN,GAClC,OAAO+K,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAM0vB,EAAgBlyB,OAAOo4B,KAAK15B,GAC5BuqD,EAAU,CACZC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLjhB,OAAQ,IAEZkhB,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAU19C,EACV,KAAQqmB,KAGpBs3B,KAAM,IAEV,IAAIz9C,EAAW,CACX,QAAWhB,EACX,OAAU,uBACV,OAAU,CACN,OAAUc,EACV,SAAYd,EAAQrL,MAAM,KAAK,GAC/B,KAAQupD,IAGhB,IACI,MAAMj9C,QAAYxJ,KAAKoI,SAASqB,QAAQF,EAAUhB,GAClD,GAAI,WAAYiB,EACZ,MAAyB,iBAAdA,EAAInO,OACJE,KAAKmO,MAAMF,EAAInO,QAGfmO,EAAInO,OAGd,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAq9C,SAAAA,CAAU1+C,EAASc,EAAeo9C,EAASS,GACvC,OAAOjgD,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAA4B,oBAAxBymD,EAAQM,KAAK,GAAGv5B,KAA4B,CAC5C,IAAIjkB,EAAW,CACX,QAAWhB,EACX,OAAU,uBACV,OAAU,CACN,OAAUc,EACV,SAAYd,EAAQrL,MAAM,KAAK,GAC/B,KAAQupD,IAGhB,IACI,MAAMj9C,QAAYxJ,KAAKoI,SAASqB,QAAQF,EAAUhB,GAClD,GAAI,WAAYiB,EACZ,OAAOA,EAAInO,OAEV,CACD,IAAIsO,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,KACK,CACD,IAAIL,EAAW,CACX,QAAWhB,EACX,OAAU,mBACV,OAAU,CACN,OAAUc,EACV,QAAWd,EAAQrL,MAAM,KAAK,GAC9B,SAAYupD,EACZ,YAAeS,IAGvB,IACI,MAAM19C,QAAYxJ,KAAKoI,SAASqB,QAAQF,EAAUhB,GAClD,GAAI,WAAYiB,EAAK,CACjB,MAAM29C,EAAU5rD,KAAKmO,MAAMF,EAAInO,QAG/B,OAFA8nB,QAAQpX,IAAI,UAAW06C,EAASU,EAAQV,SACxCA,EAAQI,IAAMM,EAAQV,QAAQI,IACvB,CAAEO,OAAQX,EAASx9B,UAAWk+B,EAAQl+B,UACjD,CACK,CACD,IAAItf,EAAYH,EAChB,OAAOG,EAAUC,KACrB,CACJ,CACA,MAAOA,GAEH,OAAOA,CACX,CACJ,CACJ,GACJ,CACAy9C,UAAAA,CAAW9+C,EAASc,EAAeo9C,EAASS,GACxC,OAAOjgD,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,MAAMkY,EAAS,CACXovC,UAAWtnD,KAAKunD,YAAYd,EAAQa,WACpCE,cAAexnD,KAAKunD,YAAYd,EAAQe,eACxCj/C,QAASk+C,EAAQl+C,QACjBk/C,cAAehB,EAAQgB,cAAgBhB,EAAQgB,cAAcx1C,WAAa,KAC1Ei1C,YAAaA,GAA4B,MAE7C,IAAIhrD,EAAO,CACP,QAAWqM,EACX,OAAU,oBACV,OAAU,CACN,OAAUc,EACV,QAAWd,EAAQrL,MAAM,KAAK,GAC9B,SAAYgb,IAGpB,IACI,MAAM1O,QAAYxJ,KAAKoI,SAASqB,QAAQvN,EAAMqM,GAC9C,GAAI,WAAYiB,EAAK,CACjB,MAAM0gC,EAAM3uC,KAAKmO,MAAMF,EAAInO,QAG3B,OAFA8nB,QAAQpX,IAAI,oBAAqBm+B,GACjCuc,EAAQe,cAAgBxnD,KAAK0nD,gBAAgBxd,EAAIuc,QAAQe,eAClD,CAAEJ,OAAQX,EAASx9B,UAAWihB,EAAIjhB,UAC7C,CACJ,CACA,MAAOrf,GACH,OAAOA,CAEX,CACJ,GACJ,CACA89C,eAAAA,CAAgBn2C,GACZ,IAAIo2C,EAASjyB,WAAWlJ,KAAK,IAC7B,IAEQm7B,EADmB,kBAAZp2C,EACEvR,KAAKumD,gBAAgBh1C,EAAQsD,QAAQ,KAAM,KAG3C6gB,WAAWlJ,KAAKjb,EAEjC,CACA,MAAO6C,GACH+O,QAAQpX,IAAI,0BAA0BqI,IAC1C,CACA,OAAOuzC,CACX,CACAJ,WAAAA,CAAYK,GACR,IAAIC,EAAS,IAAI,IAAInyB,WAAWkyB,IAC3B9pC,KAAIgqC,GAAKA,EAAE71C,SAAS,IAAI8Y,SAAS,EAAG,OACpC1tB,KAAK,IACV,MAAO,KAAOwqD,CAClB,CACAtB,eAAAA,CAAgBlS,GACZ,GAAIA,EAAUh4C,OAAS,IAAM,EACzB,KAAM,oBAGV,IADA,IAAI0rD,EAAc,IAAIryB,WAAW2e,EAAUh4C,OAAS,GAC3C6O,EAAI,EAAGA,EAAImpC,EAAUh4C,OAAQ6O,GAAK,EAAG,CAC1C,IAAI88C,EAAYtjC,SAAS2vB,EAAU+Q,OAAOl6C,EAAG,GAAI,IACjD,GAAIyZ,MAAMqjC,GACN,KAAM,oBAEVD,EAAY78C,EAAI,GAAK88C,CACzB,CACA,OAAOD,CACX,EAEJltD,EAAQqK,kBAAoBA,C,qCCrO5B,IAAItC,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAAYG,E,mCCfjCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmnB,qBAAkB,EAC1BnnB,EAAQmnB,gBAAkB,CACtBC,sBAAuB,wBACvBG,kBAAmB,qBACnB6lC,mBAAoB,qB,mCCLxBttD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,qCCD1CJ,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkJ,oCAAiC,EACzC,MAAMxE,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClBo6B,EAAUp6B,EAAQ,OAClB+J,EAA6B/J,EAAQ,OACrCwzB,EAAexzB,EAAQ,OAC7B,MAAMqJ,UAAuCU,EAA2BT,yBACpE8qB,OAAAA,GACI,OAAOZ,EAAaxE,eAAeW,OAAON,iBAC9C,CACA5hB,WAAAA,GACIkrB,QACArzB,KAAKywB,WAAa,uBAClBzwB,KAAKk3B,cAAgB,mDACzB,CACA0J,gBAAAA,GACI,OAAO35B,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EAAIC,EACsB,QAAjCF,EAAK9B,KAAKsuB,yBAAsC,IAAPxsB,GAAyBA,EAAG8K,qBAAqB80B,oBAC3F,IAAIwmB,EAA2C,QAAjCnmD,EAAK/B,KAAKsuB,yBAAsC,IAAPvsB,OAAgB,EAASA,EAAG6K,qBAAqBiE,QAAQ,sCAChH,IAAKq3C,KAAuB,OAAXA,QAA8B,IAAXA,OAAoB,EAASA,EAAOp5C,SACpE,MAAM,IAAIvP,EAAWI,gBAAgBJ,EAAWK,wBAAwBmc,qBAE5E,MAAMjN,EAAqB,OAAXo5C,QAA8B,IAAXA,OAAoB,EAASA,EAAOp5C,QACvE,IAQIq5C,EARAxuB,EAAap+B,KAAKmO,MAAMoF,GACxBs5C,EAAYzuB,EAAW0uB,aAAa3sD,QAAQ+/B,MAAM7/B,MAAMC,GACpD,SAAUA,GACW,aAAdA,EAAKC,OASpB,GALAkE,KAAK0iB,SAAWiX,EAAWjX,SAEvB0lC,GAAa,YAAaA,IAC1BD,EAAeC,EAAUhsD,UAExB+rD,EACD,MAAM,IAAI5oD,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,sBAG5E,IADA,EAAIxoB,EAAQrQ,UAAU,sCAAsC6sD,MACxD,EAAIrzB,EAAQU,UAAU,UAAW,CACjC,IAAIuF,EAEJA,EAAyB,CACrB9+B,UAAWsD,EAAWsH,gBACtB9J,OAAQ,CAACwC,EAAWqG,WAAWO,SAC/B6K,OAAQ,CACJ7U,SAAU,CAAEL,KAAM,cAG1B,IAAIwsD,QAA6BtoD,KAAKksC,4BAA2B,GAAO,GAAO,EAAO,CAACnR,GAAyB,IAChH,GAAIutB,GAAuD,GAA/BA,EAAqBjsD,OAAa,CAC1D,IAAIksD,EAAaD,EAAqB,GAClCE,EAAqC,QAA1BxmD,EAAKumD,EAAWrsD,YAAyB,IAAP8F,OAAgB,EAASA,EAAG7F,SACzEssD,EAAyB,OAAZD,QAAgC,IAAZA,OAAqB,EAASA,EAAQpsD,QAC3E,GAAI+rD,IAAiBM,EACjB,MAER,CACJ,KACK,CACD,IAAIC,QAAsBlrD,OAAOi9B,aAAaC,WAAWiB,oBACzD,GAA4B,YAAxB+sB,EAAc/zC,MAAqB,CACnC,IAAIxY,EAAWusD,EAAchtD,QAAQ+/B,MAAM7/B,MAAMC,GAAuB,aAAdA,EAAKC,OAAqBM,QACpF,GAAID,GAAYgsD,EACZ,MAER,CACJ,CACA,MAAM,IAAI5oD,EAAWI,gBAAgBJ,EAAWK,wBAAwBu0B,qBAC5E,GACJ,EAEJt5B,EAAQkJ,+BAAiCA,C,wDCnFzC,IAAInB,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIS,EAAgBzD,MAAQA,KAAKyD,cAAiB,SAASV,EAAGlI,GAC1D,IAAK,IAAI6I,KAAKX,EAAa,YAANW,GAAoB/I,OAAOgJ,UAAUC,eAAeC,KAAKhJ,EAAS6I,IAAId,EAAgB/H,EAASkI,EAAGW,EAC3H,EACA/I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD2I,EAAa/I,EAAQ,OAA0BG,GAC/C4I,EAAa/I,EAAQ,OAAYG,E,mCChBjCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwa,+BAAiCxa,EAAQoa,0BAA4Bpa,EAAQ63C,8BAAgC73C,EAAQ6c,wBAA0B7c,EAAQka,uBAAyBla,EAAQ03C,qBAAuB13C,EAAQ0Z,mBAAqB1Z,EAAQsb,uBAAyBtb,EAAQ2Z,qBAAuB3Z,EAAQsW,yBAAsB,EAElVtW,EAAQsW,oBAAsB,OAC9BtW,EAAQ2Z,qBAAuB,QAC/B3Z,EAAQsb,uBAAyB,UACjCtb,EAAQ0Z,mBAAqB,YAC7B1Z,EAAQ03C,qBAAuB,cAC/B13C,EAAQka,uBAAyB,UACjCla,EAAQ6c,wBAA0B,gBAClC7c,EAAQ63C,8BAAgC,qBACxC73C,EAAQoa,0BAA4B,aACpCpa,EAAQwa,+BAAiC,mB,qCCb7B3a,EAAA,OAACA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQulB,gBAAa,EACrB,MAAMlY,EAASxN,EAAQ,OACjByf,EAAezf,EAAQ,OACvB+tC,EAAuB/tC,EAAQ,OAC/B8Q,EAAc9Q,EAAQ,OAC5B,MAAM0lB,UAAmBlY,EAAOmR,YAC5BlR,WAAAA,CAAYwgD,EAAUv8C,EAAQw8C,GAC1Bv1B,MAAMs1B,GAEN3oD,KAAKsS,QAAWtB,GAAW/J,EAAUjH,UAAM,OAAQ,GAAQ,YACvD,OAAO,IAAIwH,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IACI,IAAImwB,EAAiB,IACrB,EAAIjoB,EAAO5M,UAAU,4BAA6BC,KAAKC,UAAUwV,IACjE,IAAI63C,EAAqB,CACrB/sD,KAAM,kBACN+vC,oBAAoB,EAAI1xB,EAAa2uC,mCAAmC93C,EAAOlI,YAC/E8U,oBAAoB,EAAIzD,EAAa2uC,mCAAmC93C,EAAO4M,qBAEnF5d,KAAKod,OAAOoV,8BAA6B,MACrC,EAAItqB,EAAO5M,UAAU,iCACrB0E,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBimC,mBAAmB,IAEhEj3C,EAAOqN,cACPwqC,EAAmBh4B,4BAA8B,EAAI4X,EAAqBsgB,sCAAsC/3C,EAAOqN,YAAawqC,EAAmBhd,qBAE3J1b,EAAe7zB,KAAKusD,IACpB,EAAI3gD,EAAO5M,UAAU,oCAAqCC,KAAKC,UAAU20B,IACzEnwB,KAAKod,OAAO4R,iBAAiBmB,EAAgBx1B,OAAO8hB,OAAO,CAAEiG,SAAU1iB,KAAKgpD,UAAYh4C,EAAO2L,gBAAiBlK,IACxGA,GAAQA,EAAK0d,kBACb,EAAIjoB,EAAO5M,UAAU,wCAAyCmX,EAAK0d,iBACnE,EAAIjoB,EAAO5M,UAAU,wBAAwB,EAAI4M,EAAO6nB,YAAYtd,EAAK0d,eAAgBnwB,KAAK2c,cAAcqT,UAC5GhwB,KAAKoM,OAAOsE,KAAK,eAAe,EAAIxI,EAAO6nB,YAAYtd,EAAK0d,eAAgBnwB,KAAK2c,cAAcqT,SAASJ,eACxG5vB,KAAKoM,OAAOsE,KAAK,qBAAqB,EAAIxI,EAAOouB,2BAA2B7jB,EAAK0d,eAAe1gB,MAAOgD,EAAK0d,eAAexd,YAC3H,EAAIzK,EAAO5M,UAAU,sCAAsCC,KAAKC,UAAUiX,MAC1EzS,KAAKoM,OAAOsE,KAAK,4BAA6B+B,GAClD,IACDzK,MAAMa,GAAY5B,EAAUjH,UAAM,OAAQ,GAAQ,aACjD,EAAIma,EAAa8uC,qBAAqBpgD,EAASmI,EAAOlI,WAAYkI,EAAO4M,mBAAoB5d,KAAK2c,gBAClG,EAAIzU,EAAO5M,UAAU,gCAAgCC,KAAKC,UAAUqN,MAChEmI,EAAOqN,oBACD,EAAIoqB,EAAqBygB,8BAA8BrgD,EAASmI,EAAOqN,cAEjF9W,EAAQsB,EACZ,MAAIsL,OAAOtM,KACP,EAAIK,EAAO5M,UAAU,8BAA8BC,KAAKC,UAAUqM,MAClE7H,KAAKoM,OAAOsE,KAAK,gBAAiB7I,GAClCJ,EAAOI,EAAE,GAEjB,CACA,MAAO+B,IACH,EAAI1B,EAAO5M,UAAU,yBAAyBC,KAAKC,UAAUoO,MAC7DnC,EAAOmC,EACX,CACJ,KACJ,IACA5J,KAAKggB,eAAkBrD,GAAkB1V,EAAUjH,UAAM,OAAQ,GAAQ,YACrE,OAAO,IAAIwH,SAAQ,CAACD,EAASE,KACzBzH,KAAKod,OAAO4C,eAAerD,GAAgB9T,IACnCA,EACAtB,EAAQsB,GAGRpB,GACJ,GACF,GAEV,IACAzH,KAAKyH,OAAUuJ,GAAW/J,EAAUjH,UAAM,OAAQ,GAAQ,YAC1D,IACAA,KAAKyJ,QAAWuH,GAAW/J,EAAUjH,UAAM,OAAQ,GAAQ,YACvD,OAAO,IAAIwH,SAAQ,CAACD,EAASE,IAAWR,EAAUjH,UAAM,OAAQ,GAAQ,YACpE,IAAI8B,EAAIC,GACR,EAAImG,EAAO5M,UAAU,+BAA8D,QAA7BwG,EAAK9B,KAAK2c,qBAAkC,IAAP7a,OAAgB,EAASA,EAAGyc,kBAAkB,EAAIrW,EAAOuG,mBAAmBuC,IACvK,KAEuC,QAA7BjP,EAAK/B,KAAK2c,qBAAkC,IAAP5a,OAAgB,EAASA,EAAGwc,oBAAqB,EAAIrW,EAAOqoB,UACnGvwB,KAAKmpD,sBAEHnpD,KAAKod,OAAOlJ,KAAKlD,EAAQ,CAC3BzJ,QAAU/H,IAGN,UAFOA,EAAS8X,WAChB,EAAIpP,EAAO5M,UAAU,8BAA8B,EAAI4M,EAAOuG,mBAAmBjP,IAC5E,UAAWA,GAAaA,EAASoK,MAAO,CACzC,IAAIA,EAAQpK,EAASoK,MACrBnC,EAAO,IAAIS,EAAOvI,gBAAgBH,EAASoK,MAAM4J,KAAMhU,EAAS0R,OAAS,IAAMtH,EAAM2H,SACzF,MAEIhK,EAAQ/H,EACZ,EAEJ6yB,MAAOA,KACH,IAAIvwB,IACC,EAAIoG,EAAOqoB,WAA2C,QAA7BzuB,EAAK9B,KAAK2c,qBAAkC,IAAP7a,OAAgB,EAASA,EAAGyc,mBAC3Fve,KAAKmpD,eACT,GAGZ,CACA,MAAOthD,IACH,EAAIK,EAAO5M,UAAU,yBAA0BuM,GAC/CJ,EAAOI,EACX,CACJ,KACJ,IACA7H,KAAKoS,WAAa,IAAMnL,EAAUjH,UAAM,OAAQ,GAAQ,YACpD,OAAO,IAAIwH,SAAQ,CAACD,EAASE,KACzBzH,KAAKod,OAAOlJ,KAAK,CACbhD,OAAQ,cACT,CACCmhB,MAAOA,KACH9qB,GAAS,GAEd,OAAU4M,OAAOvK,IAChBuZ,QAAQpX,IAAI,gBAAgBxQ,KAAKC,UAAUoO,MAC3CnC,EAAOmC,EAAM,GACf,GAEV,IACA5J,KAAKod,OAAS,IAAIlV,EAAO+lB,OAAO06B,EAAS7sD,MACzCkE,KAAKoM,OAASA,EACdpM,KAAKgpD,SAAWL,EAChB3oD,KAAK4oD,gBAAsC,OAApBA,QAAgD,IAApBA,EAA6BA,EAAkB1gD,EAAOqT,gBAAgBC,aAC7H,CACAkI,wBAAAA,CAAyB+K,GACrBzuB,KAAKod,OAAOsG,yBAAyB+K,EACzC,CACA06B,aAAAA,IAEI,EAAIjhD,EAAO5M,UAAU,kCACrB0E,KAAKod,OAAOmG,WAAW,CAAE0M,aAAcjwB,KAAK2c,cAAcsT,cAAgB,KAAMjwB,KAAK4oD,gBAQzF,CACAzpC,cAAAA,GACI,OAAOlY,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,KACzBzH,KAAKod,OAAOlJ,KAAK,CACbhD,OAAQ,sBACT,CACC3J,QAAU/H,IAGN,UAFOA,EAAS8X,WAChB,EAAIpP,EAAO5M,UAAU,oCAAqCC,KAAKC,UAAUgE,IACpE,UAAWA,GAAaA,EAASoK,MAAO,CACzC,IAAIA,EAAQpK,EAASoK,MACrBnC,EAAO,IAAIS,EAAOvI,gBAAgBH,EAASoK,MAAM4J,KAAMhU,EAAS0R,OAAS,IAAMtH,EAAM2H,SACzF,KACK,CACD,IAAI63C,EAAgB5pD,EAASnE,OAC7BkM,GAAQ,EAAIkhC,EAAqB4gB,uBAAuBD,GAC5D,KAELj1C,OAAOvK,IACNuZ,QAAQpX,IAAI,gBAAgBxQ,KAAKC,UAAUoO,MAC3CnC,EAAOmC,EAAM,GACf,GAEV,GACJ,CACAyW,iBAAAA,CAAkBoD,GACdzjB,KAAKod,OAAOiD,kBAAkBoD,EAClC,CACAF,UAAAA,CAAWC,EAAmB5V,GAC1B5N,KAAKod,OAAOmG,WAAWC,EAAmB5V,EAAW5N,KAAK4oD,gBAC9D,CACAnqC,mBAAAA,CAAoBS,GAChBlf,KAAKod,OAAOqB,oBAAoBS,EACpC,CACAiI,sBAAAA,GACI,IACI,OAAQxsB,OAAOgM,OAAOuB,EAAOwhB,eAAeW,QAAQlrB,SAASa,KAAKod,OAAOoR,eAAeM,aAChFn0B,OAAOgM,OAAOuB,EAAOwhB,eAAeY,SAASnrB,SAASa,KAAKod,OAAOoR,eAAeM,UAC7F,CACA,MAAOllB,GACH,OAAO,CACX,CACJ,EAEJ/O,EAAQulB,WAAaA,C,mCCjMrB,IAAInZ,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EAUA,SAASkvB,EAAewyB,EAAI30B,GACxB,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EACR,MAAMwnD,EAAyF,QAA7EznD,EAAiB,OAAZ6yB,QAAgC,IAAZA,OAAqB,EAASA,EAAQ40B,gBAA6B,IAAPznD,EAAgBA,EAAK,EACtH0nD,EAAuF,QAA5EznD,EAAiB,OAAZ4yB,QAAgC,IAAZA,OAAqB,EAASA,EAAQ60B,eAA4B,IAAPznD,EAAgBA,EAAK,IAC1H,GAAkB,oBAAPunD,EACP,MAAM,IAAIn3C,MAAM,mCAAmCm3C,GAEvD,IACIG,EADAv+C,EAAI,EAER,MAAOA,EAAIq+C,EACP,IACI,aAAaD,GACjB,CACA,MAAOl1C,GACHq1C,EAAYr1C,EACZlJ,IACIA,EAAIq+C,UACEG,EAAMF,GAEpB,CAEJ,MAAMC,CACV,GACJ,CAOA,SAASC,EAAM5N,EAASnnB,GACpB,OAAO1tB,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIwH,SAAQ,CAACD,EAASE,KACzB,IAAI3F,EAAIC,EACR,GAAgF,QAA3ED,EAAiB,OAAZ6yB,QAAgC,IAAZA,OAAqB,EAASA,EAAQsnB,cAA2B,IAAPn6C,OAAgB,EAASA,EAAG6nD,QAEhH,YADAliD,EAAO,IAAI0K,MAAM,kBAGrB,MAAMy3C,EAAY1oD,YAAW,IAAMqG,KAAWu0C,GAC8B,QAA3E/5C,EAAiB,OAAZ4yB,QAAgC,IAAZA,OAAqB,EAASA,EAAQsnB,cAA2B,IAAPl6C,GAAyBA,EAAGZ,iBAAiB,SAAS,KACtIC,aAAawoD,GACbniD,EAAO,IAAI0K,MAAM,iBAAiB,GACpC,GAEV,GACJ,CAvDAxX,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQi8B,eAAiBA,EACzBj8B,EAAQ6uD,MAAQA,C,mCCXhB/uD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgvD,sBAAwBhvD,EAAQs3B,sCAAwCt3B,EAAQu3B,wCAA0Cv3B,EAAQo3B,sCAAwCp3B,EAAQivD,uDAAyDjvD,EAAQkvD,iDAAmDlvD,EAAQmvD,wCAA0CnvD,EAAQovD,4BAA8BpvD,EAAQqvD,iCAAmCrvD,EAAQsvD,sCAAwCtvD,EAAQuvD,2BAA6BvvD,EAAQq2B,8DAAgEr2B,EAAQwvD,oDAAsDxvD,EAAQyvD,qCAAuCzvD,EAAQ0vD,kCAAoC1vD,EAAQ2vD,2BAA6B3vD,EAAQ4vD,iCAA8B,EAClzB5vD,EAAQ4vD,4BAA8B,qCACtC5vD,EAAQ2vD,2BAA6B,oCACrC3vD,EAAQ0vD,kCAAoC,2CAC5C1vD,EAAQyvD,qCAAuC,8CAC/CzvD,EAAQwvD,oDAAsD,+CAC9DxvD,EAAQq2B,8DAAgE,yDACxEr2B,EAAQuvD,2BAA6B,oCACrCvvD,EAAQsvD,sCAAwC,+CAChDtvD,EAAQqvD,iCAAmC,0CAC3CrvD,EAAQovD,4BAA8B,qCACtCpvD,EAAQmvD,wCAA0C,iDAClDnvD,EAAQkvD,iDAAmD,4CAC3DlvD,EAAQivD,uDAAyD,kDACjEjvD,EAAQo3B,sCAAwC,yCAChDp3B,EAAQu3B,wCAA0C,2CAClDv3B,EAAQs3B,sCAAwC,yCAChDt3B,EAAQgvD,sBAAwB,a,qCCnBpBnvD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIkI,EAAmB5C,MAAQA,KAAK4C,kBAAqBjI,OAAOkI,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOxI,OAAOyI,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAE7C,WAAaiD,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEI,YAAY,EAAMC,IAAK,WAAa,OAAOT,EAAEC,EAAI,IAE5DrI,OAAOC,eAAekI,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI4H,EAAsB5K,MAAQA,KAAK4K,qBAAwBjQ,OAAOkI,OAAU,SAASC,EAAG+H,GACxFlQ,OAAOC,eAAekI,EAAG,UAAW,CAAES,YAAY,EAAMzI,MAAO+P,GACnE,EAAK,SAAS/H,EAAG+H,GACb/H,EAAE,WAAa+H,CACnB,GACIC,EAAgB9K,MAAQA,KAAK8K,cAAkB,WAC/C,IAAIC,EAAU,SAASjI,GAMnB,OALAiI,EAAUpQ,OAAOqQ,qBAAuB,SAAUlI,GAC9C,IAAImI,EAAK,GACT,IAAK,IAAIjI,KAAKF,EAAOnI,OAAOgJ,UAAUC,eAAeC,KAAKf,EAAGE,KAAIiI,EAAGA,EAAG5O,QAAU2G,GACjF,OAAOiI,CACX,EACOF,EAAQjI,EACnB,EACA,OAAO,SAAU7C,GACb,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAI5E,EAAS,CAAC,EACd,GAAW,MAAP4E,EAAa,IAAK,IAAI+C,EAAI+H,EAAQ9K,GAAMiL,EAAI,EAAGA,EAAIlI,EAAE3G,OAAQ6O,IAAkB,YAATlI,EAAEkI,IAAkBtI,EAAgBvH,EAAQ4E,EAAK+C,EAAEkI,IAE7H,OADAN,EAAmBvP,EAAQ4E,GACpB5E,CACX,CACJ,CAhBmD,GAiB/C4L,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgT,wBAAqB,EAC7B,MAAMrC,EAAc9Q,EAAQ,OACtB4Q,EAAqB5Q,EAAQ,OAC7BgR,EAAYhR,EAAQ,OACpBiR,EAAUjR,EAAQ,OAClB04B,EAAU14B,EAAQ,OAClB+Q,EAAkB/Q,EAAQ,OAC1BqR,EAAMjB,EAAapQ,EAAQ,QAC3B6E,EAAa7E,EAAQ,OACrBsR,EAAWtR,EAAQ,OACnB0vB,GAAK,EAAIgJ,EAAQogB,kCACvB,MAAM3lC,EACF1F,WAAAA,CAAYtK,GAQR,GAPAmC,KAAKoM,OAAS,IAAIX,EAAgBY,aAClCrM,KAAK0qD,MAAQl/C,EAAYktC,eAAeW,UACxCr5C,KAAK2qD,iBAAmB,EAExB3qD,KAAK6+C,WAAa,EAElB7+C,KAAK4qD,aAAe,MACf,EAAIx3B,EAAQqgB,YAAY51C,GACzB,MAAM,IAAIsU,MAAM,0BAA0BtU,KAE9CmC,KAAKnC,IAAMA,EACXmC,KAAK6qD,eAAiB,KACtB7qD,KAAK8qD,uBAAyB,KAC9B9qD,KAAK+qD,kBAAoB,IAAIr/C,EAAUgB,QAAQpB,EAAmB0jC,uBAAyB1jC,EAAmB0jC,uBAClH,CACA,cAAI/a,GACA,OAAOj0B,KAAK0qD,OAASl/C,EAAYktC,eAAeY,UACpD,CAEArf,SAAAA,CAAUpyB,GACN,GAAsB,qBAAXA,EAAE3L,KAAb,CAIA,GAFA6P,EAAIzQ,SAAS,qBACbyQ,EAAIzQ,SAASuM,GACS,kBAAXA,EAAE3L,KAAmB,CAC5B,IAAIqX,EAAM1L,EAAE3L,KACZ,GAAY,SAARqX,EAEA,YADAxH,EAAIzQ,SAAS,yBAAyB0S,KAAKC,MAAMgE,aAGzD,CACAjS,KAAKoM,OAAOsE,KAAK,UAAW7I,EAAE3L,KAVpB,CAWd,CACAg+B,OAAAA,CAAQvlB,GACJ,IAAI7S,EACJiK,EAAIzQ,SAAS,sBAA8C,QAAtBwG,EAAK9B,KAAKgrD,cAA2B,IAAPlpD,OAAgB,EAASA,EAAGjE,IAAK8W,EAAMnB,MAC1GxT,KAAKgrD,YAAS9nD,EACdlD,KAAKoM,OAAOsE,KAAK,QAASiE,EAC9B,CACAy1B,OAAAA,CAAQz5B,EAAI9I,GACR,MAAMnM,EAAU,CAAEiV,GAAIA,EAAIkF,IAAKhO,EAAEoK,YACjCjS,KAAKoM,OAAOsE,KAAK,UAAWhV,EAChC,CACAuvD,MAAAA,CAAOD,GACHA,EAAOE,UAAav2C,GAAU3U,KAAKi6B,UAAUtlB,GAC7Cq2C,EAAOG,QAAWx2C,GAAU3U,KAAKk6B,QAAQvlB,GACzC3U,KAAKgrD,OAASA,EACdhrD,KAAK0qD,MAAQl/C,EAAYktC,eAAea,UACxCv5C,KAAKoM,OAAOsE,KAAK,OACrB,CAEA06C,SAAAA,CAAUC,GACNrrD,KAAKoM,OAAOsE,KAAK,OAAQ26C,EAC7B,CAEAC,SAAAA,GACI,OAAOrkD,EAAUjH,UAAM,OAAQ,GAAQ,YAInC,GAHIA,KAAK6qD,gBACLzpD,aAAapB,KAAK6qD,gBAElB7qD,KAAK0qD,OAASl/C,EAAYktC,eAAea,WAAav5C,KAAK0qD,OAASl/C,EAAYktC,eAAee,SAInG,GAAKz5C,KAAKgrD,QAcV,GAAIhrD,KAAKgrD,OAAOviC,aAAektB,UAAU4V,KAczCx/C,EAAIzQ,SAAS,yBAAyB0S,KAAKC,MAAMgE,eAAejS,KAAKgrD,UACrEhrD,KAAKgrD,OAAO92C,KAAK,QACjBlU,KAAK6qD,eAAiB3pD,WAAWlB,KAAKsrD,UAAUz3C,KAAK7T,MAAO,UAdxD,GADA+L,EAAIzQ,SAAS,oBACT0E,KAAK0qD,OAASl/C,EAAYktC,eAAea,WAAav5C,KAAK0qD,OAASl/C,EAAYktC,eAAee,QAAS,CACxG1tC,EAAIzQ,SAAS,2CAA4C0E,KAAK0qD,MAAO1qD,KAAKgrD,OAAOviC,YACjF,UACUzoB,KAAKwrD,eACf,CACA,MAAO3jD,GACHkE,EAAIoH,SAAS,sBACbnT,KAAK6qD,eAAiB3pD,WAAWlB,KAAKsrD,UAAUz3C,KAAK7T,MAAO,IAChE,CACJ,OAvBA,GADA+L,EAAIzQ,SAAS,oBACT0E,KAAK0qD,OAASl/C,EAAYktC,eAAea,WAAav5C,KAAK0qD,OAASl/C,EAAYktC,eAAee,QAAS,CACxG1tC,EAAIzQ,SAAS,iCACb,UACU0E,KAAKwrD,eACf,CACA,MAAO3jD,GACHkE,EAAIoH,SAAS,sBACbnT,KAAK6qD,eAAiB3pD,WAAWlB,KAAKsrD,UAAUz3C,KAAK7T,MAAO,IAChE,CACJ,OAdA+L,EAAIzQ,SAAS,mBAkCrB,GACJ,CACAmwD,UAAAA,CAAW5tD,EAAMmC,KAAKnC,IAAK6tD,GAAU,GACjC,KAAK,EAAIt4B,EAAQqgB,YAAY51C,GACzB,MAAM,IAAIsU,MAAM,0BAA0BtU,KAE9CmC,KAAKnC,IAAMA,EACN6tD,GACD3/C,EAAIzQ,SAAS,sBAAuB0E,KAAKnC,KAAK,IAAImQ,MAAOqI,eAE7DrW,KAAK0qD,MAAQl/C,EAAYktC,eAAeY,WACzB,IAAIqS,gBAAgB9tD,GAAK2F,IAAI,UAC5C,OAAO,IAAIgE,SAAQ,CAACD,EAASE,KACzB,MAAMujD,EAAS,IAAI5gC,EAAGvsB,EAAK,IAC3BkO,EAAIzQ,SAAS,4BAA6B0E,KAAKnC,KAAK,IAAImQ,MAAOqI,eAC/DrW,KAAK4rD,kBAAkBZ,IACnB,EAAI53B,EAAQmgB,wBACZxnC,EAAIzQ,SAAS,4BACb0vD,EAAOa,QAAU,KACbpkD,EAAO,IAAI0K,MAAM,iBACjB64C,EAAOlxB,OAAO,IAIlB/tB,EAAIzQ,SAAS,4BACb0vD,EAAO3rC,GAAG,SAAS,KACf5X,EAAO,IAAI0K,MAAM,iBACjB64C,EAAOlxB,OAAO,KAGtBkxB,EAAOC,OAAS,KACZl/C,EAAIzQ,SAAS,iBACb0E,KAAK8rD,kBAAkBtgD,EAAYmtC,uCAAuCS,UAC1Ep5C,KAAKirD,OAAOD,GACZhrD,KAAKsrD,YACL/jD,EAAQyjD,EAAO,CAClB,GAET,CACAe,aAAAA,GAEI,OADAhgD,EAAIzQ,SAAS,uBAAwB0E,KAAK6+C,WAAY,KAAMrzC,EAAYotC,yBAAyBv8C,QAC1F2D,KAAK6+C,WAA4D,EAA9CrzC,EAAYotC,yBAAyBv8C,MACnE,CACA2vD,iBAAAA,GACI,OAAO/kD,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAK+rD,gBAAiB,CAEvB/rD,KAAK6+C,YAAc,EACnB,IAAIoN,EAAUjsD,KAAKksD,mBAEnB,OADAngD,EAAIzQ,SAAS,oBAAqB2wD,GAAS,IAAIj+C,MAAOqI,eAC/CrW,KAAKyrD,WAAWQ,GAAS,EACpC,CAEIlgD,EAAIzQ,SAAS,wBAAyB0E,KAAK6+C,YAAY,IAAI7wC,MAAOqI,cAE1E,GACJ,CACAu1C,iBAAAA,CAAkBZ,GACVhrD,KAAK8qD,wBACL9qD,KAAK8rD,kBAAkBtgD,EAAYmtC,uCAAuCQ,UAE9En5C,KAAKmsD,cAAgBnB,EACrBhrD,KAAK8qD,uBAAyB5pD,YAAW,KACjClB,KAAKmsD,eACLnsD,KAAK8rD,kBAAkBtgD,EAAYmtC,uCAAuCO,SAC9E,GACDl5C,KAAK4qD,aACZ,CACAkB,iBAAAA,CAAkBt4C,GACd,IAAI1R,EAEJ,GAAI0R,GAAQhI,EAAYmtC,uCAAuCO,SAM3D,MAJA93C,aAAapB,KAAK8qD,wBACY,QAA7BhpD,EAAK9B,KAAKmsD,qBAAkC,IAAPrqD,GAAyBA,EAAGg4B,QAClE95B,KAAKmsD,mBAAgBjpD,EACrB6I,EAAIuB,YAAYtB,EAASuB,cAAcC,IAAK,UAAWxN,KAAK6+C,WAAW5sC,YACjE,IAAIE,MAAM,kBAGhBnS,KAAKmsD,mBAAgBjpD,EAErB9B,aAAapB,KAAK8qD,uBAE1B,CACAsB,qBAAAA,GACIpsD,KAAK+qD,kBAAkB14C,YAAYrS,KAAK2qD,iBAAiB14C,WAAY3G,EAAmB0jC,uBAC5F,CAUAkd,gBAAAA,GAGI,OAFAlsD,KAAK2qD,kBAAoB,EACzB3qD,KAAK2qD,iBAAmB3qD,KAAK2qD,iBAAmBn/C,EAAYotC,yBAAyBv8C,OAC9EmP,EAAYotC,yBAAyB54C,KAAK2qD,iBACrD,CAEA0B,gBAAAA,GACI,OAAOplD,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAiC,YAA7BqxB,SAASi7B,kBAETvgD,EAAIzQ,SAAS,eAAe0E,KAAK0qD,UAAU1qD,KAAKgrD,UAC5ChrD,KAAK0qD,OAASl/C,EAAYktC,eAAea,WAAoC,qBAAhBv5C,KAAKgrD,aAH1E,CAIQj/C,EAAIzQ,SAAS,0BACb,UACU0E,KAAKwrD,eACf,CACA,MAAO3jD,GACHkE,EAAIoH,SAAS,qBACjB,CAGR,CACJ,GACJ,CACAq4C,aAAAA,GACI,OAAOvkD,EAAUjH,KAAM+P,eAAW,GAAQ,UAAWlS,EAAMmC,KAAKnC,KAC5D,GAAImC,KAAKi0B,WAEL,OADAloB,EAAIzQ,SAAS,qCACN,IAAIkM,SAAQ,CAACD,EAASE,KACzBzH,KAAKoM,OAAO/K,KAAK,QAASwG,IACtBkE,EAAIzQ,SAAS,4CAA6CuM,GACnDJ,EAAOI,MAElB7H,KAAKoM,OAAO/K,KAAK,QAAQ,IACK,oBAAfrB,KAAKgrD,OACLvjD,EAAO,IAAI0K,MAAM,iBAErB5K,EAAQvH,KAAKgrD,SACtB,IAGVj/C,EAAIzQ,SAAS,4DACb,IAAIowD,GAAU,EACd,OAAQ1rD,KAAK+rD,kBAAoB/rD,KAAKgrD,OAClC,IACIj/C,EAAIzQ,SAAS,+CAAgD0E,KAAK6+C,WAAY6M,SACxE1rD,KAAKyrD,WAAW5tD,EAAK6tD,EAC/B,CACA,MAAOt3C,GACHrI,EAAIzQ,SAAS,qCAAsC8Y,GACnDpU,KAAK6+C,YAAc,EACnBhhD,EAAMmC,KAAKksD,mBACXR,GAAU,CACd,CAGJ,GADA3/C,EAAIzQ,SAAS,mCAAoC0E,KAAK6+C,WAAY7+C,KAAKgrD,SAClEhrD,KAAKgrD,QAAUhrD,KAAK+rD,gBAKrB,MAJAhgD,EAAIzQ,SAAS,2CAA4C0E,KAAK6+C,WAAY7+C,KAAKgrD,QAC/EhrD,KAAK6+C,WAAa,EAClB7+C,KAAK0qD,MAAQl/C,EAAYktC,eAAee,QACxCz5C,KAAKorD,UAAU,IAAIj5C,MAAM,yBACnB,IAAI5S,EAAWI,gBAAgBJ,EAAWK,wBAAwBg9B,iBAAkB,oBAElG,GACJ,CACAtqB,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,UACUA,KAAKwrD,gBAEXn6B,SAAS0lB,oBAAoB,mBAAoB/2C,KAAKqsD,iBAAiBx4C,KAAK7T,OAC5EqxB,SAASlwB,iBAAiB,mBAAoBnB,KAAKqsD,iBAAiBx4C,KAAK7T,MAC7E,CACA,MAAO6H,GAEH,MADAkE,EAAIzQ,SAAS,+BAAgCuM,GACvCA,CACV,CACJ,GACJ,CACAuK,UAAAA,GACI,OAAOnL,EAAUjH,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAK0qD,MAAQl/C,EAAYktC,eAAec,aACjC,IAAIhyC,SAAQ,CAACD,EAASE,KACE,qBAAhBzH,KAAKgrD,QAKhBhrD,KAAKgrD,OAAOG,QAAWx2C,IACnB3U,KAAKk6B,QAAQvlB,GACbpN,GAAS,EAEbvH,KAAKgrD,OAAOlxB,QACR95B,KAAK6qD,gBACLzpD,aAAapB,KAAK6qD,iBATlBtjD,GAUJ,GAER,GACJ,CACAglD,aAAAA,GACI,MAAO,CACH7B,MAAO1qD,KAAK0qD,MACZ7sD,IAAKmC,KAAKnC,IAElB,CAIA4X,WAAAA,CAAYd,EAAOoB,EAASL,EAAS82C,EAAQC,GACrCzsD,KAAK0sD,sBACL1sD,KAAKoM,OAAOmT,eAAe,UAAWvf,KAAK0sD,sBAE/C1sD,KAAK0sD,qBAAwB7kD,GAAMZ,EAAUjH,UAAM,OAAQ,GAAQ,YAC/D,IAAI8B,EACJiK,EAAIzQ,SAAS,mBAAmBuM,KAChC,IAAI8kD,GAAc,EAAIhhD,EAAQoD,eAAelH,GAE7C,GAAI8kD,EAAY37C,QAAU27C,EAAY37C,OAAO9U,KAAM,CAC/C,IAAI0Y,EAA4C,QAAlC9S,EAAK6qD,EAAY37C,OAAO9U,YAAyB,IAAP4F,OAAgB,EAASA,EAAGyP,QAChFq7C,GAAU,EACd,GAAIh4C,GAEI63C,EAAoB,CACpB,IAAI76C,QAAoB66C,EAAmBE,EAAY37C,OAAO9U,MAC9D0wD,EAAUh7C,EAAYsE,iBAAoBtE,EAAY6+B,aAClD7+B,EAAYsE,iBACRtE,EAAY6+B,cAAgB7+B,EAAY6+B,aAAap0C,OAAS,GAC9D0P,EAAIzQ,SAAS,mCACbsZ,EAAShD,EAAY6+B,eAGrB1kC,EAAIzQ,SAAS,iCACbsxD,GAAU,GAGtB,CAEJ,IAAKA,EACD,IACI,IAAI/2C,EAAME,EAAQnB,QACN1R,IAAR2S,GACA9J,EAAIzQ,SAAS,8BACbkxD,EAAO73C,EAAO,sBAGde,EAAQf,EAAOkB,EAEvB,CACA,MAAOhO,GACHkE,EAAIzQ,SAAS,4BAA4BuM,KACzC2kD,EAAO73C,EAAO9M,EAAE0J,QACpB,CAER,CACJ,IACAvR,KAAKoM,OAAOiT,GAAG,UAAWrf,KAAK0sD,sBAC3B1sD,KAAK6sD,aACL7sD,KAAKoM,OAAOmT,eAAe,OAAQvf,KAAK6sD,aAE5C7sD,KAAK6sD,YAAehlD,IACZA,GACAkE,EAAIzQ,SAAS,mBAAmBuM,KAChC2kD,EAAO73C,EAAO9M,EAAE0J,UAGhBi7C,EAAO73C,EAAO,gBAClB,EAEJ3U,KAAKoM,OAAOiT,GAAG,OAAQrf,KAAK6sD,YAChC,CACAn4C,eAAAA,CAAgBm0B,GACR7oC,KAAK8sD,gBACL9sD,KAAKoM,OAAOmT,eAAe,UAAWvf,KAAK8sD,gBAE/C9sD,KAAK8sD,eAAkBjlD,GAAMZ,EAAUjH,UAAM,OAAQ,GAAQ,YAEzD+L,EAAIzQ,SAAS,iBAAgB,IAAI0S,MAAOqI,kCAAkCxO,KAC1E,IAAI49C,GAAQ,EAAI95C,EAAQoD,eAAelH,SACjCghC,EAAS4c,EACnB,IACAzlD,KAAKoM,OAAOiT,GAAG,UAAWrf,KAAK8sD,eACnC,CACAzrD,IAAAA,CAAKsT,EAAO2K,GACRtf,KAAKoM,OAAO/K,KAAKsT,EAAO2K,EAC5B,CACAE,GAAAA,CAAI7K,EAAO2K,GACPtf,KAAKoM,OAAOoT,IAAI7K,EAAO2K,EAC3B,CACAC,cAAAA,CAAe5K,EAAO2K,GAClBtf,KAAKoM,OAAOmT,eAAe5K,EAAO2K,EACtC,CACApL,IAAAA,CAAK64C,EAASrxD,GACV,OAAOuL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAC+B,qBAAhBA,KAAKgrD,SACZj/C,EAAIzQ,SAAS,8BAA8BI,WAErCqxD,KAEVhhD,EAAIzQ,SAAS,iBAAgB,IAAI0S,MAAOqI,mCAAkC,EAAI1K,EAAQ8C,mBAAmB/S,MACrGsE,KAAKgrD,QACLhrD,KAAKgrD,OAAO92C,MAAK,EAAIvI,EAAQ8C,mBAAmB/S,GAExD,CACA,MAAOmM,GACH7H,KAAKoqC,QAAQ1uC,EAAQiV,GAAI9I,EAC7B,CACJ,GACJ,CACA2P,wBAAAA,CAAyB3B,GACrB,OAAO5O,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,GAAmB,qBAAR6V,EACP,OACJ,IAAIm3C,EAAS,CACTh8C,OAAQ,CACJ9U,KAAM2Z,IAGVo3C,GAAU,EAAIthD,EAAQ8C,mBAAmBoH,GAC7C9J,EAAIzQ,SAAS,kCACbyQ,EAAIzQ,SAAS2xD,GACbA,GAAU,EAAIthD,EAAQ8C,mBAAmBu+C,GACzChtD,KAAKoM,OAAOsE,KAAK,UAAWu8C,EAChC,GACJ,CACA55C,MAAAA,CAAOw1B,GACC7oC,KAAKktD,aACLltD,KAAKoM,OAAOmT,eAAe,OAAQvf,KAAKktD,aAE5CltD,KAAKktD,YAAc,IAAMjmD,EAAUjH,UAAM,OAAQ,GAAQ,YACrD+L,EAAIzQ,SAAS,iBAAgB,IAAI0S,MAAOqI,wCAClCwyB,GACV,IACA7oC,KAAKoM,OAAOiT,GAAG,OAAQrf,KAAKktD,aAC5BltD,KAAKosD,uBACT,EAEJvxD,EAAQgT,mBAAqBA,C,uGCretB8C,GAAG,O,mgBAARw8C,EAAAA,EAAAA,IA+jCM,MA/jCNC,EA+jCM,EA9jCJC,EAAAA,EAAAA,IA6jCeC,EAAA,MA/jCnBprD,SAAAqrD,EAAAA,EAAAA,KAGM,IAAkC,EAAlCF,EAAAA,EAAAA,IAAkCG,EAAA,MAHxCtrD,SAAAqrD,EAAAA,EAAAA,KAGiB,IAAWE,EAAA,MAAAA,EAAA,MAH5BC,EAAAA,EAAAA,IAGiB,mBAHjB1sB,EAAA,KAIMqsB,EAAAA,EAAAA,IA0jCUM,EAAA,MA9jChBzrD,SAAAqrD,EAAAA,EAAAA,KAKQ,IAgBU,EAhBVF,EAAAA,EAAAA,IAgBUO,EAAA,CAhBDC,MAAM,eAAa,CACf3uB,QAAMquB,EAAAA,EAAAA,KACf,IAAiDE,EAAA,MAAAA,EAAA,MAAjDK,EAAAA,EAAAA,IAAiD,OAA5CC,MAAA,wBAA2B,eAAW,OAPvD7rD,SAAAqrD,EAAAA,EAAAA,KASU,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJDH,MAAM,YAAU,CATlC3rD,SAAAqrD,EAAAA,EAAAA,KAUY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAV7BhsD,SAAAqrD,EAAAA,EAAAA,KAWc,IAAgC,gBAAhCO,EAAAA,EAAAA,IAAgC,cAAxB,mBAAe,KAXrCJ,EAAAA,EAAAA,IAW8C,KAACS,EAAAA,EAAAA,IAAGC,EAAA5qB,kBAAgB,MAXlExC,EAAA,OAAAA,EAAA,KAeUqsB,EAAAA,EAAAA,IAISW,EAAA,CAJDH,MAAM,YAAU,CAflC3rD,SAAAqrD,EAAAA,EAAAA,KAgBY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhB7BhsD,SAAAqrD,EAAAA,EAAAA,KAiBc,IAAyB,gBAAzBO,EAAAA,EAAAA,IAAyB,cAAjB,YAAQ,KAjB9BJ,EAAAA,EAAAA,IAiBuC,KAACS,EAAAA,EAAAA,IAAGE,EAAA9B,eAAa,MAjBxDvrB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAuBQqsB,EAAAA,EAAAA,IAiRUO,EAAA,CAjRDC,MAAM,kBAAgB,CAClB3uB,QAAMquB,EAAAA,EAAAA,KACf,IAAoDE,EAAA,MAAAA,EAAA,MAApDK,EAAAA,EAAAA,IAAoD,OAA/CC,MAAA,wBAA2B,kBAAc,OAzB1D7rD,SAAAqrD,EAAAA,EAAAA,KA4BU,IAYS,EAZTF,EAAAA,EAAAA,IAYSW,EAAA,CAZDH,MAAM,YAAU,CA5BlC3rD,SAAAqrD,EAAAA,EAAAA,KA6BY,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA7B7BhsD,SAAAqrD,EAAAA,EAAAA,KA8Bc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAhC5BC,WA8BoCF,EAAAG,OA9BpC,sBAAAf,EAAA,KAAAA,EAAA,GAAAgB,GA8BoCJ,EAAAG,OAAMC,GAAGC,SAAQL,EAAAM,c,CA9BrDzsD,SAAAqrD,EAAAA,EAAAA,KA8BmE,IAErDE,EAAA,MAAAA,EAAA,MAhCdC,EAAAA,EAAAA,IA8BmE,iBA9BnE1sB,EAAA,G,gCAAAA,EAAA,KAmCYqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnC7BhsD,SAAAqrD,EAAAA,EAAAA,KAoCc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAtC5BC,WAoCoCF,EAAAO,cApCpC,sBAAAnB,EAAA,KAAAA,EAAA,GAAAgB,GAoCoCJ,EAAAO,cAAaH,GAAGC,SAAQL,EAAAQ,qB,CApC5D3sD,SAAAqrD,EAAAA,EAAAA,KAoCiF,IAEnEE,EAAA,MAAAA,EAAA,MAtCdC,EAAAA,EAAAA,IAoCiF,yBApCjF1sB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KA2CUqsB,EAAAA,EAAAA,IAWSW,EAAA,CAXDD,MAAA,0BAA2B,CA3C7C7rD,SAAAqrD,EAAAA,EAAAA,KA4CY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CA5C5BhsD,SAAAqrD,EAAAA,EAAAA,KA6Cc,IAAqCE,EAAA,MAAAA,EAAA,MAArCK,EAAAA,EAAAA,IAAqC,KAAlCC,MAAA,sBAAwB,UAAM,OA7C/C/sB,EAAA,KA+CYqsB,EAAAA,EAAAA,IAMSY,EAAA,CANAC,KAAM,IAAE,CA/C7BhsD,SAAAqrD,EAAAA,EAAAA,KAgDc,IAIY,EAJZF,EAAAA,EAAAA,IAIYyB,EAAA,CApD1BP,WAgDkCF,EAAAU,OAhDlC,sBAAAtB,EAAA,KAAAA,EAAA,GAAAgB,GAgDkCJ,EAAAU,OAAMN,GAAEO,YAAY,SAAUN,SAAQN,EAAAa,mBAAoBC,SAAA,I,CAhD5FhtD,SAAAqrD,EAAAA,EAAAA,KAiDgB,IAA0C,EAA1CF,EAAAA,EAAAA,IAA0C8B,EAAA,CAA/BC,MAAM,SAASt0D,MAAM,YAChCuyD,EAAAA,EAAAA,IAA4C8B,EAAA,CAAjCC,MAAM,UAAUt0D,MAAM,aACjCuyD,EAAAA,EAAAA,IAAwC8B,EAAA,CAA7BC,MAAM,QAAQt0D,MAAM,aAnD/CkmC,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAwDUqsB,EAAAA,EAAAA,IA6BSW,EAAA,CA7BDD,MAAA,4DAA4D,CAxD9E7rD,SAAAqrD,EAAAA,EAAAA,KAyDY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,EAAGH,MAAA,a,CAzD9B7rD,SAAAqrD,EAAAA,EAAAA,KA0Dc,IAA2DE,EAAA,MAAAA,EAAA,MAA3DK,EAAAA,EAAAA,IAA2D,KAAxDC,MAAA,mCAAqC,mBAAe,IACvDD,EAAAA,EAAAA,IAAwD,KAArDC,MAAA,kCAAoC,iBAAa,OA3DlE/sB,EAAA,KA6DYqsB,EAAAA,EAAAA,IAaSY,EAAA,CAbAC,KAAM,IAAE,CA7D7BhsD,SAAAqrD,EAAAA,EAAAA,KA8Dc,IAWY,EAXZF,EAAAA,EAAAA,IAWYyB,EAAA,CAzE1BP,WA+D2BF,EAAAgB,eA/D3B,sBAAA5B,EAAA,KAAAA,EAAA,GAAAgB,GA+D2BJ,EAAAgB,eAAcZ,GACtBC,SAAQN,EAAAkB,2BACTN,YAAY,mB,CAjE9B9sD,SAAAqrD,EAAAA,EAAAA,KAoEoB,IAAoC,gBADxCJ,EAAAA,EAAAA,IAKEoC,EAAAA,GAAA,MAxElBC,EAAAA,EAAAA,IAoEuCnB,EAAAoB,kBAAZC,K,WADXC,EAAAA,EAAAA,IAKER,EAAA,CAHGt3C,IAAG,iCAAmC63C,IACtCN,MAAOM,EACP50D,MAAO40D,G,sCAvE5B1uB,EAAA,G,gCAAAA,EAAA,KA2EYqsB,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CA3E7BhsD,SAAAqrD,EAAAA,EAAAA,KA4Ec,IAOE,CAN2B,aAAnBc,EAAAgB,iBAAc,WADxBM,EAAAA,EAAAA,IAOEC,EAAA,CAnFhB/3C,IAAA,EAAA02C,WA8E2BF,EAAAwB,SA9E3B,sBAAApC,EAAA,KAAAA,EAAA,GAAAgB,GA8E2BJ,EAAAwB,SAAQpB,GAChBC,SAAQN,EAAA0B,6BACTd,YAAY,WACXe,SAA6B,aAAnB1B,EAAAgB,eACXtB,MAAA,gB,+CAlFlBiC,EAAAA,EAAAA,IAAA,UAAAhvB,EAAA,OAAAA,EAAA,KAuFUqsB,EAAAA,EAAAA,IAUSW,EAAA,CAVDD,MAAA,0BAA2B,CAvF7C7rD,SAAAqrD,EAAAA,EAAAA,KAwFY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAxF5BhsD,SAAAqrD,EAAAA,EAAAA,KAyFc,IAAmCE,EAAA,MAAAA,EAAA,MAAnCK,EAAAA,EAAAA,IAAmC,KAAhCC,MAAA,sBAAwB,QAAI,OAzF7C/sB,EAAA,KA2FYqsB,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA3F7BhsD,SAAAqrD,EAAAA,EAAAA,KA4Fc,IAGY,EAHZF,EAAAA,EAAAA,IAGYyB,EAAA,CA/F1BP,WA4FkCF,EAAA7Q,SA5FlC,sBAAAiQ,EAAA,KAAAA,EAAA,GAAAgB,GA4FkCJ,EAAA7Q,SAAQiR,GAAGC,SAAQN,EAAA6B,qBAAsBjB,YAAY,Y,CA5FvF9sD,SAAAqrD,EAAAA,EAAAA,KA6F2B,IAAyB,gBAApCJ,EAAAA,EAAAA,IAC4BoC,EAAAA,GAAA,MA9F5CC,EAAAA,EAAAA,IA6F4CnB,EAAA6B,SAAVC,K,WAAlBR,EAAAA,EAAAA,IAC4BR,EAAA,CADUt3C,IAAG,0BAA4Bs4C,IAAWf,MAAOe,EAC3Er1D,MAAOq1D,G,sCA9FnCnvB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAmGUqsB,EAAAA,EAAAA,IAUSW,EAAA,CAVDD,MAAA,0BAA2B,CAnG7C7rD,SAAAqrD,EAAAA,EAAAA,KAoGY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CApG5BhsD,SAAAqrD,EAAAA,EAAAA,KAqGc,IAAoCE,EAAA,MAAAA,EAAA,MAApCK,EAAAA,EAAAA,IAAoC,KAAjCC,MAAA,sBAAwB,SAAK,OArG9C/sB,EAAA,KAuGYqsB,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CAvG7BhsD,SAAAqrD,EAAAA,EAAAA,KAwGc,IAGY,EAHZF,EAAAA,EAAAA,IAGYyB,EAAA,CA3G1BP,WAwGkCF,EAAA+B,MAxGlC,sBAAA3C,EAAA,KAAAA,EAAA,GAAAgB,GAwGkCJ,EAAA+B,MAAK3B,GAAGC,SAAQN,EAAAiC,kBAAmBrB,YAAY,S,CAxGjF9sD,SAAAqrD,EAAAA,EAAAA,KAyGgB,IAA+C,EAA/CF,EAAAA,EAAAA,IAA+C8B,EAAA,CAApCC,MAAM,QAASt0D,MAAOuzD,EAAAiC,MAAMC,O,mBACvClD,EAAAA,EAAAA,IAA6C8B,EAAA,CAAlCC,MAAM,OAAQt0D,MAAOuzD,EAAAiC,MAAME,M,qBA1GtDxvB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KA8HUqsB,EAAAA,EAAAA,IAqBSW,EAAA,CArBDD,MAAA,0BAA2B,CA9H7C7rD,SAAAqrD,EAAAA,EAAAA,KA+HY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA/H5BhsD,SAAAqrD,EAAAA,EAAAA,KAgIc,IAAsCE,EAAA,MAAAA,EAAA,MAAtCK,EAAAA,EAAAA,IAAsC,KAAnCC,MAAA,sBAAwB,WAAO,IAClCD,EAAAA,EAAAA,IAAsC,KAAnCC,MAAA,sBAAwB,WAAO,OAjIhD/sB,EAAA,KAmIYqsB,EAAAA,EAAAA,IAeSY,EAAA,CAfAC,KAAM,IAAE,CAnI7BhsD,SAAAqrD,EAAAA,EAAAA,KAoIc,IAOY,EAPZF,EAAAA,EAAAA,IAOYyB,EAAA,CA3I1BP,WAoIkCF,EAAAoC,eApIlC,sBAAAhD,EAAA,KAAAA,EAAA,GAAAgB,GAoIkCJ,EAAAoC,eAAchC,GAAGC,SAAQN,EAAAsC,2BAA4BxB,SAAA,GAASF,YAAY,W,CApI5G9sD,SAAAqrD,EAAAA,EAAAA,KAsIoB,IAA8B,gBADlCJ,EAAAA,EAAAA,IAKYoC,EAAAA,GAAA,MA1I5BC,EAAAA,EAAAA,IAsImCnB,EAAAsC,gBAAR90D,K,WADX8zD,EAAAA,EAAAA,IAKYR,EAAA,CAHPt3C,IAAKhc,EACLuzD,MAAOvzD,EACPf,MAAOe,G,sCAzI5BmlC,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAqJUqsB,EAAAA,EAAAA,IAOSW,EAAA,CAPDD,MAAA,0BAA2B,CArJ7C7rD,SAAAqrD,EAAAA,EAAAA,KAsJY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAtJ5BhsD,SAAAqrD,EAAAA,EAAAA,KAuJc,IAAwCE,EAAA,MAAAA,EAAA,MAAxCK,EAAAA,EAAAA,IAAwC,KAArCC,MAAA,sBAAwB,aAAS,OAvJlD/sB,EAAA,KAyJYqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzJ7BhsD,SAAAqrD,EAAAA,EAAAA,KA0Jc,IAA2E,EAA3EF,EAAAA,EAAAA,IAA2EuC,EAAA,CA1JzFrB,WA0JiCF,EAAAuC,cA1JjC,sBAAAnD,EAAA,KAAAA,EAAA,GAAAgB,GA0JiCJ,EAAAuC,cAAanC,GAAEO,YAAY,mB,0BA1J5DhuB,EAAA,OAAAA,EAAA,KA+JUqsB,EAAAA,EAAAA,IAgBSW,EAAA,CAhBA6C,OAAQ,GAAIC,MAAM,U,CA/JrC5uD,SAAAqrD,EAAAA,EAAAA,KAgKY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhK7BhsD,SAAAqrD,EAAAA,EAAAA,KAiKc,IAA4DE,EAAA,MAAAA,EAAA,MAA5DK,EAAAA,EAAAA,IAA4D,OAAvDC,MAAA,wBAA2B,0BAAsB,OAjKpE/sB,EAAA,M,aAmKYmsB,EAAAA,EAAAA,IAWSoC,EAAAA,GAAA,MA9KrBC,EAAAA,EAAAA,IAqK+B70D,OAAO2hB,KAAK+xC,EAAA0C,kBAApBl1D,K,WAFX8zD,EAAAA,EAAAA,IAWS1B,EAAA,CAVJC,KAAM,EAENr2C,IAAKhc,G,CAtKtBqG,SAAAqrD,EAAAA,EAAAA,KAwKc,IAKC,EALDF,EAAAA,EAAAA,IAKCiB,EAAA,CA7KfC,WAyK2BF,EAAA0C,gBAAgBl1D,GAAMm1D,QAzKjD,sBAAAvC,GAyK2BJ,EAAA0C,gBAAgBl1D,GAAMm1D,QAAOvC,EACrCsB,UAAW1B,EAAA4C,e,CA1K9B/uD,SAAAqrD,EAAAA,EAAAA,KA2Ke,IAAgC,EA3K/CG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA2KkBE,EAAA0C,gBAAgBl1D,GAAMC,MAAI,MA3K5CklC,EAAA,G,yDAAAA,EAAA,G,kBAAAA,EAAA,KAiLUqsB,EAAAA,EAAAA,IAwCSW,EAAA,CAxCA6C,OAAQ,GAAIC,MAAM,SAAS/C,MAAA,uB,CAjL9C7rD,SAAAqrD,EAAAA,EAAAA,KAkLY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAlL7BhsD,SAAAqrD,EAAAA,EAAAA,KAmLc,IAA4DE,EAAA,MAAAA,EAAA,MAA5DK,EAAAA,EAAAA,IAA4D,OAAvDC,MAAA,wBAA2B,0BAAsB,OAnLpE/sB,EAAA,KAqLYqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CArL5BhsD,SAAAqrD,EAAAA,EAAAA,KAsLc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,gBAAkBxC,SAAMjB,EAAA,KAAAA,EAAA,OAAQY,EAAA8C,mBAAmB,kB,CAtL1GjvD,SAAAqrD,EAAAA,EAAAA,KAsL2H,IAE7GE,EAAA,MAAAA,EAAA,MAxLdC,EAAAA,EAAAA,IAsL2H,cAtL3H1sB,EAAA,G,kBAAAA,EAAA,KA0LYqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CA1L5BhsD,SAAAqrD,EAAAA,EAAAA,KA2Lc,IAAuH,EAAvHF,EAAAA,EAAAA,IAAuHiB,EAAA,CAAzG0C,QAAS3C,EAAA6C,kBAAkB,aAAexC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,e,CA3LvGjvD,SAAAqrD,EAAAA,EAAAA,KA2LqH,IAAEE,EAAA,MAAAA,EAAA,MA3LvHC,EAAAA,EAAAA,IA2LqH,UA3LrH1sB,EAAA,G,kBAAAA,EAAA,KA6LYqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CA7L5BhsD,SAAAqrD,EAAAA,EAAAA,KA8Lc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,eAAiBxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,iB,CA9LzGjvD,SAAAqrD,EAAAA,EAAAA,KA8LyH,IAE3GE,EAAA,MAAAA,EAAA,MAhMdC,EAAAA,EAAAA,IA8LyH,cA9LzH1sB,EAAA,G,kBAAAA,EAAA,KAkMYqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CAlM5BhsD,SAAAqrD,EAAAA,EAAAA,KAmMc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,mBAC3BxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,qB,CApM7DjvD,SAAAqrD,EAAAA,EAAAA,KAoMiF,IACnEE,EAAA,MAAAA,EAAA,MArMdC,EAAAA,EAAAA,IAoMiF,iBApMjF1sB,EAAA,G,kBAAAA,EAAA,KAwMYqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CAxM5BhsD,SAAAqrD,EAAAA,EAAAA,KAyMc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,2CAC3BxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,6C,CA1M7DjvD,SAAAqrD,EAAAA,EAAAA,KA0MyG,IAC3FE,EAAA,MAAAA,EAAA,MA3MdC,EAAAA,EAAAA,IA0MyG,eA1MzG1sB,EAAA,G,kBAAAA,EAAA,KA8MYqsB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA9M5BhsD,SAAAqrD,EAAAA,EAAAA,KA+Mc,IACc,EADdF,EAAAA,EAAAA,IACciB,EAAA,CADA0C,QAAS3C,EAAA6C,kBAAkB,YAAcxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,c,CA/MtGjvD,SAAAqrD,EAAAA,EAAAA,KA+MmH,IACrGE,EAAA,MAAAA,EAAA,MAhNdC,EAAAA,EAAAA,IA+MmH,YA/MnH1sB,EAAA,G,kBAAAA,EAAA,KAmNYqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CAnN5BhsD,SAAAqrD,EAAAA,EAAAA,KAoNc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,eAC3BxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,iB,CArN7DjvD,SAAAqrD,EAAAA,EAAAA,KAqN6E,IAC/DE,EAAA,MAAAA,EAAA,MAtNdC,EAAAA,EAAAA,IAqN6E,YArN7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA2NUqsB,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CA3NrC3rD,SAAAqrD,EAAAA,EAAAA,KA4NY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CA5N7BhsD,SAAAqrD,EAAAA,EAAAA,KA6Nc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANG5jC,KAAK,UACJ6jC,QAAOjD,EAAAkD,eACR9uC,KAAK,qBACJutC,UAAW1B,EAAA4C,e,CAjO9B/uD,SAAAqrD,EAAAA,EAAAA,KAkOe,IAAoB,EAlOnCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAkOkBE,EAAAkD,gBAAc,MAlOhCvwB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAwOUqsB,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CAxOrC3rD,SAAAqrD,EAAAA,EAAAA,KAyOY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAzO7BhsD,SAAAqrD,EAAAA,EAAAA,KA0Oc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANG5jC,KAAK,UACJ6jC,QAAOjD,EAAAoD,eACRhvC,KAAK,qBACJutC,UAAW1B,EAAA4C,e,CA9O9B/uD,SAAAqrD,EAAAA,EAAAA,KA+Oe,IAAmB,EA/OlCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA+OkBE,EAAAoD,eAAa,MA/O/BzwB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAqPUqsB,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CArPrC3rD,SAAAqrD,EAAAA,EAAAA,KAsPY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAtP7BhsD,SAAAqrD,EAAAA,EAAAA,KAuPc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANG5jC,KAAK,UACJ6jC,QAAOjD,EAAAsD,kBACRlvC,KAAK,qBACJutC,UAAW1B,EAAA4C,e,CA3P9B/uD,SAAAqrD,EAAAA,EAAAA,KA4Pe,IAAsB,EA5PrCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA4PkBE,EAAAsD,kBAAgB,MA5PlC3wB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAmQUqsB,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CAnQrC3rD,SAAAqrD,EAAAA,EAAAA,KAoQY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CApQ7BhsD,SAAAqrD,EAAAA,EAAAA,KAqQc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANG5jC,KAAK,UACJ6jC,QAAOjD,EAAAwD,oBACRpvC,KAAK,qBACJutC,UAAW1B,EAAA4C,e,CAzQ9B/uD,SAAAqrD,EAAAA,EAAAA,KA0Qe,IAAuB,EA1QtCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA0QkBE,EAAAwD,mBAAiB,MA1QnC7wB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAgRUqsB,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CAhRrC3rD,SAAAqrD,EAAAA,EAAAA,KAiRY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAjR7BhsD,SAAAqrD,EAAAA,EAAAA,KAkRc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANG5jC,KAAK,SACJ6jC,QAAOjD,EAAA0D,iBACRtvC,KAAK,wBACJutC,UAAW1B,EAAA4C,eAAyC,GAAxB5C,EAAA0D,cAAc11D,Q,CAtR7D6F,SAAAqrD,EAAAA,EAAAA,KAuRe,IAAyB,EAvRxCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAuRkBE,EAAA2D,qBAAmB,MAvRrChxB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,M,WA6RU2uB,EAAAA,EAAAA,IAUWsC,EAAAA,GAAA,CAVD9tB,GAAG,QAAM,CACNkqB,EAAA6D,YAAS,WAApB/E,EAAAA,EAAAA,IAQM,OAtSlBt1C,IAAA,EA8RkCg2C,MAAM,gBAAiBwD,QAAK5D,EAAA,MAAAA,EAAA,QAAA3tD,IAAEsuD,EAAA+D,YAAA/D,EAAA+D,cAAAryD,K,EAClDguD,EAAAA,EAAAA,IAMM,OANDD,MAAM,gBAAiBwD,QAAK5D,EAAA,MAAAA,EAAA,KA/R/C2E,EAAAA,EAAAA,KA+RyC,QAAW,Y,EACpCtE,EAAAA,EAAAA,IAES,UAFDD,MAAM,eAAgBwD,QAAK5D,EAAA,MAAAA,EAAA,QAAA3tD,IAAEsuD,EAAA+D,YAAA/D,EAAA+D,cAAAryD,KAAY,OAEjD,eACAguD,EAAAA,EAAAA,IAAwB,UAApB,mBAAe,KACnBT,EAAAA,EAAAA,IAAoDgF,EAAA,CAAvCv3D,MAAOuzD,EAAAiE,QAAU3gB,KAAM,IAAK4gB,MAAM,K,wBApS/DvC,EAAAA,EAAAA,IAAA,aAAAhvB,EAAA,KA2SQqsB,EAAAA,EAAAA,IAkxBUO,EAAA,CAlxBDC,MAAM,kBAAgB,CAClB3uB,QAAMquB,EAAAA,EAAAA,KACf,IAAkDE,EAAA,MAAAA,EAAA,MAAlDK,EAAAA,EAAAA,IAAkD,OAA7CC,MAAA,wBAA2B,gBAAY,OA7SxD7rD,SAAAqrD,EAAAA,EAAAA,KAgTU,IAmtBU,EAntBVF,EAAAA,EAAAA,IAmtBUmF,EAAA,CAngCpBjE,WAgT4BF,EAAAoE,UAhT5B,sBAAAhF,EAAA,MAAAA,EAAA,IAAAgB,GAgT4BJ,EAAAoE,UAAShE,GAAEjhC,KAAK,cAAeklC,WAAWtE,EAAAuE,gB,CAhTtEzwD,SAAAqrD,EAAAA,EAAAA,KAkTY,IAsEc,EAtEdF,EAAAA,EAAAA,IAsEcuF,EAAA,CAtEDxD,MAAM,MAAMtzD,KAAK,Y,CAlT1CoG,SAAAqrD,EAAAA,EAAAA,KAmTc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnTzC3rD,SAAAqrD,EAAAA,EAAAA,KAoTgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApTjChsD,SAAAqrD,EAAAA,EAAAA,KAqTkB,IAA2F,EAA3FF,EAAAA,EAAAA,IAA2F+D,EAAA,CAAhF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyE,qB,CArTpD3wD,SAAAqrD,EAAAA,EAAAA,KAqTyE,IAAwBE,EAAA,MAAAA,EAAA,MArTjGC,EAAAA,EAAAA,IAqTyE,gCArTzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAyTcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzTzC3rD,SAAAqrD,EAAAA,EAAAA,KA0TgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1TjChsD,SAAAqrD,EAAAA,EAAAA,KA2TkB,IAA6E,EAA7EF,EAAAA,EAAAA,IAA6E+D,EAAA,CAAlE5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,gB,CA3TpD5wD,SAAAqrD,EAAAA,EAAAA,KA2TmE,IAAgBE,EAAA,MAAAA,EAAA,MA3TnFC,EAAAA,EAAAA,IA2TmE,wBA3TnE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+TcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA/TzC3rD,SAAAqrD,EAAAA,EAAAA,KAgUgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAhUjChsD,SAAAqrD,EAAAA,EAAAA,KAiUkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,+B,CAlUrC7wD,SAAAqrD,EAAAA,EAAAA,KAkUmE,IACjDE,EAAA,MAAAA,EAAA,MAnUlBC,EAAAA,EAAAA,IAkUmE,mDAlUnE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAsUcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAtUzC3rD,SAAAqrD,EAAAA,EAAAA,KAuUgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvUjChsD,SAAAqrD,EAAAA,EAAAA,KAwUkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArF5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,4B,CAxUpD9wD,SAAAqrD,EAAAA,EAAAA,KAwU+E,IAAuBE,EAAA,MAAAA,EAAA,MAxUtGC,EAAAA,EAAAA,IAwU+E,+BAxU/E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2UcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA3UzC3rD,SAAAqrD,EAAAA,EAAAA,KA4UgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA5UjChsD,SAAAqrD,EAAAA,EAAAA,KA6UkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA6E,kB,CA7UpD/wD,SAAAqrD,EAAAA,EAAAA,KA6UqE,IAAaE,EAAA,MAAAA,EAAA,MA7UlFC,EAAAA,EAAAA,IA6UqE,qBA7UrE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAgVcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhVzC3rD,SAAAqrD,EAAAA,EAAAA,KAiVgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjVjChsD,SAAAqrD,EAAAA,EAAAA,KAkVkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA8E,yB,CAlVpDhxD,SAAAqrD,EAAAA,EAAAA,KAkV4E,IAAoBE,EAAA,MAAAA,EAAA,MAlVhGC,EAAAA,EAAAA,IAkV4E,4BAlV5E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqVcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CArVzC3rD,SAAAqrD,EAAAA,EAAAA,KAsVgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAtVjChsD,SAAAqrD,EAAAA,EAAAA,KAuVkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAOjD,EAAA+E,8B,CAvVpDjxD,SAAAqrD,EAAAA,EAAAA,KAuVkF,IAChEE,EAAA,MAAAA,EAAA,MAxVlBC,EAAAA,EAAAA,IAuVkF,sCAvVlF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4VcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA5VzC3rD,SAAAqrD,EAAAA,EAAAA,KA6VgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA7VjChsD,SAAAqrD,EAAAA,EAAAA,KA8VkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAgF,6B,CA/VrClxD,SAAAqrD,EAAAA,EAAAA,KA+VkE,IAChDE,EAAA,MAAAA,EAAA,MAhWlBC,EAAAA,EAAAA,IA+VkE,6CA/VlE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAoWcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CApWzC3rD,SAAAqrD,EAAAA,EAAAA,KAqWgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CArWjChsD,SAAAqrD,EAAAA,EAAAA,KAsWkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UAAW6jC,QAAOjD,EAAAiF,0B,CAtWpDnxD,SAAAqrD,EAAAA,EAAAA,KAsW8E,IAE5DE,EAAA,MAAAA,EAAA,MAxWlBC,EAAAA,EAAAA,IAsW8E,0CAtW9E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4WcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA5WzC3rD,SAAAqrD,EAAAA,EAAAA,KA6WgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7WjChsD,SAAAqrD,EAAAA,EAAAA,KA8WkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAkF,sB,CA9WpDpxD,SAAAqrD,EAAAA,EAAAA,KA8WyE,IACvDE,EAAA,MAAAA,EAAA,MA/WlBC,EAAAA,EAAAA,IA8WyE,uCA9WzE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAkXcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAlXzC3rD,SAAAqrD,EAAAA,EAAAA,KAmXgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAnXjChsD,SAAAqrD,EAAAA,EAAAA,KAoXkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAmF,4B,CApXpDrxD,SAAAqrD,EAAAA,EAAAA,KAoX+E,IAC7DE,EAAA,MAAAA,EAAA,MArXlBC,EAAAA,EAAAA,IAoX+E,4DApX/E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0XYqsB,EAAAA,EAAAA,IAWcuF,EAAA,CAXDxD,MAAM,MAAMtzD,KAAK,Y,CA1X1CoG,SAAAqrD,EAAAA,EAAAA,KA2Xc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA3XzC3rD,SAAAqrD,EAAAA,EAAAA,KA4XgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA5XjChsD,SAAAqrD,EAAAA,EAAAA,KA6XkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE5jC,KAAK,UAAW6jC,QAAOjD,EAAAoF,gB,CA7XpDtxD,SAAAqrD,EAAAA,EAAAA,KA6XoE,IAAcE,EAAA,MAAAA,EAAA,MA7XlFC,EAAAA,EAAAA,IA6XoE,sBA7XpE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgYcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhYzC3rD,SAAAqrD,EAAAA,EAAAA,KAiYgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjYjChsD,SAAAqrD,EAAAA,EAAAA,KAkYkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3E5jC,KAAK,UAAW6jC,QAAOjD,EAAAqF,qB,CAlYpDvxD,SAAAqrD,EAAAA,EAAAA,KAkYyE,IAAmBE,EAAA,MAAAA,EAAA,MAlY5FC,EAAAA,EAAAA,IAkYyE,2BAlYzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwYYqsB,EAAAA,EAAAA,IAgDcuF,EAAA,CAhDDxD,MAAM,MAAMtzD,KAAK,2C,CAxY1CoG,SAAAqrD,EAAAA,EAAAA,KAyYc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzYzC3rD,SAAAqrD,EAAAA,EAAAA,KA0YgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1YjChsD,SAAAqrD,EAAAA,EAAAA,KA2YkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE5jC,KAAK,UAAW6jC,QAAOjD,EAAAsF,iB,CA3YpDxxD,SAAAqrD,EAAAA,EAAAA,KA2YqE,IAAkBE,EAAA,MAAAA,EAAA,MA3YvFC,EAAAA,EAAAA,IA2YqE,0BA3YrE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+YcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/YzC3rD,SAAAqrD,EAAAA,EAAAA,KAgZgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhZjChsD,SAAAqrD,EAAAA,EAAAA,KAiZkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E5jC,KAAK,UAAW6jC,QAAOjD,EAAAuF,qB,CAjZpDzxD,SAAAqrD,EAAAA,EAAAA,KAiZyE,IAAsBE,EAAA,MAAAA,EAAA,MAjZ/FC,EAAAA,EAAAA,IAiZyE,8BAjZzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAqZcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CArZzC3rD,SAAAqrD,EAAAA,EAAAA,KAsZgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAtZjChsD,SAAAqrD,EAAAA,EAAAA,KAuZkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAwF,8B,CAxZrC1xD,SAAAqrD,EAAAA,EAAAA,KAwZmE,IACjDE,EAAA,MAAAA,EAAA,MAzZlBC,EAAAA,EAAAA,IAwZmE,wCAxZnE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6ZcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7ZzC3rD,SAAAqrD,EAAAA,EAAAA,KA8ZgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9ZjChsD,SAAAqrD,EAAAA,EAAAA,KA+ZkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyF,yB,CA/ZpD3xD,SAAAqrD,EAAAA,EAAAA,KA+Z6E,IAAuBE,EAAA,MAAAA,EAAA,MA/ZpGC,EAAAA,EAAAA,IA+Z6E,+BA/Z7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmacqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAnazC3rD,SAAAqrD,EAAAA,EAAAA,KAoagB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CApajChsD,SAAAqrD,EAAAA,EAAAA,KAqakB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA0F,kC,CAtarC5xD,SAAAqrD,EAAAA,EAAAA,KAsauE,IACrDE,EAAA,MAAAA,EAAA,MAvalBC,EAAAA,EAAAA,IAsauE,yCAtavE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA2acqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA3azC3rD,SAAAqrD,EAAAA,EAAAA,KA4agB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA5ajChsD,SAAAqrD,EAAAA,EAAAA,KA6akB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF5jC,KAAK,UAAW6jC,QAAOjD,EAAA2F,4B,CA7apD7xD,SAAAqrD,EAAAA,EAAAA,KA6agF,IAA0BE,EAAA,MAAAA,EAAA,MA7a1GC,EAAAA,EAAAA,IA6agF,kCA7ahF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAibcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAjbzC3rD,SAAAqrD,EAAAA,EAAAA,KAkbgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlbjChsD,SAAAqrD,EAAAA,EAAAA,KAmbkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA4F,qC,CApbrC9xD,SAAAqrD,EAAAA,EAAAA,KAob0E,IACxDE,EAAA,MAAAA,EAAA,MArblBC,EAAAA,EAAAA,IAob0E,wCApb1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2bYqsB,EAAAA,EAAAA,IAgDcuF,EAAA,CAhDDxD,MAAM,eAAetzD,KAAK,yC,CA3bnDoG,SAAAqrD,EAAAA,EAAAA,KA4bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5bzC3rD,SAAAqrD,EAAAA,EAAAA,KA6bgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7bjChsD,SAAAqrD,EAAAA,EAAAA,KA8bkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE5jC,KAAK,UAAW6jC,QAAOjD,EAAAsF,iB,CA9bpDxxD,SAAAqrD,EAAAA,EAAAA,KA8bqE,IAAkBE,EAAA,MAAAA,EAAA,MA9bvFC,EAAAA,EAAAA,IA8bqE,0BA9brE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAkccqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlczC3rD,SAAAqrD,EAAAA,EAAAA,KAmcgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAncjChsD,SAAAqrD,EAAAA,EAAAA,KAockB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E5jC,KAAK,UAAW6jC,QAAOjD,EAAAuF,qB,CApcpDzxD,SAAAqrD,EAAAA,EAAAA,KAocyE,IAAsBE,EAAA,MAAAA,EAAA,MApc/FC,EAAAA,EAAAA,IAocyE,8BApczE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwccqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAxczC3rD,SAAAqrD,EAAAA,EAAAA,KAycgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzcjChsD,SAAAqrD,EAAAA,EAAAA,KA0ckB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAwF,8B,CA3crC1xD,SAAAqrD,EAAAA,EAAAA,KA2cmE,IACjDE,EAAA,MAAAA,EAAA,MA5clBC,EAAAA,EAAAA,IA2cmE,wCA3cnE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgdcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhdzC3rD,SAAAqrD,EAAAA,EAAAA,KAidgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjdjChsD,SAAAqrD,EAAAA,EAAAA,KAkdkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyF,yB,CAldpD3xD,SAAAqrD,EAAAA,EAAAA,KAkd6E,IAAuBE,EAAA,MAAAA,EAAA,MAldpGC,EAAAA,EAAAA,IAkd6E,+BAld7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAsdcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAtdzC3rD,SAAAqrD,EAAAA,EAAAA,KAudgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAvdjChsD,SAAAqrD,EAAAA,EAAAA,KAwdkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA0F,kC,CAzdrC5xD,SAAAqrD,EAAAA,EAAAA,KAyduE,IACrDE,EAAA,MAAAA,EAAA,MA1dlBC,EAAAA,EAAAA,IAyduE,yCAzdvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA8dcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9dzC3rD,SAAAqrD,EAAAA,EAAAA,KA+dgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/djChsD,SAAAqrD,EAAAA,EAAAA,KAgekB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF5jC,KAAK,UAAW6jC,QAAOjD,EAAA2F,4B,CAhepD7xD,SAAAqrD,EAAAA,EAAAA,KAgegF,IAA0BE,EAAA,MAAAA,EAAA,MAhe1GC,EAAAA,EAAAA,IAgegF,kCAhehF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAoecqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CApezC3rD,SAAAqrD,EAAAA,EAAAA,KAqegB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CArejChsD,SAAAqrD,EAAAA,EAAAA,KAsekB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA4F,qC,CAverC9xD,SAAAqrD,EAAAA,EAAAA,KAue0E,IACxDE,EAAA,MAAAA,EAAA,MAxelBC,EAAAA,EAAAA,IAue0E,wCAve1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA6eYqsB,EAAAA,EAAAA,IAgDcuF,EAAA,CAhDDxD,MAAM,eAAetzD,KAAK,yC,CA7enDoG,SAAAqrD,EAAAA,EAAAA,KA8ec,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9ezC3rD,SAAAqrD,EAAAA,EAAAA,KA+egB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/ejChsD,SAAAqrD,EAAAA,EAAAA,KAgfkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE5jC,KAAK,UAAW6jC,QAAOjD,EAAAsF,iB,CAhfpDxxD,SAAAqrD,EAAAA,EAAAA,KAgfqE,IAAkBE,EAAA,OAAAA,EAAA,OAhfvFC,EAAAA,EAAAA,IAgfqE,0BAhfrE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAofcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CApfzC3rD,SAAAqrD,EAAAA,EAAAA,KAqfgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArfjChsD,SAAAqrD,EAAAA,EAAAA,KAsfkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E5jC,KAAK,UAAW6jC,QAAOjD,EAAAuF,qB,CAtfpDzxD,SAAAqrD,EAAAA,EAAAA,KAsfyE,IAAsBE,EAAA,OAAAA,EAAA,OAtf/FC,EAAAA,EAAAA,IAsfyE,8BAtfzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA0fcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA1fzC3rD,SAAAqrD,EAAAA,EAAAA,KA2fgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA3fjChsD,SAAAqrD,EAAAA,EAAAA,KA4fkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAwF,8B,CA7frC1xD,SAAAqrD,EAAAA,EAAAA,KA6fmE,IACjDE,EAAA,OAAAA,EAAA,OA9flBC,EAAAA,EAAAA,IA6fmE,wCA7fnE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAkgBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlgBzC3rD,SAAAqrD,EAAAA,EAAAA,KAmgBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAngBjChsD,SAAAqrD,EAAAA,EAAAA,KAogBkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyF,yB,CApgBpD3xD,SAAAqrD,EAAAA,EAAAA,KAogB6E,IAAuBE,EAAA,OAAAA,EAAA,OApgBpGC,EAAAA,EAAAA,IAogB6E,+BApgB7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwgBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAxgBzC3rD,SAAAqrD,EAAAA,EAAAA,KAygBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzgBjChsD,SAAAqrD,EAAAA,EAAAA,KA0gBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA0F,kC,CA3gBrC5xD,SAAAqrD,EAAAA,EAAAA,KA2gBuE,IACrDE,EAAA,OAAAA,EAAA,OA5gBlBC,EAAAA,EAAAA,IA2gBuE,yCA3gBvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAghBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhhBzC3rD,SAAAqrD,EAAAA,EAAAA,KAihBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjhBjChsD,SAAAqrD,EAAAA,EAAAA,KAkhBkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF5jC,KAAK,UAAW6jC,QAAOjD,EAAA2F,4B,CAlhBpD7xD,SAAAqrD,EAAAA,EAAAA,KAkhBgF,IAA0BE,EAAA,OAAAA,EAAA,OAlhB1GC,EAAAA,EAAAA,IAkhBgF,kCAlhBhF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAshBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAthBzC3rD,SAAAqrD,EAAAA,EAAAA,KAuhBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAvhBjChsD,SAAAqrD,EAAAA,EAAAA,KAwhBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA4F,qC,CAzhBrC9xD,SAAAqrD,EAAAA,EAAAA,KAyhB0E,IACxDE,EAAA,OAAAA,EAAA,OA1hBlBC,EAAAA,EAAAA,IAyhB0E,wCAzhB1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+hBYqsB,EAAAA,EAAAA,IAgDcuF,EAAA,CAhDDxD,MAAM,kBAAkBtzD,KAAK,4C,CA/hBtDoG,SAAAqrD,EAAAA,EAAAA,KAgiBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhiBzC3rD,SAAAqrD,EAAAA,EAAAA,KAiiBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjiBjChsD,SAAAqrD,EAAAA,EAAAA,KAkiBkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE5jC,KAAK,UAAW6jC,QAAOjD,EAAAsF,iB,CAliBpDxxD,SAAAqrD,EAAAA,EAAAA,KAkiBqE,IAAkBE,EAAA,OAAAA,EAAA,OAliBvFC,EAAAA,EAAAA,IAkiBqE,0BAliBrE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAsiBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAtiBzC3rD,SAAAqrD,EAAAA,EAAAA,KAuiBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAviBjChsD,SAAAqrD,EAAAA,EAAAA,KAwiBkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E5jC,KAAK,UAAW6jC,QAAOjD,EAAAuF,qB,CAxiBpDzxD,SAAAqrD,EAAAA,EAAAA,KAwiByE,IAAsBE,EAAA,OAAAA,EAAA,OAxiB/FC,EAAAA,EAAAA,IAwiByE,8BAxiBzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4iBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA5iBzC3rD,SAAAqrD,EAAAA,EAAAA,KA6iBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA7iBjChsD,SAAAqrD,EAAAA,EAAAA,KA8iBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAwF,8B,CA/iBrC1xD,SAAAqrD,EAAAA,EAAAA,KA+iBmE,IACjDE,EAAA,OAAAA,EAAA,OAhjBlBC,EAAAA,EAAAA,IA+iBmE,wCA/iBnE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAojBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CApjBzC3rD,SAAAqrD,EAAAA,EAAAA,KAqjBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArjBjChsD,SAAAqrD,EAAAA,EAAAA,KAsjBkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyF,yB,CAtjBpD3xD,SAAAqrD,EAAAA,EAAAA,KAsjB6E,IAAuBE,EAAA,OAAAA,EAAA,OAtjBpGC,EAAAA,EAAAA,IAsjB6E,+BAtjB7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA0jBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA1jBzC3rD,SAAAqrD,EAAAA,EAAAA,KA2jBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA3jBjChsD,SAAAqrD,EAAAA,EAAAA,KA4jBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA0F,kC,CA7jBrC5xD,SAAAqrD,EAAAA,EAAAA,KA6jBuE,IACrDE,EAAA,OAAAA,EAAA,OA9jBlBC,EAAAA,EAAAA,IA6jBuE,yCA7jBvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAkkBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlkBzC3rD,SAAAqrD,EAAAA,EAAAA,KAmkBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnkBjChsD,SAAAqrD,EAAAA,EAAAA,KAokBkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF5jC,KAAK,UAAW6jC,QAAOjD,EAAA2F,4B,CApkBpD7xD,SAAAqrD,EAAAA,EAAAA,KAokBgF,IAA0BE,EAAA,OAAAA,EAAA,OApkB1GC,EAAAA,EAAAA,IAokBgF,kCApkBhF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwkBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAxkBzC3rD,SAAAqrD,EAAAA,EAAAA,KAykBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzkBjChsD,SAAAqrD,EAAAA,EAAAA,KA0kBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA4F,qC,CA3kBrC9xD,SAAAqrD,EAAAA,EAAAA,KA2kB0E,IACxDE,EAAA,OAAAA,EAAA,OA5kBlBC,EAAAA,EAAAA,IA2kB0E,wCA3kB1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAklBYqsB,EAAAA,EAAAA,IAEcuF,EAAA,CAFDxD,MAAM,MAAMtzD,KAAK,e,CAllB1CoG,SAAAqrD,EAAAA,EAAAA,KAmlBc,IAAsE,EAAtEF,EAAAA,EAAAA,IAAsE4G,EAAA,CAA3DC,4BAA2B9F,EAAA+F,+BAA6B,2CAnlBjFnzB,EAAA,KAslBYqsB,EAAAA,EAAAA,IAEcuF,EAAA,CAFDxD,MAAM,MAAMtzD,KAAK,e,CAtlB1CoG,SAAAqrD,EAAAA,EAAAA,KAulBc,IAAsE,EAAtEF,EAAAA,EAAAA,IAAsE+G,EAAA,CAA3DF,4BAA2B9F,EAAAiG,+BAA6B,2CAvlBjFrzB,EAAA,KA2lBYqsB,EAAAA,EAAAA,IAEcuF,EAAA,CAFDxD,MAAM,UAAUtzD,KAAK,mB,CA3lB9CoG,SAAAqrD,EAAAA,EAAAA,KA4lBc,IAA8E,EAA9EF,EAAAA,EAAAA,IAA8EiH,EAAA,CAA/DJ,4BAA2B9F,EAAAmG,mCAAiC,2CA5lBzFvzB,EAAA,KA+lBYqsB,EAAAA,EAAAA,IAIcuF,EAAA,CAJDxD,MAAM,OAAOtzD,KAAK,gB,CA/lB3CoG,SAAAqrD,EAAAA,EAAAA,KAgmBc,IAE4D,EAF5DF,EAAAA,EAAAA,IAE4DmH,EAAA,CADvDN,4BAA2B9F,EAAAqG,+BAC3BC,4BAA2BtG,EAAAuG,2B,yEAlmB9C3zB,EAAA,KAqmBYqsB,EAAAA,EAAAA,IAqBcuF,EAAA,CArBDxD,MAAM,QAAQtzD,KAAK,iB,CArmB5CoG,SAAAqrD,EAAAA,EAAAA,KAsmBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAtmBzC3rD,SAAAqrD,EAAAA,EAAAA,KAumBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvmBjChsD,SAAAqrD,EAAAA,EAAAA,KAwmBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAAwG,mB,CAxmBpD1yD,SAAAqrD,EAAAA,EAAAA,KAwmBuE,IAAiBE,EAAA,OAAAA,EAAA,OAxmBxFC,EAAAA,EAAAA,IAwmBuE,yBAxmBvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4mBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5mBzC3rD,SAAAqrD,EAAAA,EAAAA,KA6mBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7mBjChsD,SAAAqrD,EAAAA,EAAAA,KA8mBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E5jC,KAAK,UAAW6jC,QAAOjD,EAAAyG,uB,CA9mBpD3yD,SAAAqrD,EAAAA,EAAAA,KA8mB2E,IAAqBE,EAAA,OAAAA,EAAA,OA9mBhGC,EAAAA,EAAAA,IA8mB2E,6BA9mB3E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAknBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAlnBzC3rD,SAAAqrD,EAAAA,EAAAA,KAmnBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnnBjChsD,SAAAqrD,EAAAA,EAAAA,KAonBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA0G,gC,CArnBrC5yD,SAAAqrD,EAAAA,EAAAA,KAqnBqE,IACnDE,EAAA,OAAAA,EAAA,OAtnBlBC,EAAAA,EAAAA,IAqnBqE,uCArnBrE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA4nBYqsB,EAAAA,EAAAA,IAmBcuF,EAAA,CAnBDxD,MAAM,SAAStzD,KAAK,sB,CA5nB7CoG,SAAAqrD,EAAAA,EAAAA,KA6nBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7nBzC3rD,SAAAqrD,EAAAA,EAAAA,KA8nBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9nBjChsD,SAAAqrD,EAAAA,EAAAA,KA+nBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E5jC,KAAK,UAAW6jC,QAAOjD,EAAA2G,sB,CA/nBpD7yD,SAAAqrD,EAAAA,EAAAA,KA+nB0E,IAAoBE,EAAA,OAAAA,EAAA,OA/nB9FC,EAAAA,EAAAA,IA+nB0E,4BA/nB1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmoBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnoBzC3rD,SAAAqrD,EAAAA,EAAAA,KAooBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApoBjChsD,SAAAqrD,EAAAA,EAAAA,KAqoBkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArE5jC,KAAK,UAAW6jC,QAAOjD,EAAA4G,kB,CAroBpD9yD,SAAAqrD,EAAAA,EAAAA,KAqoBsE,IAAgBE,EAAA,OAAAA,EAAA,OAroBtFC,EAAAA,EAAAA,IAqoBsE,wBAroBtE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAyoBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzoBzC3rD,SAAAqrD,EAAAA,EAAAA,KA0oBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1oBjChsD,SAAAqrD,EAAAA,EAAAA,KA2oBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAA6G,mB,CA3oBpD/yD,SAAAqrD,EAAAA,EAAAA,KA2oBuE,IAAiBE,EAAA,OAAAA,EAAA,OA3oBxFC,EAAAA,EAAAA,IA2oBuE,yBA3oBvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAkpBYqsB,EAAAA,EAAAA,IAsFcuF,EAAA,CAtFDxD,MAAM,UAAUtzD,KAAK,c,CAlpB9CoG,SAAAqrD,EAAAA,EAAAA,KAopBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAppBzC3rD,SAAAqrD,EAAAA,EAAAA,KAqpBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArpBjChsD,SAAAqrD,EAAAA,EAAAA,KAspBkB,IAA+F,EAA/FF,EAAAA,EAAAA,IAA+F+D,EAAA,CAApF5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA8G,uB,CAtpBpDhzD,SAAAqrD,EAAAA,EAAAA,KAspB0E,IAA2BE,EAAA,OAAAA,EAAA,OAtpBrGC,EAAAA,EAAAA,IAspB0E,mCAtpB1E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0pBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1pBzC3rD,SAAAqrD,EAAAA,EAAAA,KA2pBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3pBjChsD,SAAAqrD,EAAAA,EAAAA,KA4pBkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3E5jC,KAAK,UAAW6jC,QAAOjD,EAAAyE,qB,CA5pBpD3wD,SAAAqrD,EAAAA,EAAAA,KA4pByE,IAAmBE,EAAA,OAAAA,EAAA,OA5pB5FC,EAAAA,EAAAA,IA4pByE,2BA5pBzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgqBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhqBzC3rD,SAAAqrD,EAAAA,EAAAA,KAiqBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjqBjChsD,SAAAqrD,EAAAA,EAAAA,KAkqBkB,IAAwE,EAAxEF,EAAAA,EAAAA,IAAwE+D,EAAA,CAA7D5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,gB,CAlqBpD5wD,SAAAqrD,EAAAA,EAAAA,KAkqBmE,IAAWE,EAAA,OAAAA,EAAA,OAlqB9EC,EAAAA,EAAAA,IAkqBmE,mBAlqBnE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAsqBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAtqBzC3rD,SAAAqrD,EAAAA,EAAAA,KAuqBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvqBjChsD,SAAAqrD,EAAAA,EAAAA,KAwqBkB,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3F5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,+B,CAxqBpD7wD,SAAAqrD,EAAAA,EAAAA,KAwqBkF,IAA0BE,EAAA,OAAAA,EAAA,OAxqB5GC,EAAAA,EAAAA,IAwqBkF,kCAxqBlF1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2qBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA3qBzC3rD,SAAAqrD,EAAAA,EAAAA,KA4qBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA5qBjChsD,SAAAqrD,EAAAA,EAAAA,KA6qBkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArF5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,4B,CA7qBpD9wD,SAAAqrD,EAAAA,EAAAA,KA6qB+E,IAAuBE,EAAA,OAAAA,EAAA,OA7qBtGC,EAAAA,EAAAA,IA6qB+E,+BA7qB/E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAgrBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhrBzC3rD,SAAAqrD,EAAAA,EAAAA,KAirBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjrBjChsD,SAAAqrD,EAAAA,EAAAA,KAkrBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA6E,kB,CAlrBpD/wD,SAAAqrD,EAAAA,EAAAA,KAkrBqE,IAAaE,EAAA,OAAAA,EAAA,OAlrBlFC,EAAAA,EAAAA,IAkrBqE,qBAlrBrE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqrBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArrBzC3rD,SAAAqrD,EAAAA,EAAAA,KAsrBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtrBjChsD,SAAAqrD,EAAAA,EAAAA,KAurBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA8E,yB,CAvrBpDhxD,SAAAqrD,EAAAA,EAAAA,KAurB4E,IAAoBE,EAAA,OAAAA,EAAA,OAvrBhGC,EAAAA,EAAAA,IAurB4E,4BAvrB5E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0rBcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA1rBzC3rD,SAAAqrD,EAAAA,EAAAA,KA2rBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA3rBjChsD,SAAAqrD,EAAAA,EAAAA,KA4rBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAOjD,EAAA+E,8B,CA5rBpDjxD,SAAAqrD,EAAAA,EAAAA,KA4rBkF,IAChEE,EAAA,OAAAA,EAAA,OA7rBlBC,EAAAA,EAAAA,IA4rBkF,sCA5rBlF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAisBcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAjsBzC3rD,SAAAqrD,EAAAA,EAAAA,KAksBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAlsBjChsD,SAAAqrD,EAAAA,EAAAA,KAmsBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAOjD,EAAAgF,6B,CAnsBpDlxD,SAAAqrD,EAAAA,EAAAA,KAmsBiF,IAC/DE,EAAA,OAAAA,EAAA,OApsBlBC,EAAAA,EAAAA,IAmsBiF,2CAnsBjF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwsBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAxsBzC3rD,SAAAqrD,EAAAA,EAAAA,KAysBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzsBjChsD,SAAAqrD,EAAAA,EAAAA,KA0sBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UAAW6jC,QAAOjD,EAAAiF,0B,CA1sBpDnxD,SAAAqrD,EAAAA,EAAAA,KA0sB8E,IAE5DE,EAAA,OAAAA,EAAA,OA5sBlBC,EAAAA,EAAAA,IA0sB8E,8CA1sB9E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgtBcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAhtBzC3rD,SAAAqrD,EAAAA,EAAAA,KAitBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAjtBjChsD,SAAAqrD,EAAAA,EAAAA,KAktBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAkF,sB,CAltBpDpxD,SAAAqrD,EAAAA,EAAAA,KAktByE,IACvDE,EAAA,OAAAA,EAAA,OAntBlBC,EAAAA,EAAAA,IAktByE,oCAltBzE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAutBcqsB,EAAAA,EAAAA,IAOSW,EAAA,CAPA6C,OAAQ,GAAIhD,MAAM,c,CAvtBzC3rD,SAAAqrD,EAAAA,EAAAA,KAwtBgB,IAKS,EALTF,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CAxtBjChsD,SAAAqrD,EAAAA,EAAAA,KAytBkB,IAGC,EAHDF,EAAAA,EAAAA,IAGC+D,EAAA,CAHU5jC,KAAK,UAAW6jC,QAAOjD,EAAA+E,8B,CAztBpDjxD,SAAAqrD,EAAAA,EAAAA,KA0tBmB,IACDE,EAAA,OAAAA,EAAA,OA3tBlBC,EAAAA,EAAAA,IA0tBmB,oCA1tBnB1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAguBcqsB,EAAAA,EAAAA,IAOSW,EAAA,CAPA6C,OAAQ,GAAIhD,MAAM,c,CAhuBzC3rD,SAAAqrD,EAAAA,EAAAA,KAiuBgB,IAKS,EALTF,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CAjuBjChsD,SAAAqrD,EAAAA,EAAAA,KAkuBkB,IAGC,EAHDF,EAAAA,EAAAA,IAGC+D,EAAA,CAHU5jC,KAAK,UAAW6jC,QAAOjD,EAAAgF,6B,CAluBpDlxD,SAAAqrD,EAAAA,EAAAA,KAmuBmB,IACDE,EAAA,OAAAA,EAAA,OApuBlBC,EAAAA,EAAAA,IAmuBmB,oCAnuBnB1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2uBYqsB,EAAAA,EAAAA,IAyDcuF,EAAA,CAzDDxD,MAAM,MAAMtzD,KAAK,a,CA3uB1CoG,SAAAqrD,EAAAA,EAAAA,KA4uBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5uBzC3rD,SAAAqrD,EAAAA,EAAAA,KA6uBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7uBjChsD,SAAAqrD,EAAAA,EAAAA,KA8uBkB,IAA2F,EAA3FF,EAAAA,EAAAA,IAA2F+D,EAAA,CAAhF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyE,qB,CA9uBpD3wD,SAAAqrD,EAAAA,EAAAA,KA8uByE,IAAwBE,EAAA,OAAAA,EAAA,OA9uBjGC,EAAAA,EAAAA,IA8uByE,gCA9uBzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAkvBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlvBzC3rD,SAAAqrD,EAAAA,EAAAA,KAmvBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnvBjChsD,SAAAqrD,EAAAA,EAAAA,KAovBkB,IAA6E,EAA7EF,EAAAA,EAAAA,IAA6E+D,EAAA,CAAlE5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,gB,CApvBpD5wD,SAAAqrD,EAAAA,EAAAA,KAovBmE,IAAgBE,EAAA,OAAAA,EAAA,OApvBnFC,EAAAA,EAAAA,IAovBmE,wBApvBnE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwvBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAxvBzC3rD,SAAAqrD,EAAAA,EAAAA,KAyvBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzvBjChsD,SAAAqrD,EAAAA,EAAAA,KA0vBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,+B,CA3vBrC7wD,SAAAqrD,EAAAA,EAAAA,KA2vBmE,IACjDE,EAAA,OAAAA,EAAA,OA5vBlBC,EAAAA,EAAAA,IA2vBmE,kDA3vBnE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+vBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/vBzC3rD,SAAAqrD,EAAAA,EAAAA,KAgwBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhwBjChsD,SAAAqrD,EAAAA,EAAAA,KAiwBkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArF5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,4B,CAjwBpD9wD,SAAAqrD,EAAAA,EAAAA,KAiwB+E,IAAuBE,EAAA,OAAAA,EAAA,OAjwBtGC,EAAAA,EAAAA,IAiwB+E,+BAjwB/E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAowBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CApwBzC3rD,SAAAqrD,EAAAA,EAAAA,KAqwBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArwBjChsD,SAAAqrD,EAAAA,EAAAA,KAswBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA6E,kB,CAtwBpD/wD,SAAAqrD,EAAAA,EAAAA,KAswBqE,IAAaE,EAAA,OAAAA,EAAA,OAtwBlFC,EAAAA,EAAAA,IAswBqE,qBAtwBrE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAywBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzwBzC3rD,SAAAqrD,EAAAA,EAAAA,KA0wBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1wBjChsD,SAAAqrD,EAAAA,EAAAA,KA2wBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA8E,yB,CA3wBpDhxD,SAAAqrD,EAAAA,EAAAA,KA2wB4E,IAAoBE,EAAA,OAAAA,EAAA,OA3wBhGC,EAAAA,EAAAA,IA2wB4E,4BA3wB5E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA8wBcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA9wBzC3rD,SAAAqrD,EAAAA,EAAAA,KA+wBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA/wBjChsD,SAAAqrD,EAAAA,EAAAA,KAgxBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAOjD,EAAA+E,8B,CAhxBpDjxD,SAAAqrD,EAAAA,EAAAA,KAgxBkF,IAChEE,EAAA,OAAAA,EAAA,OAjxBlBC,EAAAA,EAAAA,IAgxBkF,sCAhxBlF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAqxBcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CArxBzC3rD,SAAAqrD,EAAAA,EAAAA,KAsxBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAtxBjChsD,SAAAqrD,EAAAA,EAAAA,KAuxBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAgF,6B,CAxxBrClxD,SAAAqrD,EAAAA,EAAAA,KAwxBkE,IAChDE,EAAA,OAAAA,EAAA,OAzxBlBC,EAAAA,EAAAA,IAwxBkE,0CAxxBlE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6xBcqsB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA7xBzC3rD,SAAAqrD,EAAAA,EAAAA,KA8xBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA9xBjChsD,SAAAqrD,EAAAA,EAAAA,KA+xBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAkF,sB,CA/xBpDpxD,SAAAqrD,EAAAA,EAAAA,KA+xByE,IACvDE,EAAA,OAAAA,EAAA,OAhyBlBC,EAAAA,EAAAA,IA+xByE,mCA/xBzE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAsyBYqsB,EAAAA,EAAAA,IA4BcuF,EAAA,CA5BDxD,MAAM,OAAOtzD,KAAK,c,CAtyB3CoG,SAAAqrD,EAAAA,EAAAA,KAuyBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAvyBzC3rD,SAAAqrD,EAAAA,EAAAA,KAwyBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAxyBjChsD,SAAAqrD,EAAAA,EAAAA,KAyyBkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3E5jC,KAAK,UAAW6jC,QAAOjD,EAAAyE,qB,CAzyBpD3wD,SAAAqrD,EAAAA,EAAAA,KAyyByE,IAAmBE,EAAA,OAAAA,EAAA,OAzyB5FC,EAAAA,EAAAA,IAyyByE,2BAzyBzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6yBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7yBzC3rD,SAAAqrD,EAAAA,EAAAA,KA8yBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9yBjChsD,SAAAqrD,EAAAA,EAAAA,KA+yBkB,IAAwE,EAAxEF,EAAAA,EAAAA,IAAwE+D,EAAA,CAA7D5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,gB,CA/yBpD5wD,SAAAqrD,EAAAA,EAAAA,KA+yBmE,IAAWE,EAAA,OAAAA,EAAA,OA/yB9EC,EAAAA,EAAAA,IA+yBmE,mBA/yBnE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmzBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnzBzC3rD,SAAAqrD,EAAAA,EAAAA,KAozBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApzBjChsD,SAAAqrD,EAAAA,EAAAA,KAqzBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA6E,kB,CArzBpD/wD,SAAAqrD,EAAAA,EAAAA,KAqzBqE,IAAaE,EAAA,OAAAA,EAAA,OArzBlFC,EAAAA,EAAAA,IAqzBqE,qBArzBrE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwzBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAxzBzC3rD,SAAAqrD,EAAAA,EAAAA,KAyzBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzzBjChsD,SAAAqrD,EAAAA,EAAAA,KA0zBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA8E,yB,CA1zBpDhxD,SAAAqrD,EAAAA,EAAAA,KA0zB4E,IAAoBE,EAAA,OAAAA,EAAA,OA1zBhGC,EAAAA,EAAAA,IA0zB4E,4BA1zB5E1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA6zBcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7zBzC3rD,SAAAqrD,EAAAA,EAAAA,KA8zBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9zBjChsD,SAAAqrD,EAAAA,EAAAA,KA+zBkB,IAAiG,EAAjGF,EAAAA,EAAAA,IAAiG+D,EAAA,CAAtF5jC,KAAK,UAAW6jC,QAAOjD,EAAA+G,0B,CA/zBpDjzD,SAAAqrD,EAAAA,EAAAA,KA+zB8E,IAAyBE,EAAA,OAAAA,EAAA,OA/zBvGC,EAAAA,EAAAA,IA+zB8E,iCA/zB9E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAo0BYqsB,EAAAA,EAAAA,IAmBcuF,EAAA,CAnBDxD,MAAM,OAAOtzD,KAAK,e,CAp0B3CoG,SAAAqrD,EAAAA,EAAAA,KAs0Bc,IAAyH,kBAAzHO,EAAAA,EAAAA,IAAyH,OAApHC,MAAA,mCAAsC,4EAAwE,KACnHV,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAv0BzC3rD,SAAAqrD,EAAAA,EAAAA,KAw0BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAx0BjChsD,SAAAqrD,EAAAA,EAAAA,KAy0BkB,IAAkG,EAAlGF,EAAAA,EAAAA,IAAkG+D,EAAA,CAAvF5jC,KAAK,UAAW6jC,QAAOjD,EAAAgH,sB,CAz0BpDlzD,SAAAqrD,EAAAA,EAAAA,KAy0B0E,IAA8BE,EAAA,OAAAA,EAAA,OAz0BxGC,EAAAA,EAAAA,IAy0B0E,sCAz0B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA40BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA50BzC3rD,SAAAqrD,EAAAA,EAAAA,KA60BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA70BjChsD,SAAAqrD,EAAAA,EAAAA,KA80BkB,IAAiH,EAAjHF,EAAAA,EAAAA,IAAiH+D,EAAA,CAAtG5jC,KAAK,UAAW6jC,QAAOjD,EAAAiH,2B,CA90BpDnzD,SAAAqrD,EAAAA,EAAAA,KA80B+E,IAAwCE,EAAA,OAAAA,EAAA,OA90BvHC,EAAAA,EAAAA,IA80B+E,gDA90B/E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAi1BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAj1BzC3rD,SAAAqrD,EAAAA,EAAAA,KAk1BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAl1BjChsD,SAAAqrD,EAAAA,EAAAA,KAm1BkB,IAAuH,EAAvHF,EAAAA,EAAAA,IAAuH+D,EAAA,CAA5G5jC,KAAK,UAAW6jC,QAAOjD,EAAAkH,qC,CAn1BpDpzD,SAAAqrD,EAAAA,EAAAA,KAm1ByF,IAAoCE,EAAA,OAAAA,EAAA,OAn1B7HC,EAAAA,EAAAA,IAm1ByF,4CAn1BzF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA01BYqsB,EAAAA,EAAAA,IAgCcuF,EAAA,CAhCDxD,MAAM,gBAAgBtzD,KAAK,gB,CA11BpDoG,SAAAqrD,EAAAA,EAAAA,KA21Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA31BzC3rD,SAAAqrD,EAAAA,EAAAA,KA41BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA51BjChsD,SAAAqrD,EAAAA,EAAAA,KA61BkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE5jC,KAAK,UAAW6jC,QAAOjD,EAAAsF,iB,CA71BpDxxD,SAAAqrD,EAAAA,EAAAA,KA61BqE,IAAkBE,EAAA,OAAAA,EAAA,OA71BvFC,EAAAA,EAAAA,IA61BqE,0BA71BrE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAi2BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAj2BzC3rD,SAAAqrD,EAAAA,EAAAA,KAk2BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAl2BjChsD,SAAAqrD,EAAAA,EAAAA,KAm2BkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E5jC,KAAK,UAAW6jC,QAAOjD,EAAAuF,qB,CAn2BpDzxD,SAAAqrD,EAAAA,EAAAA,KAm2ByE,IAAsBE,EAAA,OAAAA,EAAA,OAn2B/FC,EAAAA,EAAAA,IAm2ByE,8BAn2BzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAu2BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAv2BzC3rD,SAAAqrD,EAAAA,EAAAA,KAw2BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAx2BjChsD,SAAAqrD,EAAAA,EAAAA,KAy2BkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyF,yB,CAz2BpD3xD,SAAAqrD,EAAAA,EAAAA,KAy2B6E,IAAuBE,EAAA,OAAAA,EAAA,OAz2BpGC,EAAAA,EAAAA,IAy2B6E,+BAz2B7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA62BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA72BzC3rD,SAAAqrD,EAAAA,EAAAA,KA82BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA92BjChsD,SAAAqrD,EAAAA,EAAAA,KA+2BkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF5jC,KAAK,UAAW6jC,QAAOjD,EAAA2F,4B,CA/2BpD7xD,SAAAqrD,EAAAA,EAAAA,KA+2BgF,IAA0BE,EAAA,OAAAA,EAAA,OA/2B1GC,EAAAA,EAAAA,IA+2BgF,kCA/2BhF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAm3BcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAn3BzC3rD,SAAAqrD,EAAAA,EAAAA,KAo3BgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAp3BjChsD,SAAAqrD,EAAAA,EAAAA,KAq3BkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA4F,qC,CAt3BrC9xD,SAAAqrD,EAAAA,EAAAA,KAs3B0E,IACxDE,EAAA,OAAAA,EAAA,OAv3BlBC,EAAAA,EAAAA,IAs3B0E,wCAt3B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA43BYqsB,EAAAA,EAAAA,IAgCcuF,EAAA,CAhCDxD,MAAM,gBAAgBtzD,KAAK,0C,CA53BpDoG,SAAAqrD,EAAAA,EAAAA,KA63Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA73BzC3rD,SAAAqrD,EAAAA,EAAAA,KA83BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA93BjChsD,SAAAqrD,EAAAA,EAAAA,KA+3BkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE5jC,KAAK,UAAW6jC,QAAOjD,EAAAsF,iB,CA/3BpDxxD,SAAAqrD,EAAAA,EAAAA,KA+3BqE,IAAkBE,EAAA,OAAAA,EAAA,OA/3BvFC,EAAAA,EAAAA,IA+3BqE,0BA/3BrE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAm4BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAn4BzC3rD,SAAAqrD,EAAAA,EAAAA,KAo4BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAp4BjChsD,SAAAqrD,EAAAA,EAAAA,KAq4BkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E5jC,KAAK,UAAW6jC,QAAOjD,EAAAuF,qB,CAr4BpDzxD,SAAAqrD,EAAAA,EAAAA,KAq4ByE,IAAsBE,EAAA,OAAAA,EAAA,OAr4B/FC,EAAAA,EAAAA,IAq4ByE,8BAr4BzE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAy4BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAz4BzC3rD,SAAAqrD,EAAAA,EAAAA,KA04BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA14BjChsD,SAAAqrD,EAAAA,EAAAA,KA24BkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF5jC,KAAK,UAAW6jC,QAAOjD,EAAAyF,yB,CA34BpD3xD,SAAAqrD,EAAAA,EAAAA,KA24B6E,IAAuBE,EAAA,OAAAA,EAAA,OA34BpGC,EAAAA,EAAAA,IA24B6E,+BA34B7E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+4BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/4BzC3rD,SAAAqrD,EAAAA,EAAAA,KAg5BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAh5BjChsD,SAAAqrD,EAAAA,EAAAA,KAi5BkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF5jC,KAAK,UAAW6jC,QAAOjD,EAAA2F,4B,CAj5BpD7xD,SAAAqrD,EAAAA,EAAAA,KAi5BgF,IAA0BE,EAAA,OAAAA,EAAA,OAj5B1GC,EAAAA,EAAAA,IAi5BgF,kCAj5BhF1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAq5BcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAr5BzC3rD,SAAAqrD,EAAAA,EAAAA,KAs5BgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAt5BjChsD,SAAAqrD,EAAAA,EAAAA,KAu5BkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAA4F,qC,CAx5BrC9xD,SAAAqrD,EAAAA,EAAAA,KAw5B0E,IACxDE,EAAA,OAAAA,EAAA,OAz5BlBC,EAAAA,EAAAA,IAw5B0E,wCAx5B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA85BYqsB,EAAAA,EAAAA,IAqBcuF,EAAA,CArBDxD,MAAM,WAAWtzD,KAAK,oB,CA95B/CoG,SAAAqrD,EAAAA,EAAAA,KA+5Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/5BzC3rD,SAAAqrD,EAAAA,EAAAA,KAg6BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAh6BjChsD,SAAAqrD,EAAAA,EAAAA,KAi6BkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAAwG,mB,CAj6BpD1yD,SAAAqrD,EAAAA,EAAAA,KAi6BuE,IAAiBE,EAAA,OAAAA,EAAA,OAj6BxFC,EAAAA,EAAAA,IAi6BuE,yBAj6BvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAq6BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAr6BzC3rD,SAAAqrD,EAAAA,EAAAA,KAs6BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAt6BjChsD,SAAAqrD,EAAAA,EAAAA,KAu6BkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E5jC,KAAK,UAAW6jC,QAAOjD,EAAAmH,sB,CAv6BpDrzD,SAAAqrD,EAAAA,EAAAA,KAu6B0E,IAAoBE,EAAA,OAAAA,EAAA,OAv6B9FC,EAAAA,EAAAA,IAu6B0E,4BAv6B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA26BcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA36BzC3rD,SAAAqrD,EAAAA,EAAAA,KA46BgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA56BjChsD,SAAAqrD,EAAAA,EAAAA,KA66BkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAoH,+B,CA96BrCtzD,SAAAqrD,EAAAA,EAAAA,KA86BoE,IAClDE,EAAA,OAAAA,EAAA,OA/6BlBC,EAAAA,EAAAA,IA86BoE,sCA96BpE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAq7BYqsB,EAAAA,EAAAA,IAqBcuF,EAAA,CArBDxD,MAAM,mBAAmBtzD,KAAK,oB,CAr7BvDoG,SAAAqrD,EAAAA,EAAAA,KAs7Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAt7BzC3rD,SAAAqrD,EAAAA,EAAAA,KAu7BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAv7BjChsD,SAAAqrD,EAAAA,EAAAA,KAw7BkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAAwG,mB,CAx7BpD1yD,SAAAqrD,EAAAA,EAAAA,KAw7BuE,IAAiBE,EAAA,OAAAA,EAAA,OAx7BxFC,EAAAA,EAAAA,IAw7BuE,yBAx7BvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA47BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA57BzC3rD,SAAAqrD,EAAAA,EAAAA,KA67BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA77BjChsD,SAAAqrD,EAAAA,EAAAA,KA87BkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E5jC,KAAK,UAAW6jC,QAAOjD,EAAAmH,sB,CA97BpDrzD,SAAAqrD,EAAAA,EAAAA,KA87B0E,IAAoBE,EAAA,OAAAA,EAAA,OA97B9FC,EAAAA,EAAAA,IA87B0E,4BA97B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAk8BcqsB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAl8BzC3rD,SAAAqrD,EAAAA,EAAAA,KAm8BgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAn8BjChsD,SAAAqrD,EAAAA,EAAAA,KAo8BkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFD5jC,KAAK,UACJ6jC,QAAOjD,EAAAoH,+B,CAr8BrCtzD,SAAAqrD,EAAAA,EAAAA,KAq8BoE,IAClDE,EAAA,OAAAA,EAAA,OAt8BlBC,EAAAA,EAAAA,IAq8BoE,sCAr8BpE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA68BYqsB,EAAAA,EAAAA,IAmBcuF,EAAA,CAnBDxD,MAAM,QAAQtzD,KAAK,oB,CA78B5CoG,SAAAqrD,EAAAA,EAAAA,KA88Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA98BzC3rD,SAAAqrD,EAAAA,EAAAA,KA+8BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/8BjChsD,SAAAqrD,EAAAA,EAAAA,KAg9BkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E5jC,KAAK,UAAW6jC,QAAOjD,EAAA2G,sB,CAh9BpD7yD,SAAAqrD,EAAAA,EAAAA,KAg9B0E,IAAoBE,EAAA,OAAAA,EAAA,OAh9B9FC,EAAAA,EAAAA,IAg9B0E,4BAh9B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAo9BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAp9BzC3rD,SAAAqrD,EAAAA,EAAAA,KAq9BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAr9BjChsD,SAAAqrD,EAAAA,EAAAA,KAs9BkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArE5jC,KAAK,UAAW6jC,QAAOjD,EAAA4G,kB,CAt9BpD9yD,SAAAqrD,EAAAA,EAAAA,KAs9BsE,IAAgBE,EAAA,OAAAA,EAAA,OAt9BtFC,EAAAA,EAAAA,IAs9BsE,wBAt9BtE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA09BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA19BzC3rD,SAAAqrD,EAAAA,EAAAA,KA29BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA39BjChsD,SAAAqrD,EAAAA,EAAAA,KA49BkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAA6G,mB,CA59BpD/yD,SAAAqrD,EAAAA,EAAAA,KA49BuE,IAAiBE,EAAA,OAAAA,EAAA,OA59BxFC,EAAAA,EAAAA,IA49BuE,yBA59BvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAk+BYqsB,EAAAA,EAAAA,IAmBcuF,EAAA,CAnBDxD,MAAM,MAAMtzD,KAAK,oB,CAl+B1CoG,SAAAqrD,EAAAA,EAAAA,KAm+Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAn+BzC3rD,SAAAqrD,EAAAA,EAAAA,KAo+BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAp+BjChsD,SAAAqrD,EAAAA,EAAAA,KAq+BkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E5jC,KAAK,UAAW6jC,QAAOjD,EAAA2G,sB,CAr+BpD7yD,SAAAqrD,EAAAA,EAAAA,KAq+B0E,IAAoBE,EAAA,OAAAA,EAAA,OAr+B9FC,EAAAA,EAAAA,IAq+B0E,4BAr+B1E1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAy+BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAz+BzC3rD,SAAAqrD,EAAAA,EAAAA,KA0+BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1+BjChsD,SAAAqrD,EAAAA,EAAAA,KA2+BkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArE5jC,KAAK,UAAW6jC,QAAOjD,EAAA4G,kB,CA3+BpD9yD,SAAAqrD,EAAAA,EAAAA,KA2+BsE,IAAgBE,EAAA,OAAAA,EAAA,OA3+BtFC,EAAAA,EAAAA,IA2+BsE,wBA3+BtE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA++BcqsB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/+BzC3rD,SAAAqrD,EAAAA,EAAAA,KAg/BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAh/BjChsD,SAAAqrD,EAAAA,EAAAA,KAi/BkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAA6G,mB,CAj/BpD/yD,SAAAqrD,EAAAA,EAAAA,KAi/BuE,IAAiBE,EAAA,OAAAA,EAAA,OAj/BxFC,EAAAA,EAAAA,IAi/BuE,yBAj/BvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAu/BYqsB,EAAAA,EAAAA,IAGcuF,EAAA,CAHDxD,MAAM,WAAWtzD,KAAK,oB,CAv/B/CoG,SAAAqrD,EAAAA,EAAAA,KAw/Bc,IAC2E,EAD3EF,EAAAA,EAAAA,IAC2EoI,EAAA,CAD5DC,IAAI,mBAAoBxB,4BAA2B9F,EAAAuH,mCAClDjB,4BAA2BtG,EAAAwH,+B,yEAz/BzD50B,EAAA,KA4/BYqsB,EAAAA,EAAAA,IAMcuF,EAAA,CANDxD,MAAM,QAAQtzD,KAAK,U,CA5/B5CoG,SAAAqrD,EAAAA,EAAAA,KA6/Bc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7/BzC3rD,SAAAqrD,EAAAA,EAAAA,KA8/BgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9/BjChsD,SAAAqrD,EAAAA,EAAAA,KA+/BkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE5jC,KAAK,UAAW6jC,QAAOjD,EAAAyH,mB,CA//BpD3zD,SAAAqrD,EAAAA,EAAAA,KA+/BuE,IAAiBE,EAAA,OAAAA,EAAA,OA//BxFC,EAAAA,EAAAA,IA+/BuE,yBA//BvE1sB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,gCAqgCUqsB,EAAAA,EAAAA,IAsCSY,EAAA,CAtCA6H,GAAI,GAAKC,GAAI,GAAIhI,MAAA,qB,CArgCpC7rD,SAAAqrD,EAAAA,EAAAA,KAsgCY,IA8BS,EA9BTF,EAAAA,EAAAA,IA8BSW,EAAA,CA9BDD,MAAA,kFAAgF,CAtgCpG7rD,SAAAqrD,EAAAA,EAAAA,KAugCc,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CAvgC9BhsD,SAAAqrD,EAAAA,EAAAA,KAwgCgB,IACWE,EAAA,OAAAA,EAAA,OADXK,EAAAA,EAAAA,IACW,KADRC,MAAA,wDAAwD,qDACpD,OAzgCvB/sB,EAAA,KA2gCcqsB,EAAAA,EAAAA,IAcSY,EAAA,CAdAC,KAAM,GAAC,CA3gC9BhsD,SAAAqrD,EAAAA,EAAAA,KA4gCgB,IAYY,EAZZF,EAAAA,EAAAA,IAYYyB,EAAA,CAxhC5BP,WA6gC6BF,EAAA3xC,SA7gC7B,sBAAA+wC,EAAA,MAAAA,EAAA,IAAAgB,GA6gC6BJ,EAAA3xC,SAAQ+xC,GAChBC,SAAQN,EAAA4H,qBACThH,YAAY,kBACXe,UAAW3B,EAAA6H,4B,CAhhChC/zD,SAAAqrD,EAAAA,EAAAA,KAmhCsB,IAAoC,gBADxCJ,EAAAA,EAAAA,IAKEoC,EAAAA,GAAA,MAvhCpBC,EAAAA,EAAAA,IAmhCyCnB,EAAAoB,kBAAZC,K,WADXC,EAAAA,EAAAA,IAKER,EAAA,CAHGt3C,IAAG,iCAAmC63C,IACtCN,MAAOM,EACP50D,MAAO40D,G,sCAthC9B1uB,EAAA,G,2CAAAA,EAAA,KA0hCcqsB,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CA1hC/BhsD,SAAAqrD,EAAAA,EAAAA,KA2hCgB,IAOE,CANqB,aAAbc,EAAA3xC,WAAQ,WADlBizC,EAAAA,EAAAA,IAOEC,EAAA,CAliClB/3C,IAAA,EAAA02C,WA6hC6BF,EAAA6H,iBA7hC7B,sBAAAzI,EAAA,MAAAA,EAAA,IAAAgB,GA6hC6BJ,EAAA6H,iBAAgBzH,GACxBC,SAAQN,EAAA+H,uBACTnH,YAAY,WACXe,UAAW3B,EAAA6H,4BAA2C,aAAb5H,EAAA3xC,SAC1CqxC,MAAA,gB,+CAjiCpBiC,EAAAA,EAAAA,IAAA,UAAAhvB,EAAA,OAAAA,EAAA,KAqiCYqsB,EAAAA,EAAAA,IAKY+D,EAAA,CAJR5jC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgI,oBACtBrG,UAAW3B,EAAA6H,6BAA+B5H,EAAAgI,iB,CAviC3Dn0D,SAAAqrD,EAAAA,EAAAA,KAwiCa,IAEDE,EAAA,OAAAA,EAAA,OA1iCZC,EAAAA,EAAAA,IAwiCa,oCAxiCb1sB,EAAA,G,mBAAAA,EAAA,KA6iCUqsB,EAAAA,EAAAA,IAGSY,EAAA,CAHA6H,GAAI,GAAKC,GAAI,I,CA7iChC7zD,SAAAqrD,EAAAA,EAAAA,KA8iCY,IAAoC,kBAApCO,EAAAA,EAAAA,IAAoC,OAA/BD,MAAM,eAAc,SAAK,KAC9BR,EAAAA,EAAAA,IAAwGuC,EAAA,CA/iCpHrB,WA+iC+BF,EAAAgI,gBA/iC/B,sBAAA5I,EAAA,MAAAA,EAAA,IAAAgB,GA+iC+BJ,EAAAgI,gBAAe5H,GAAEjhC,KAAK,WAAY8oC,KAAM,EAAGtH,YAAY,oB,0BA/iCtFhuB,EAAA,KAijCUqsB,EAAAA,EAAAA,IAGSY,EAAA,CAHA6H,GAAI,GAAKC,GAAI,I,CAjjChC7zD,SAAAqrD,EAAAA,EAAAA,KAkjCY,IAAuC,kBAAvCO,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,eAAc,YAAQ,KACjCR,EAAAA,EAAAA,IAAmFuC,EAAA,CAnjC/FrB,WAmjC+BF,EAAAkI,QAnjC/B,sBAAA9I,EAAA,MAAAA,EAAA,IAAAgB,GAmjC+BJ,EAAAkI,QAAO9H,GAAEjhC,KAAK,WAAY8oC,KAAM,EAAGtH,YAAY,O,0BAnjC9EhuB,EAAA,KAqjCUqsB,EAAAA,EAAAA,IAOSW,EAAA,CAPA6C,OAAQ,GAAIhD,MAAM,c,CArjCrC3rD,SAAAqrD,EAAAA,EAAAA,KAsjCY,IAKS,EALTF,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CAtjC7BhsD,SAAAqrD,EAAAA,EAAAA,KAujCc,IAGY,EAHZF,EAAAA,EAAAA,IAGY+D,EAAA,CAHD5jC,KAAK,UAAWuiC,SAAUyG,EAAAC,gBAAkBpF,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAvkD,oB,CAvjC5E3H,SAAAqrD,EAAAA,EAAAA,KAujC+F,IAE7E,EAzjClBG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAwjCkBE,EAAAqI,oBAAkB,MAxjCpC11B,EAAA,G,mBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,K,gZCCE2uB,EAAAA,EAAAA,IAwES3B,EAAA,CAxEA6C,OAAQ,IAAE,CADrB3uD,SAAAqrD,EAAAA,EAAAA,KAEI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAFrBhsD,SAAAqrD,EAAAA,EAAAA,KAGM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAuI,mB,CAH7Dz0D,SAAAqrD,EAAAA,EAAAA,KAG+E,IAAeE,EAAA,MAAAA,EAAA,MAH9FC,EAAAA,EAAAA,IAG+E,uBAH/E1sB,EAAA,OAAAA,EAAA,KAKIqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CALrBhsD,SAAAqrD,EAAAA,EAAAA,KAMM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwI,oB,CAN7D10D,SAAAqrD,EAAAA,EAAAA,KAMgF,IAAgBE,EAAA,MAAAA,EAAA,MANhGC,EAAAA,EAAAA,IAMgF,wBANhF1sB,EAAA,OAAAA,EAAA,I,eAQI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAOSY,EAAA,CAPAC,KAAM,IAAE,CATrBhsD,SAAAqrD,EAAAA,EAAAA,KAUM,IAA0E,gBAA1EO,EAAAA,EAAAA,IAA0E,OAArEC,MAAA,mCAAsC,6BAAyB,KACpEV,EAAAA,EAAAA,IAAwFuC,EAAA,CAA9E/B,MAAM,eAXtBU,WAW8CiI,EAAAK,WAX9C,sBAAApJ,EAAA,KAAAA,EAAA,GAAAgB,GAW8C+H,EAAAK,WAAUpI,GAAEqI,UAAA,GAAU9H,YAAY,a,wBAC1E3B,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA2I,a,CAZ7D70D,SAAAqrD,EAAAA,EAAAA,KAYyE,IAASE,EAAA,MAAAA,EAAA,MAZlFC,EAAAA,EAAAA,IAYyE,iBAZzE1sB,EAAA,I,eAaM8sB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAAuGuC,EAAA,CAA7F/B,MAAM,eAdtBU,WAc8CiI,EAAAQ,mBAd9C,sBAAAvJ,EAAA,KAAAA,EAAA,GAAAgB,GAc8C+H,EAAAQ,mBAAkBvI,GAAEqI,UAAA,GAAU9H,YAAY,oB,wBAClF3B,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6I,oB,CAf7D/0D,SAAAqrD,EAAAA,EAAAA,KAegF,IAAgBE,EAAA,MAAAA,EAAA,MAfhGC,EAAAA,EAAAA,IAegF,wBAfhF1sB,EAAA,OAAAA,EAAA,I,eAiBI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAqBSY,EAAA,CArBAC,KAAM,IAAE,CAlBrBhsD,SAAAqrD,EAAAA,EAAAA,KAmBM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eAnBtBU,WAmB8CiI,EAAAhyB,QAnB9C,sBAAAipB,EAAA,KAAAA,EAAA,GAAAgB,GAmB8C+H,EAAAhyB,QAAOiqB,GAAEqI,UAAA,GAAU9H,YAAY,e,wBACvE3B,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnFvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8I,oB,CApB7Dh1D,SAAAqrD,EAAAA,EAAAA,KAoBgF,IAAQE,EAAA,MAAAA,EAAA,MApBxFC,EAAAA,EAAAA,IAoBgF,gBApBhF1sB,EAAA,I,eAqBM8sB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAC+D+D,EAAA,CADpDvD,MAAM,eAAergC,KAAK,UAClC6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+I,2B,CAvBhBj1D,SAAAqrD,EAAAA,EAAAA,KAuB0C,IAAeE,EAAA,MAAAA,EAAA,MAvBzDC,EAAAA,EAAAA,IAuB0C,uBAvB1C1sB,EAAA,I,eAwBM8sB,EAAAA,EAAAA,IAAI,mCACJA,EAAAA,EAAAA,IAaM,OAbDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,gFAGJA,EAAAA,EAAAA,IAEK,UAFD,qDAGJA,EAAAA,EAAAA,IAEK,UAFD,gCAGJA,EAAAA,EAAAA,IAEK,UAFD,2DAEJ,OArCR9sB,EAAA,I,eAwCI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAeSY,EAAA,CAfAC,KAAM,IAAE,CAzCrBhsD,SAAAqrD,EAAAA,EAAAA,KA0CM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eA1CtBU,WA0C8CiI,EAAA9wB,MA1C9C,sBAAA+nB,EAAA,KAAAA,EAAA,GAAAgB,GA0C8C+H,EAAA9wB,MAAK+oB,GAAEqI,UAAA,GAAU9H,YAAY,iB,wBACrE3B,EAAAA,EAAAA,IAAoFuC,EAAA,CAA1E/B,MAAM,eA3CtBU,WA2C8CiI,EAAAY,SA3C9C,sBAAA3J,EAAA,MAAAA,EAAA,IAAAgB,GA2C8C+H,EAAAY,SAAQ3I,GAAEqI,UAAA,GAAU9H,YAAY,W,wBACxE3B,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAiJ,wB,CA5C7Dn1D,SAAAqrD,EAAAA,EAAAA,KA4CoF,IAAoBE,EAAA,MAAAA,EAAA,MA5CxGC,EAAAA,EAAAA,IA4CoF,4BA5CpF1sB,EAAA,I,eA6CM8sB,EAAAA,EAAAA,IAUM,OAVDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,yCAEJ,OAtDR9sB,EAAA,I,eAyDI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA1DrBhsD,SAAAqrD,EAAAA,EAAAA,KA2DM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoGuC,EAAA,CAA1F/B,MAAM,eA3DtBU,WA2D8CiI,EAAAc,YA3D9C,sBAAA7J,EAAA,MAAAA,EAAA,IAAAgB,GA2D8C+H,EAAAc,YAAW7I,GAAEqI,UAAA,GAAU9H,YAAY,wB,wBAC3E3B,EAAAA,EAAAA,IAAqFuC,EAAA,CAA3E/B,MAAM,eA5DtBU,WA4D8CiI,EAAAe,OA5D9C,sBAAA9J,EAAA,MAAAA,EAAA,IAAAgB,GA4D8C+H,EAAAe,OAAM9I,GAAEqI,UAAA,GAAU9H,YAAY,c,wBACtE3B,EAAAA,EAAAA,IAAiGuC,EAAA,CAAvF/B,MAAM,eA7DtBU,WA6D8CiI,EAAAgB,WA7D9C,sBAAA/J,EAAA,MAAAA,EAAA,IAAAgB,GA6D8C+H,EAAAgB,WAAU/I,GAAEqI,UAAA,GAAU9H,YAAY,sB,wBAC1E3B,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAqJ,kB,CA9D7Dv1D,SAAAqrD,EAAAA,EAAAA,KA8D8E,IAAkBE,EAAA,MAAAA,EAAA,MA9DhGC,EAAAA,EAAAA,IA8D8E,0BA9D9E1sB,EAAA,OAAAA,EAAA,I,eAiEI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlErBhsD,SAAAqrD,EAAAA,EAAAA,KAmEM,IAA6F,EAA7FF,EAAAA,EAAAA,IAA6FuC,EAAA,CAAnF/B,MAAM,eAnEtBU,WAmE+CiI,EAAAkB,UAnE/C,sBAAAjK,EAAA,MAAAA,EAAA,IAAAgB,GAmE+C+H,EAAAkB,UAASjJ,GAAEqI,UAAA,GAAU9H,YAAY,kB,wBAC1E3B,EAAAA,EAAAA,IAAsGuC,EAAA,CAA5F/B,MAAM,eApEtBU,WAoE+CiI,EAAAmB,UApE/C,sBAAAlK,EAAA,MAAAA,EAAA,IAAAgB,GAoE+C+H,EAAAmB,UAASlJ,GAAEqI,UAAA,GAAU9H,YAAY,2B,wBAC1E3B,EAAAA,EAAAA,IAAoH+D,EAAA,CAAzGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwJ,yB,CArE7D11D,SAAAqrD,EAAAA,EAAAA,KAqEqF,IAAyBE,EAAA,MAAAA,EAAA,MArE9GC,EAAAA,EAAAA,IAqEqF,iCArErF1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,gBA+EA,GACEllC,KAAM,sBACN+7D,MAAO,CACLhiD,IAAKoQ,QAEP6xC,KAAAA,GACE,MAAMpyB,GAAQgwB,EAAAA,EAAAA,IAAI,IACZmB,GAAanB,EAAAA,EAAAA,IAAI,OACjBsB,GAAqBtB,EAAAA,EAAAA,IAAI,OACzBlxB,GAAUkxB,EAAAA,EAAAA,IAAI,IACd0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf4B,GAAc5B,EAAAA,EAAAA,IAAI,IAClB6B,GAAS7B,EAAAA,EAAAA,IAAI,IACb8B,GAAa9B,EAAAA,EAAAA,IAAI,IACjBgC,GAAYhC,EAAAA,EAAAA,IAAI,IAChBiC,GAAYjC,EAAAA,EAAAA,IAAI,IAEtB,MAAO,CACLhwB,QACA0xB,WACA5yB,UACAqyB,aACAG,qBACAM,cACAC,SACAC,aACAE,YACAC,YAEJ,EACA/6D,QAAS,CAEP+5D,cAAAA,GACE32D,KAAK+3D,MAAM,4BAA6B,CAAC,EAAG,iBAC9C,EAEAnB,eAAAA,GACE,IAAI5lD,EAAS,CACXwb,KAAM,iEACNuX,QAAS,kBAEX/jC,KAAK+3D,MAAM,4BAA6B/mD,EAAQ,kBAClD,EAEA+lD,QAAAA,GACE,GAAuB,GAAnB/2D,KAAK62D,WAEP,YADAmB,MAAM,QAGR,IAAIhnD,EAAS,CACXwb,KAAM,GACN2X,GAAI,qCACJrpC,MAAO,GAAGkF,KAAK62D,cAEjB72D,KAAK+3D,MAAM,4BAA6B/mD,EAAQ,WAClD,EAEAimD,eAAAA,GACE,GAAuB,GAAnBj3D,KAAK62D,WAEP,YADAmB,MAAM,QAIR,IAAIhnD,EAAS,CACXwb,KAAM,GACNyX,UAAW,qCACXC,SAAU,GAAGlkC,KAAKg3D,qBAClBriC,QAAS,CACPyP,QAAS,KAGbpkC,KAAK+3D,MAAM,4BAA6B/mD,EAAQ,kBAClD,EAEAkmD,eAAAA,GACOl3D,KAAKwkC,QAIVxkC,KAAK+3D,MAAM,4BAA6B,CACtCvzB,QAASxkC,KAAKwkC,QACd7P,QAAS,CACPsjC,eAAe,IAEhB,gBARDD,MAAM,UASV,EAEAb,sBAAAA,GACOn3D,KAAKwkC,QAIVxkC,KAAK+3D,MAAM,4BAA6B,CACtCvzB,QAASxkC,KAAKwkC,QACd7P,QAAS,CACPsjC,eAAe,IAEhB,uBARDD,MAAM,UASV,EAEAX,mBAAAA,GACOr3D,KAAK0lC,MAKL1lC,KAAKo3D,SAKVp3D,KAAK+3D,MAAM,4BAA6B,CACtC37D,QAAS4D,KAAKo3D,SACdtyB,cAAe9kC,KAAK0lC,MACpB/Q,QAAS,CACPyP,QAAS,OAEV,uBAVD4zB,MAAM,YALNA,MAAM,YAgBV,EACAP,aAAAA,GACOz3D,KAAKs3D,YAILt3D,KAAKu3D,OAILv3D,KAAKw3D,WAIVx3D,KAAK+3D,MAAM,4BAA6B,CACtC37D,QAAQ4D,KAAKs3D,YACb1xB,OAAO5lC,KAAKu3D,OACZ1xB,OAAO7lC,KAAKw3D,YACX,iBAPDQ,MAAM,oCAJNA,MAAM,2BAJNA,MAAM,oCAgBV,EAEAJ,oBAAAA,GACO53D,KAAK03D,UAIL13D,KAAK23D,UAIV33D,KAAK+3D,MAAM,4BAA6B,CACtChyB,OAAO/lC,KAAK03D,UACZ7xB,OAAO7lC,KAAK23D,WACX,wBANDK,MAAM,uCAJNA,MAAM,6BAWV,I,WChOJ,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,yICREvI,EAAAA,EAAAA,IAyES3B,EAAA,CAzEA6C,OAAQ,IAAE,CADrB3uD,SAAAqrD,EAAAA,EAAAA,KAEI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAFrBhsD,SAAAqrD,EAAAA,EAAAA,KAGM,IAA4G,EAA5GF,EAAAA,EAAAA,IAA4G+D,EAAA,CAAjGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+J,uB,CAH7Dj2D,SAAAqrD,EAAAA,EAAAA,KAGmF,IAAmBE,EAAA,MAAAA,EAAA,MAHtGC,EAAAA,EAAAA,IAGmF,2BAHnF1sB,EAAA,OAAAA,EAAA,KAKIqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CALrBhsD,SAAAqrD,EAAAA,EAAAA,KAMM,IAA8G,EAA9GF,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAgK,wB,CAN7Dl2D,SAAAqrD,EAAAA,EAAAA,KAMoF,IAAoBE,EAAA,MAAAA,EAAA,MANxGC,EAAAA,EAAAA,IAMoF,4BANpF1sB,EAAA,OAAAA,EAAA,I,eAQI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CATrBhsD,SAAAqrD,EAAAA,EAAAA,KAUM,IAA0E,gBAA1EO,EAAAA,EAAAA,IAA0E,OAArEC,MAAA,mCAAsC,6BAAyB,KACpEV,EAAAA,EAAAA,IAAwFuC,EAAA,CAA9E/B,MAAM,eAXtBU,WAW8CiI,EAAAK,WAX9C,sBAAApJ,EAAA,KAAAA,EAAA,GAAAgB,GAW8C+H,EAAAK,WAAUpI,GAAEqI,UAAA,GAAU9H,YAAY,a,wBAC1E3B,EAAAA,EAAAA,IAAgG+D,EAAA,CAArFvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAiK,iB,CAZ7Dn2D,SAAAqrD,EAAAA,EAAAA,KAY6E,IAAaE,EAAA,MAAAA,EAAA,MAZ1FC,EAAAA,EAAAA,IAY6E,qBAZ7E1sB,EAAA,I,eAaM8sB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAAuGuC,EAAA,CAA7F/B,MAAM,eAdtBU,WAc8CiI,EAAAQ,mBAd9C,sBAAAvJ,EAAA,KAAAA,EAAA,GAAAgB,GAc8C+H,EAAAQ,mBAAkBvI,GAAEqI,UAAA,GAAU9H,YAAY,oB,wBAClF3B,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAkK,wB,CAf7Dp2D,SAAAqrD,EAAAA,EAAAA,KAeoF,IAAoBE,EAAA,MAAAA,EAAA,MAfxGC,EAAAA,EAAAA,IAeoF,4BAfpF1sB,EAAA,OAAAA,EAAA,I,eAkBI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAqBSY,EAAA,CArBAC,KAAM,IAAE,CAnBrBhsD,SAAAqrD,EAAAA,EAAAA,KAoBM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eApBtBU,WAoB8CiI,EAAAhyB,QApB9C,sBAAAipB,EAAA,KAAAA,EAAA,GAAAgB,GAoB8C+H,EAAAhyB,QAAOiqB,GAAEqI,UAAA,GAAU9H,YAAY,e,wBACvE3B,EAAAA,EAAAA,IAAkG+D,EAAA,CAAvFvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAmK,wB,CArB7Dr2D,SAAAqrD,EAAAA,EAAAA,KAqBoF,IAAQE,EAAA,MAAAA,EAAA,MArB5FC,EAAAA,EAAAA,IAqBoF,gBArBpF1sB,EAAA,I,eAsBM8sB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IACmE+D,EAAA,CADxDvD,MAAM,eAAergC,KAAK,UAClC6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAoK,+B,CAxBhBt2D,SAAAqrD,EAAAA,EAAAA,KAwB8C,IAAeE,EAAA,MAAAA,EAAA,MAxB7DC,EAAAA,EAAAA,IAwB8C,uBAxB9C1sB,EAAA,I,eAyBM8sB,EAAAA,EAAAA,IAAI,mCACJA,EAAAA,EAAAA,IAaM,OAbDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,gFAGJA,EAAAA,EAAAA,IAEK,UAFD,qDAGJA,EAAAA,EAAAA,IAEK,UAFD,gCAGJA,EAAAA,EAAAA,IAEK,UAFD,2DAEJ,OAtCR9sB,EAAA,I,eAyCI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAgBSY,EAAA,CAhBAC,KAAM,IAAE,CA1CrBhsD,SAAAqrD,EAAAA,EAAAA,KA2CM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eA3CtBU,WA2C8CiI,EAAA9wB,MA3C9C,sBAAA+nB,EAAA,KAAAA,EAAA,GAAAgB,GA2C8C+H,EAAA9wB,MAAK+oB,GAAEqI,UAAA,GAAU9H,YAAY,iB,wBACrE3B,EAAAA,EAAAA,IAAoFuC,EAAA,CAA1E/B,MAAM,eA5CtBU,WA4C8CiI,EAAAY,SA5C9C,sBAAA3J,EAAA,MAAAA,EAAA,IAAAgB,GA4C8C+H,EAAAY,SAAQ3I,GAAEqI,UAAA,GAAU9H,YAAY,W,wBACxE3B,EAAAA,EAAAA,IACyE+D,EAAA,CAD9DvD,MAAM,eAAergC,KAAK,UAClC6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAqK,4B,CA9ChBv2D,SAAAqrD,EAAAA,EAAAA,KA8C2C,IAAwBE,EAAA,MAAAA,EAAA,MA9CnEC,EAAAA,EAAAA,IA8C2C,gCA9C3C1sB,EAAA,I,eA+CM8sB,EAAAA,EAAAA,IAUM,OAVDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,2CAGJA,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,yCAEJ,OAxDR9sB,EAAA,I,eA2DI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA5DrBhsD,SAAAqrD,EAAAA,EAAAA,KA6DM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoGuC,EAAA,CAA1F/B,MAAM,eA7DtBU,WA6D8CiI,EAAAc,YA7D9C,sBAAA7J,EAAA,MAAAA,EAAA,IAAAgB,GA6D8C+H,EAAAc,YAAW7I,GAAEqI,UAAA,GAAU9H,YAAY,wB,wBAC3E3B,EAAAA,EAAAA,IAAqFuC,EAAA,CAA3E/B,MAAM,eA9DtBU,WA8D8CiI,EAAAe,OA9D9C,sBAAA9J,EAAA,MAAAA,EAAA,IAAAgB,GA8D8C+H,EAAAe,OAAM9I,GAAEqI,UAAA,GAAU9H,YAAY,c,wBACtE3B,EAAAA,EAAAA,IAAiGuC,EAAA,CAAvF/B,MAAM,eA/DtBU,WA+D8CiI,EAAAgB,WA/D9C,sBAAA/J,EAAA,MAAAA,EAAA,IAAAgB,GA+D8C+H,EAAAgB,WAAU/I,GAAEqI,UAAA,GAAU9H,YAAY,sB,wBAC1E3B,EAAAA,EAAAA,IAAkH+D,EAAA,CAAvGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAsK,sB,CAhE7Dx2D,SAAAqrD,EAAAA,EAAAA,KAgEkF,IAA0BE,EAAA,MAAAA,EAAA,MAhE5GC,EAAAA,EAAAA,IAgEkF,kCAhElF1sB,EAAA,OAAAA,EAAA,I,eAmEI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CApErBhsD,SAAAqrD,EAAAA,EAAAA,KAqEM,IAA6F,EAA7FF,EAAAA,EAAAA,IAA6FuC,EAAA,CAAnF/B,MAAM,eArEtBU,WAqE+CiI,EAAAkB,UArE/C,sBAAAjK,EAAA,MAAAA,EAAA,IAAAgB,GAqE+C+H,EAAAkB,UAASjJ,GAAEqI,UAAA,GAAU9H,YAAY,kB,wBAC1E3B,EAAAA,EAAAA,IAAsGuC,EAAA,CAA5F/B,MAAM,eAtEtBU,WAsE+CiI,EAAAmB,UAtE/C,sBAAAlK,EAAA,MAAAA,EAAA,IAAAgB,GAsE+C+H,EAAAmB,UAASlJ,GAAEqI,UAAA,GAAU9H,YAAY,2B,wBAC1E3B,EAAAA,EAAAA,IAAgI+D,EAAA,CAArHvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAuK,6B,CAvE7Dz2D,SAAAqrD,EAAAA,EAAAA,KAuEyF,IAAiCE,EAAA,MAAAA,EAAA,MAvE1HC,EAAAA,EAAAA,IAuEyF,yCAvEzF1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,CAgFA,OACEllC,KAAM,sBACN+7D,MAAO,CACLhiD,IAAKoQ,QAEP6xC,KAAAA,GACE,MAAMpyB,GAAQgwB,EAAAA,EAAAA,IAAI,IACZmB,GAAanB,EAAAA,EAAAA,IAAI,OACjBsB,GAAqBtB,EAAAA,EAAAA,IAAI,OACzBlxB,GAAUkxB,EAAAA,EAAAA,IAAI,IACd0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf4B,GAAc5B,EAAAA,EAAAA,IAAI,IAClB6B,GAAS7B,EAAAA,EAAAA,IAAI,IACb8B,GAAa9B,EAAAA,EAAAA,IAAI,IACjBgC,GAAYhC,EAAAA,EAAAA,IAAI,IAChBiC,GAAYjC,EAAAA,EAAAA,IAAI,IACtB,MAAO,CACLhwB,QACA0xB,WACA5yB,UACAqyB,aACAG,qBACAM,cACAC,SACAC,aACAE,YACAC,YAEJ,EACA/6D,QAAS,CAEPu7D,kBAAAA,GACEn4D,KAAK+3D,MAAM,4BAA6B,CAAC,EAAG,qBAC9C,EAEAK,mBAAAA,GACE,IAAIpnD,EAAS,CACXwb,KAAM,iEACNuX,QAAS,gcAEX/jC,KAAK+3D,MAAM,4BAA6B/mD,EAAQ,sBAClD,EAEAqnD,YAAAA,GACE,GAAuB,GAAnBr4D,KAAK62D,WAEP,YADAmB,MAAM,QAGR,IAAIhnD,EAAS,CACXwb,KAAM,GACN2X,GAAI,qCACJrpC,MAAO,GAAGkF,KAAK62D,cAEjB72D,KAAK+3D,MAAM,4BAA6B/mD,EAAQ,eAClD,EAEAsnD,mBAAAA,GACE,GAAuB,GAAnBt4D,KAAK62D,WAEP,YADAmB,MAAM,QAIR,IAAIhnD,EAAS,CACXwb,KAAM,GACNyX,UAAW,qCACXC,SAAU,GAAGlkC,KAAKg3D,qBAClBriC,QAAS,CACPyP,QAAS,KAGbpkC,KAAK+3D,MAAM,4BAA6B/mD,EAAQ,sBAClD,EAEAunD,mBAAAA,GACOv4D,KAAKwkC,QAIVxkC,KAAK+3D,MAAM,4BAA6B,CACtCvzB,QAASxkC,KAAKwkC,QACd7P,QAAS,CACPsjC,eAAe,IAEhB,oBARDD,MAAM,UASV,EAEAQ,0BAAAA,GACOx4D,KAAKwkC,QAIVxkC,KAAK+3D,MAAM,4BAA6B,CACtCvzB,QAASxkC,KAAKwkC,QACd7P,QAAS,CACPsjC,eAAe,IAEhB,2BARDD,MAAM,UASV,EAEAS,uBAAAA,GACOz4D,KAAK0lC,MAKL1lC,KAAKo3D,SAKVp3D,KAAK+3D,MAAM,4BAA6B,CACtC37D,QAAS4D,KAAKo3D,SACdtyB,cAAe9kC,KAAK0lC,MACpB/Q,QAAS,CACPyP,QAAS,OAEV,2BAVD4zB,MAAM,YALNA,MAAM,YAgBV,EAEAU,iBAAAA,GACO14D,KAAKs3D,YAILt3D,KAAKu3D,OAILv3D,KAAKw3D,WAIVx3D,KAAK+3D,MAAM,4BAA6B,CACtC37D,QAAQ4D,KAAKs3D,YACb1xB,OAAO5lC,KAAKu3D,OACZ1xB,OAAO7lC,KAAKw3D,YACX,qBAPDQ,MAAM,oCAJNA,MAAM,2BAJNA,MAAM,oCAgBV,EAEAW,wBAAAA,GACO34D,KAAK03D,UAIL13D,KAAK23D,UAIV33D,KAAK+3D,MAAM,4BAA6B,CACtChyB,OAAO/lC,KAAK03D,UACZ7xB,OAAO7lC,KAAK23D,WACX,4BANDK,MAAM,uCAJNA,MAAM,6BAWV,ICjOJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kHCsNErI,EAAAA,EAAAA,IAmCS3B,EAAA,CAnCA6C,OAAQ,GAAIhD,MAAM,c,CA/N7B3rD,SAAAqrD,EAAAA,EAAAA,KAgOI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhOrBhsD,SAAAqrD,EAAAA,EAAAA,KAiOM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwK,mB,CAjO7D12D,SAAAqrD,EAAAA,EAAAA,KAiO+E,IAAeE,EAAA,KAAAA,EAAA,KAjO9FC,EAAAA,EAAAA,IAiO+E,uBAjO/E1sB,EAAA,OAAAA,EAAA,KAmOIqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnOrBhsD,SAAAqrD,EAAAA,EAAAA,KAoOM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyK,oB,CApO7D32D,SAAAqrD,EAAAA,EAAAA,KAoOgF,IAAgBE,EAAA,KAAAA,EAAA,KApOhGC,EAAAA,EAAAA,IAoOgF,wBApOhF1sB,EAAA,OAAAA,EAAA,KAsOIqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtOrBhsD,SAAAqrD,EAAAA,EAAAA,KAuOM,IAAsH,EAAtHF,EAAAA,EAAAA,IAAsH+D,EAAA,CAA3GvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0K,4B,CAvO7D52D,SAAAqrD,EAAAA,EAAAA,KAuOwF,IAAwBE,EAAA,MAAAA,EAAA,MAvOhHC,EAAAA,EAAAA,IAuOwF,gCAvOxF1sB,EAAA,OAAAA,EAAA,KAyOIqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzOrBhsD,SAAAqrD,EAAAA,EAAAA,KA0OM,IAA+G,EAA/GF,EAAAA,EAAAA,IAA+G+D,EAAA,CAApGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA2K,yB,CA1O7D72D,SAAAqrD,EAAAA,EAAAA,KA0OqF,IAAoBE,EAAA,MAAAA,EAAA,MA1OzGC,EAAAA,EAAAA,IA0OqF,4BA1OrF1sB,EAAA,OAAAA,EAAA,KA6OIqsB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7OrBhsD,SAAAqrD,EAAAA,EAAAA,KA8OM,IAAwH,EAAxHF,EAAAA,EAAAA,IAAwH+D,EAAA,CAA7GvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA4K,kC,CA9O7D92D,SAAAqrD,EAAAA,EAAAA,KA8O8F,IAAoBE,EAAA,MAAAA,EAAA,MA9OlHC,EAAAA,EAAAA,IA8O8F,4BA9O9F1sB,EAAA,I,eA+OM8sB,EAAAA,EAAAA,IAA8E,OAAzEC,MAAA,mCAAsC,iCAA6B,OA/O9E/sB,EAAA,KAkPIqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlPrBhsD,SAAAqrD,EAAAA,EAAAA,KAmPM,IAAmG,EAAnGF,EAAAA,EAAAA,IAAmG+D,EAAA,CAAxFvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6K,mB,CAnP7D/2D,SAAAqrD,EAAAA,EAAAA,KAmP+E,IAAcE,EAAA,MAAAA,EAAA,MAnP7FC,EAAAA,EAAAA,IAmP+E,sBAnP/E1sB,EAAA,I,eAoPM8sB,EAAAA,EAAAA,IAA6E,OAAxEC,MAAA,mCAAsC,gCAA4B,mBACvED,EAAAA,EAAAA,IAAkH,OAA7GC,MAAA,mCAAqC,sEAAkE,OArPlH/sB,EAAA,I,eAwPI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAzPrBhsD,SAAAqrD,EAAAA,EAAAA,KA0PM,IACkG,EADlGF,EAAAA,EAAAA,IACkG+D,EAAA,CADvFvD,MAAM,eAAergC,KAAK,UACzB6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8K,sC,CA3PzBh3D,SAAAqrD,EAAAA,EAAAA,KA2P8D,IAA8BE,EAAA,MAAAA,EAAA,MA3P5FC,EAAAA,EAAAA,IA2P8D,sCA3P9D1sB,EAAA,OAAAA,EAAA,KA8PIqsB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA9PrBhsD,SAAAqrD,EAAAA,EAAAA,KA+PM,IAC4G,EAD5GF,EAAAA,EAAAA,IAC4G+D,EAAA,CADjGvD,MAAM,eAAergC,KAAK,UACzB6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+K,gD,CAhQzBj3D,SAAAqrD,EAAAA,EAAAA,KAgQwE,IAA8BE,EAAA,MAAAA,EAAA,MAhQtGC,EAAAA,EAAAA,IAgQwE,sCAhQxE1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,2DAKA,GACEllC,KAAM,sBACNc,QAAS,CACPg8D,cAAAA,GACE54D,KAAK+3D,MAAM,4BAA6B,GAAI,iBAC9C,EAGA,qBAAMc,GACJ,MAAM38D,EAAO,CACX,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEXm5C,EAAa,IAAI3f,WAAWx5B,GAClC,IAAI8T,EAAQ,CACVuB,QAAS8jC,GAEXr1C,KAAK+3D,MAAM,4BAA6B/nD,EAAO,kBACjD,EAEA,6BAAM8oD,GACJ,MAAM58D,EAAO,CACX,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEXm5C,EAAa,IAAI3f,WAAWx5B,GAClC,IAAI8T,EAAQ,CACVuB,QAAS8jC,GAEXr1C,KAAK+3D,MAAM,4BAA6B/nD,EAAO,0BACjD,EAEA+oD,oBAAAA,GAEE,MAAMlzB,EAAS,IAETuzB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGvS,IAAK,CAACjhB,IACtCwzB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMppD,EAAQ,CACZ0pD,iBAAkBL,EAClBzwD,QAAS,CAAC,EACVzL,MAAO,cACPw3B,QAAS,CACPglC,aAAa,IAIjB35D,KAAK+3D,MAAM,4BAA6B/nD,EAAO,sBACjD,EAEA,oBAAMipD,GACJ,IAAI7wD,EAAW5K,OAAO4K,SACtBA,EAASqX,gBACL,cACA,uCAEJ,IAAIvjB,EAAO,CACTgV,OAAQ,kBACRF,OAAQ,CACN,qEACA,2DAIJhR,KAAK+3D,MAAM,4BAA6B77D,EAAM,cAChD,EAGA,uCAAMg9D,GAEJ,MAAMrzB,EAAS,IAETuzB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGvS,IAAK,CAACjhB,IACtCwzB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMppD,EAAQ,CACZ0pD,iBAAkBL,EAClB1kC,QAAS,CACPglC,aAAa,KAKVC,EAASC,SAAqB75D,KAAK85D,4BACtC9pD,GAEJA,EAAM4pD,QAAUA,EAChB5pD,EAAM6pD,YAAcA,EAEpB75D,KAAK+3D,MAAM,4BAA6B/nD,EAAO,sBACjD,EAGA,iDAAMmpD,GAEJ,MAAMtzB,EAAS,IAETuzB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGvS,IAAK,CAACjhB,IACtCwzB,EAAGI,gBAAgB,CAACF,GAAOH,GAE3B,MAAMppD,EAAQ,CACZ0pD,iBAAkBL,EAClB1kC,QAAS,CACPglC,aAAa,KAKVC,EAASC,SAAqB75D,KAAK85D,4BACtC9pD,GAEJA,EAAM4pD,QAAUA,EAChB5pD,EAAM6pD,YAAcA,EACpB75D,KAAK+3D,MAAM,4BAA6B/nD,EAAO,gCACjD,EAGA,iCAAM8pD,CAA4B9pD,GAEhC,IAAI+pD,EAAc,CAAC,GAAI,IAWvB,GATI,YAAa/pD,GACbA,EAAM4pD,QAAQv9D,OAAS,GACvB,gBAAiB2T,GACjBA,EAAM6pD,YAAYx9D,OAAS,IAE7B09D,EAAc,CAAC/pD,EAAM4pD,QAAS5pD,EAAM6pD,gBAIhC,qBAAsB7pD,GAC1B,OAAO,IAAIxI,SAASD,IAClBA,EAAQwyD,EAAY,IAWxB,IAAIC,EAAiBx8D,OAAO4K,SAAS4a,6BAA6B,OAClE,GAA6B,GAAzBg3C,EAAe39D,OACjB,OAAO,IAAImL,SAASD,IAClBA,EAAQwyD,EAAY,IAIxB,IACE,IAAIr6C,GAASu6C,EAAAA,EAAAA,GAAe,WAC5Bv6C,EAAS,gDACT,MAAMw6C,EAAY,IAAIC,EAAAA,EAAU,CAAEt8D,IAAK6hB,IAGvC1P,EAAM0pD,iBAAiBU,UAAUJ,EAAe,IAChD,MAAM3+D,QAAe2U,EAAM0pD,iBAAiBW,MAAM,CAChDx9C,OAAQq9C,IAEJN,EAAUU,EAAOj/D,GAAQ4W,SAAS,UAClC4nD,QAAoBP,EAAAA,EAAe9sC,KAAKotC,GAASp9B,SACvDu9B,EAAc,CAACH,EAASC,EAC1B,CAAE,MAAOjwD,GACP,OAAO,IAAIpC,SAASD,IAClBA,EAAQwyD,EAAY,GAExB,CAEA,OAAO,IAAIvyD,SAASD,IAClBA,EAAQwyD,EAAY,GAExB,EAGAf,6BAAAA,GAEE,MAAMnzB,EAAS,IAETuzB,EACJ,qEAGIC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGvS,IAAK,CAACjhB,IACtCwzB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMppD,EAAQ,CACZ0pD,iBAAkBL,EAClBzwD,QAAS,CAAC,EACVzL,MAAO,cACPw3B,QAAS,CACPglC,aAAa,IAIjB35D,KAAKq2D,gBAAkB96D,KAAKC,UAAUwU,GACtChQ,KAAKu6D,sBAAwBvqD,EAC7BhQ,KAAKw6D,iBAAmB,+BAC1B,IClNJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kHC2IE7K,EAAAA,EAAAA,IAyBS3B,EAAA,CAzBA6C,OAAQ,GAAIhD,MAAM,c,CApJ7B3rD,SAAAqrD,EAAAA,EAAAA,KAqJI,IAOS,EAPTF,EAAAA,EAAAA,IAOSY,EAAA,CAPAC,KAAM,IAAE,CArJrBhsD,SAAAqrD,EAAAA,EAAAA,KAsJM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAqM,yB,CAtJ7Dv4D,SAAAqrD,EAAAA,EAAAA,KAsJqF,IAAWE,EAAA,KAAAA,EAAA,KAtJhGC,EAAAA,EAAAA,IAsJqF,mBAtJrF1sB,EAAA,I,aAuJM8sB,EAAAA,EAAAA,IAIM,OAJDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,2BAEJ,OA1JR9sB,EAAA,I,aA6JI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAEjBR,EAAAA,EAAAA,IAaSY,EAAA,CAbAC,KAAM,IAAE,CA/JrBhsD,SAAAqrD,EAAAA,EAAAA,KAgKM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAsM,0BAAyB,K,CAhKtFx4D,SAAAqrD,EAAAA,EAAAA,KAgK6F,IAEvFE,EAAA,KAAAA,EAAA,KAlKNC,EAAAA,EAAAA,IAgK6F,yBAhK7F1sB,EAAA,I,aAoKM8sB,EAAAA,EAAAA,IAOM,OAPDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,sCAGJA,EAAAA,EAAAA,IAEK,UAFD,yBAEJ,OA1KR9sB,EAAA,OAAAA,EAAA,G,eAIA,GACEllC,KAAM,2BACNc,QAAS,CACP,0BAAM69D,GAEJ,GADAz6D,KAAK5D,QAAU4D,KAAK26D,oBACC,KAAjB36D,KAAK5D,QAEP,YADA47D,MAAM,uBAIR,IAAIzuD,EAAWvJ,KAAKuJ,SACpBvJ,KAAK+3D,MAAM,4BAA6Bx8D,KAAKC,UAAU+N,IACvD,IAAInB,EAAW,IAAIrD,EAAAA,oBAAoBvH,OAAO4K,UAC1C8hC,QAAY9hC,EAASgB,YAAYpJ,KAAK5D,QAASmN,EAAU,oBAC7D,GAAI2gC,EAAI12B,KAAM,CACZ,GAAgB,KAAZ02B,EAAI12B,KAAa,CACnB,IAAIqC,EAAM,yDACVmiD,MAAMniD,GACN7V,KAAK+3D,MAAM,4BAA6BliD,EAAK,uBAC/C,CAEA,YADA7V,KAAK+3D,MAAM,4BAA6B7tB,EAAK,uBAE/C,CACA/mB,QAAQpX,IAAIm+B,GAEZ,MAAM0wB,EAAc,IAAIC,EAAAA,GAAY,CAAEC,QAAS,qDAC/C,IAAIC,EAAK,QACT,MAAMnyD,EAAU,IAAIoyD,EAAAA,GAAQJ,EAAa56D,KAAK5D,QAAS2+D,GACvD,IAAIE,EAAOj7D,KACX4I,EAAQsyD,cAAc3xD,EAAU2gC,GAAKliC,MAAK,SAAUmzD,GAClDF,EAAKlD,MAAM,4BAA6B,UAAYoD,EAAU,KAAOjxB,EAAK,uBAC5E,IAAG/1B,OAAM,SAAUvK,GACjBqxD,EAAKlD,MAAM,4BAA6B,UAAYnuD,EAAQ,KAAOsgC,EAAK,uBAC1E,GACF,EAEA,8BAAMwwB,GAEJ,GADA16D,KAAK5D,QAAU4D,KAAK26D,oBACC,KAAjB36D,KAAK5D,QAEP,YADA47D,MAAM,uBAIR,IAAIp5B,EAAMw8B,EAAAA,GAAQC,YAAY,OAC9B,MAAMC,EAAmBC,EAAAA,GAASC,QAAQ,CACxCr3B,GAAI,qEACJrpC,MAAO8jC,IAKH68B,EAAkB,qEAElBC,EAAe,CACnBvxD,MAAO,CACL,CACEwxD,iBAAkBF,EAClBG,YAAa,WACbC,SAAUP,KAKhBt7D,KAAK+3D,MAAM,4BAA6Bx8D,KAAKC,UAAUkgE,IACvD,IAAItzD,EAAW,IAAIrD,EAAAA,oBAAoBvH,OAAO4K,UAE1C6yD,EAAOj7D,KACXoI,EAASyB,gBAAgB7J,KAAK5D,QAASs/D,EAAc,oBAAoB1zD,MAAK,SAASkiC,GACrF/mB,QAAQpX,IAAI,mCAAoCm+B,GAChD+wB,EAAKlD,MAAM,4BAA6B7tB,EAAK,2BAC/C,IAAG/1B,OAAM,SAASvK,GAChB,GAAkB,KAAdA,EAAM4J,KAAa,CACrB,IAAIqC,EAAM,yDACVmiD,MAAMniD,GACNolD,EAAKlD,MAAM,4BAA6BliD,EAAK,2BAC/C,MACEolD,EAAKlD,MAAM,4BAA6BnuD,EAAO,2BAEnD,GACF,EAEA+wD,iBAAAA,GACE,IAAIvyD,EAAW,IAAIrD,EAAAA,oBAAoBvH,OAAO4K,UAC9C,MAAMhM,EAAUgM,EAASK,WAAW,qBAAqBrM,QACzD,OAAOA,CACT,EAEA0/D,YAAAA,GACE,IAAI1zD,EAAW,IAAIrD,EAAAA,oBAAoBvH,OAAO4K,UAC9C,MAAMQ,EAAUR,EAASK,WAAW,oBAGpC,OAFA0a,QAAQpX,IAAI,iBACZoX,QAAQpX,IAAInD,GACL,kEACT,GAGF1M,IAAAA,GACE,MAAMqN,EAAW,CACb,OAAU,CACR,QAAW,mBACX,KAAQ,WACR,QAAW,KAEb,QAAW,CACT,SAAY,0BACZ,QAAW,sBAEb,YAAe,MACf,MAAS,CACP,eAAkB,CAChB,CACE,KAAQ,OACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,SAGZ,IAAO,CACL,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,WACR,KAAQ,WAMlB,MAAO,CACLA,WAEJ,GCxIF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,2LC0IEomD,EAAAA,EAAAA,IAmDS3B,EAAA,CAnDA6C,OAAQ,GAAIhD,MAAM,c,CAnJ7B3rD,SAAAqrD,EAAAA,EAAAA,KAoJI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApJrBhsD,SAAAqrD,EAAAA,EAAAA,KAqJM,IAAuG,EAAvGF,EAAAA,EAAAA,IAAuG+D,EAAA,CAA5FvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA2N,qB,CArJ7D75D,SAAAqrD,EAAAA,EAAAA,KAqJiF,IAAgBE,EAAA,KAAAA,EAAA,KArJjGC,EAAAA,EAAAA,IAqJiF,wBArJjF1sB,EAAA,OAAAA,EAAA,KAuJIqsB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvJrBhsD,SAAAqrD,EAAAA,EAAAA,KAwJM,IAA2G,EAA3GF,EAAAA,EAAAA,IAA2G+D,EAAA,CAAhGvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA4N,uB,CAxJ7D95D,SAAAqrD,EAAAA,EAAAA,KAwJmF,IAAkBE,EAAA,KAAAA,EAAA,KAxJrGC,EAAAA,EAAAA,IAwJmF,0BAxJnF1sB,EAAA,OAAAA,EAAA,I,eA2JI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAGjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA9JrBhsD,SAAAqrD,EAAAA,EAAAA,KA+JM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6N,sBAAqB,K,CA/JlF/5D,SAAAqrD,EAAAA,EAAAA,KA+JyF,IAEnFE,EAAA,MAAAA,EAAA,MAjKNC,EAAAA,EAAAA,IA+JyF,wCA/JzF1sB,EAAA,OAAAA,EAAA,KAoKIqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CApKrBhsD,SAAAqrD,EAAAA,EAAAA,KAqKM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8N,qCAAoC,K,CArKjGh6D,SAAAqrD,EAAAA,EAAAA,KAqKwG,IAElGE,EAAA,MAAAA,EAAA,MAvKNC,EAAAA,EAAAA,IAqKwG,wCArKxG1sB,EAAA,OAAAA,EAAA,KA0KIqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA1KrBhsD,SAAAqrD,EAAAA,EAAAA,KA2KM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+N,oCAAmC,K,CA3KhGj6D,SAAAqrD,EAAAA,EAAAA,KA2KuG,IAEjGE,EAAA,MAAAA,EAAA,MA7KNC,EAAAA,EAAAA,IA2KuG,uCA3KvG1sB,EAAA,OAAAA,EAAA,I,eAgLI8sB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAGjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnLrBhsD,SAAAqrD,EAAAA,EAAAA,KAoLM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6N,sBAAqB,K,CApLlF/5D,SAAAqrD,EAAAA,EAAAA,KAoL0F,IAEpFE,EAAA,MAAAA,EAAA,MAtLNC,EAAAA,EAAAA,IAoL0F,+CApL1F1sB,EAAA,OAAAA,EAAA,KAyLIqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzLrBhsD,SAAAqrD,EAAAA,EAAAA,KA0LM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8N,qCAAoC,K,CA1LjGh6D,SAAAqrD,EAAAA,EAAAA,KA0LyG,IAEnGE,EAAA,MAAAA,EAAA,MA5LNC,EAAAA,EAAAA,IA0LyG,+CA1LzG1sB,EAAA,OAAAA,EAAA,KA+LIqsB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA/LrBhsD,SAAAqrD,EAAAA,EAAAA,KAgMM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAergC,KAAK,UAAW6jC,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+N,oCAAmC,K,CAhMhGj6D,SAAAqrD,EAAAA,EAAAA,KAgMwG,IAElGE,EAAA,MAAAA,EAAA,MAlMNC,EAAAA,EAAAA,IAgMwG,8CAhMxG1sB,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,qCAMA,GACEllC,KAAM,uBACNc,QAAS,CAEP,sBAAMm/D,GACJ/7D,KAAK+3D,MAAM,4BAA6B,cACxC,IAAI3vD,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UACtC8hC,QAAY9hC,EAASgB,YAAY,aAAc,gBACnD,GAAI8gC,EAAI12B,KAEN,YADAxT,KAAK+3D,MAAM,4BAA6B7tB,EAAK,oBAG/C,IAAIkyB,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAGhB,MAAMl8B,QAAei8B,EAAQE,IAAIpB,cAAc,KAAOZ,EAAO9tC,KAAK,cAAcva,SAAS,OAAQi4B,EAAK9hC,EAASK,WAAW,gBAAgBrM,SAC1I4D,KAAK+3D,MAAM,4BAA6B,UAAY53B,EAAS,KAAO+J,EAAK,mBAC3E,EAEA,wBAAM8xB,GACJh8D,KAAK+3D,MAAM,4BAA6B,cACxC,IAAI3vD,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UACtC8hC,QAAY9hC,EAAS4iB,cAAc,aAAc,gBACrD,GAAIkf,EAAI12B,KAEN,YADAxT,KAAK+3D,MAAM,4BAA6B7tB,EAAK,oBAG/C,IAAIkyB,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAME,QAAsBH,EAAQE,IAAIE,gBAAgB,aAActyB,GACtE/mB,QAAQpX,IAAI,mCAAoCwwD,GAChDp5C,QAAQpX,IAAI,6BAA8B3D,EAASK,WAAW,gBAAgBrM,SAC9E,MAAM+jC,EAASo8B,IAAkBn0D,EAASK,WAAW,gBAAgBrM,QACrE4D,KAAK+3D,MAAM,4BAA6B,UAAY53B,EAAS,KAAQ+J,EAAK,mBAC5E,EAEA,0BAAM+xB,CAAqBQ,GACzB,IAAIr0D,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UACpCg0D,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEdjgE,EAAUgM,EAASK,WAAW,gBAAgBrM,QAClD,MAAM0N,QAAoBsyD,EAAQM,mBAAmBC,QAAQ,qCAAsC,IAAMvgE,GAGzG,GAFA4D,KAAK+3D,MAAM,4BAA6BjuD,GAEpC2yD,EAAY,CACd,IAAIvyB,QAAY9hC,EAAS2gB,gBAAiBjf,EAAa,gBACvD9J,KAAK+3D,MAAM,4BAA6B7tB,EAAK,uBAC/C,KAAO,CACL,IAAImvB,QAAWjxD,EAASyjB,uBAAuB/hB,EAAY,gBAC3D9J,KAAK+3D,MAAM,4BAA6BsB,EAAI,0BAC9C,CACF,EAEA,iBAAMuD,GACJ,IAAIR,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZQ,EAAkB,6CAEtB,IACE,MAAMvxC,QAAiB8wC,EAAQE,IAAIM,YAAYC,GACzCC,EAAMxxC,EAASwxC,IAAIC,OACzB55C,QAAQpX,IAAI,WACZoX,QAAQpX,IAAI+wD,EACd,CAAE,MAAOlzD,GACPuZ,QAAQpX,IAAI,8BAA+BnC,EAC7C,CACF,EAEA,yCAAMsyD,CAAoCO,GAExC,IAAIL,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZQ,EAAkB,6CAClBz0D,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UACtChM,EAAUgM,EAASK,WAAW,gBAAgBrM,QAClD,MAAM4gE,EAAY,CAChB,CAACxvC,KAAM,UAAW1yB,MAAO,GACzB,CAAC0yB,KAAM,UAAW1yB,MAAO,GACzB,CAAC0yB,KAAM,UAAW1yB,MAAO,IAErB0O,QAAY4yD,EAAQM,mBAAmBO,qBAAqBJ,EAAiB,iCAAkC,CAAC,EAAGG,EAAW5gE,GAIpI,GAHA+mB,QAAQpX,IAAI,uBACZoX,QAAQpX,IAAIvC,GACZxJ,KAAK+3D,MAAM,4BAA6BvuD,EAAIM,aACxC2yD,EAAY,CACd,IAAIpD,QAAWjxD,EAAS2gB,gBAAiBvf,EAAIM,YAAY,gBACzD9J,KAAK+3D,MAAM,4BAA6BsB,EAAI,0BAC9C,KAAO,CACL,IAAIA,QAAWjxD,EAASyjB,uBAAuBriB,EAAIM,YAAY,gBAC/D9J,KAAK+3D,MAAM,4BAA6BsB,EAAI,0BAC9C,CACF,EAEA,wCAAM8C,CAAmCM,GACvC,IAAII,EAAkB,6CAClBz0D,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UACtChM,EAAUgM,EAASK,WAAW,gBAAgBrM,QAClD,MAAM4gE,EAAY,CAChB,CAACxvC,KAAM,UAAW1yB,MAAO+hE,GACzB,CAACrvC,KAAM,UAAW1yB,MAAO,MAE3B,IAAIshE,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAM7yD,QAAY4yD,EAAQM,mBAAmBO,qBAAqBJ,EAAiB,2BAA4B,CAAC,EAAGG,EAAW5gE,GAE9H,IAAI0N,EAAcN,EAAIM,YAGtB,GAFA9J,KAAK+3D,MAAM,4BAA6BjuD,GAEpC2yD,EAAY,CACd,IAAIpD,QAAWjxD,EAAS2gB,gBAAgBjf,EAAY,gBACpD9J,KAAK+3D,MAAM,4BAA6BsB,EAAI,0BAC9C,KAAO,CACL,IAAIA,QAAWjxD,EAASyjB,uBAAuB/hB,EAAY,gBAC3D9J,KAAK+3D,MAAM,4BAA6BsB,EAAI,0BAC9C,CAEF,ICrIJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,qBV4vCA,MAAM,iBAAC6D,IAAoBxiE,EAAQ,QAC7B,WAACyiE,IAAcziE,EAAQ,OAQ7B,IAAI0iE,KAEJ,MAAMC,GAAY,CAChB,EAAG,CAACvhE,KAAM,MAAOk1D,SAAS,GAC1B,GAAI,CAACl1D,KAAM,MAAOk1D,SAAS,GAC3B,IAAK,CAACl1D,KAAM,UAAWk1D,SAAS,GAChC,IAAK,CAACl1D,KAAM,OAAQk1D,SAAS,GAC7B,KAAM,CAACl1D,KAAM,OAAQk1D,SAAQ,GAC7B,WAAY,CAACl1D,KAAM,MAAOk1D,SAAS,GACnC,cAAe,CAACl1D,KAAM,MAAOk1D,SAAS,GACtC,cAAe,CAACl1D,KAAM,MAAOk1D,SAAS,GACtC,gBAAiB,CAACl1D,KAAM,QAASk1D,SAAS,GAC1C,0CAA2C,CACzCl1D,KAAM,SACNk1D,SAAS,GAEX,0CAA2C,CACzCl1D,KAAM,cACNk1D,SAAS,GAEX,eAAgB,CACdl1D,KAAM,gBACNk1D,SAAS,GAEX,mBAAoB,CAACl1D,KAAM,mBAAoBk1D,SAAS,GACxD,mBAAoB,CAACl1D,KAAM,WAAYk1D,SAAS,GAChD,kBAAmB,CAACl1D,KAAM,UAAWk1D,SAAS,GAC9C,mBAAoB,CAACl1D,KAAM,QAASk1D,SAAS,GAC7C,qBAAsB,CAACl1D,KAAM,SAAUk1D,SAAS,GAChD,mBAAoB,CAACl1D,KAAM,MAAOk1D,SAAS,GAC3C,iBAAkB,CAACl1D,KAAM,iBAAkBk1D,SAAS,GACpD,eAAgB,CAACl1D,KAAM,OAAQk1D,SAAS,GACxC,OAAQ,CAACl1D,KAAM,kBAAmBk1D,SAAS,GAC3C,KAAM,CAACl1D,KAAM,QAASk1D,SAAS,GAC/B,QAAY,CAACl1D,KAAM,UAAWk1D,SAAS,GACvC,mBAAoB,CAACl1D,KAAM,WAAYk1D,SAAS,GAChD,wCAAwC,CAACl1D,KAAK,eAAgBk1D,SAAS,GACvE,wCAAwC,CAACl1D,KAAK,eAAgBk1D,SAAS,GACvE,2CAA2C,CAACl1D,KAAK,kBAAmBk1D,SAAS,GAC7E,yCAAyC,CAACl1D,KAAK,gBAAiBk1D,SAAS,IAGrEsM,GAAgC,CACpC,OAGF,IAAIC,GAAe,IAAIh9C,IAAI,IACvBi9C,GAAiB,CAAC,SAAU,UAAW,SACvCC,GAAyB,OACzBC,GAAmB,eACnBC,GAAmB,QACnBC,GAAgBtN,EAAAA,MAAMC,MAG1B,IACEz0D,KAAM,MACN2nC,WAAY,CACVo6B,qBAAoB,EACpBC,UAAS,KACTC,SAAQ,EACRC,aAAY,EACZC,SAAQ,EACRC,cAAaA,GAGfpG,KAAAA,GACE,MAAMrB,GAAkBf,EAAAA,EAAAA,KAAI,GAE5B,MAAO,CACLe,kBAEJ,EACAv6D,KAAMA,KACG,CACLu2D,UAAW,WACX0L,UAAW,GACXC,cAAe,GACfC,iBAAkB,GAClBzN,cAAe,GACf0N,gBAAiB,IACjBC,QAAS,GACTC,cAAc,EACd7M,iBAAkB,UAClBE,kBAAmB,iBACnBN,eAAgB,YAChBE,cAAe,oBACfO,oBAAqB,aACrByM,YAAa,GACbC,YAAa,GACbrI,gBAAiB,GACjBsI,cAAe,WACfjI,mBAAoB,OACpB3E,cAAe,GACfwE,QAAS,GACTqI,mBAAoB,GACpB1M,WAAW,EACX2M,eAAe,EACfvM,QAAS,+BACT/F,cAAe,GACf0E,eAAe,EACfF,gBAAiBsM,GACjBnM,kBAAoB3oD,GACXg1D,GAAauB,IAAIv2D,GAE1BimD,OAA+C,SAAvCltB,aAAazwB,QAAQ,eAC7B+9C,cAAwD,SAAzCttB,aAAazwB,QAAQ,iBACpCk+C,OAAQyO,GACR/N,iBAAkB,CAAC,OAAQ,OAAQ,YACnCJ,eAAgBoO,GAChB5N,SAAU6N,GACVxN,QAAS,CACP,QACA,QACA,QACA,KACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEFO,eAAgB,GAChBsO,mBAAoB,GACpBpO,eAAgB,CACd,+BACA,qBACA,kCACA,+BACA,uCACA,uBACA,mCACA,kCACA,0BACA,mBACA,qBACA,uBACA,sBAGFnT,SAAUmgB,GACVvN,MAAOwN,GACPtN,MAAOA,EAAAA,MACP5zC,SAAU+gD,GACVvH,iBAAkBwH,GAClB/O,aAAeqQ,IACb19B,aAAaU,QAAQ,cAAe,GAAGg9B,KACvC//D,SAASggE,QAAQ,EAEnBpQ,oBAAsBmQ,IACpB19B,aAAaU,QAAQ,gBAAiB,GAAGg9B,IAAY,EAEvD7N,mBAAqB5oD,IACnB4a,QAAQpX,IAAI,gCAAgCxD,GACxCg1D,GAAauB,IAAIv2D,GACnBg1D,GAAa11B,OAAOt/B,GAEpBg1D,GAAavd,IAAIz3C,EACnB,EAEF22D,uBAAwB,KAG5BC,SAAU,CACR37B,iBAAkB,WAChB,OAAOxjC,KAAK+xD,aACd,GAEFn1D,QAAS,CACPoiE,SAAAA,CAAUz2D,GACR,OAAOvI,KAAKo/D,eAAeN,IAAIv2D,EACjC,EAEA82D,UAAAA,CAAWC,GACT,GAAIA,EAAUjjE,OAAS,EAAG,CACxB,MAAMkjE,EAAgB5kE,OAAO8hB,OAAO,CAAC,EAAGzc,KAAK+wD,iBAC7C,IAAK,MAAMxoD,KAAW+2D,EAChBC,EAAch3D,KAChBg3D,EAAch3D,GAASyoD,SAAWuO,EAAch3D,GAASyoD,SAG7DhxD,KAAK+wD,gBAAkBwO,CACzB,CAEAv/D,KAAKixD,eAAgB,CACvB,EAEA,oBAAM0B,CAAe6M,GACnB,MAAMC,EAAUD,EAAI3H,MAAQ2H,EAAI3H,MAAM/7D,KAAO0jE,EAAI1jE,KACjDkE,KAAK2+D,cAAgBc,EACrBt8C,QAAQpX,IAAI,UAAW0zD,GAElBjiE,OAAO4K,UACV+a,QAAQvZ,MAAM,aAId5J,KAAKy2D,gBADQ,oBAAXgJ,EAMJjiE,OAAO4K,SAASqX,gBAAgBzf,KAAK2+D,cACvC,EAEA,oBAAMnN,SACEh0D,OAAOkiE,QAAQC,YAAYxrD,OAC5BvK,GAAUuZ,QAAQvZ,MAAM,SAAUA,IACzC,EAEA,oBAAM0nD,GAGJ,IAAIsO,EAFJz8C,QAAQpX,IAAI,oFACZvO,OAAOyvB,aAAc,EAEhBjtB,KAAKwuD,QAURhxD,OAAOkiE,QAAU,IAAIG,EAAAA,gBAAgB,CACnCh7D,aAAc,CACZ/I,KAAM,4BACN0mB,KAAM,oDAERs9C,qBAAsB,CACpBzQ,eAAgB,eAChBp/B,aAAa,OACb8+B,OAAQ,OAEVgR,cAAe,CACb3P,MAAOE,EAAAA,MAAMC,OAEf/S,SAAU,UAGZoiB,EAAWI,EAAAA,sBAAsBrsD,KAAK,CACpC9O,aAAc,CACZ2d,KAAM,kEACN1mB,KAAM,4BACN2mB,YAAY,gDAEdq9C,qBAAsB,CACpBzQ,eAAgBoO,GAChB1O,OAAQ,OAEVvR,SAAUmgB,GACVoC,cAAe,CACb3P,MAAOwN,OArCXgC,EAAWx6D,EAAAA,qBAAqBuO,KAAK,CACnC9O,aAAc,CACZ/I,KAAM,mBACN0mB,KAAM,oDAER/G,gBAAgB,aAuCpBmkD,EAAS53D,MAAMI,IAmBb,GAlBA5K,OAAO4K,SAAWA,EAClB5K,OAAO2jB,YAAc,IAAIlc,EAAAA,eAAezH,OAAO4K,UAC/C5K,OAAO2jB,YAAYioB,gBAAgBwE,IAC7BzqB,QAAQpX,IAAI,gCAAiCxQ,KAAKC,UAAUoyC,GAAY,IACtEx5B,IACF+O,QAAQpX,IAAI,sCAAuCqI,EAAI,IAIzD5W,OAAO4K,oBAAoB43D,EAAAA,uBAC7BxiE,OAAO4K,SAAS63D,oBAAoBvV,IAClCvnC,QAAQpX,IAAI,wBAAwBxQ,KAAKC,UAAUkvD,KAAS,IAIhEvnC,QAAQpX,IAAI,iBAAkB3D,GAC9B+a,QAAQpX,IAAI,yBAA0BxQ,KAAKC,UAAU4M,EAASS,UAE1DT,EAASS,SAASC,WAAY,CAChC,MAAMw2D,EAAY,GAClBn8C,QAAQpX,IAAI,aAAc3D,EAASS,QAAQC,YAC3CnO,OAAO+lC,QAAQt4B,EAASS,QAAQC,YAAYhM,SAAQ,EAAE+a,EAAK/c,MAC7C,WAAR+c,EACF/c,EAAMiC,OAAOD,SAASK,IACpBmiE,EAAUhjE,KAAKooB,SAASvnB,EAAMs7C,UAAU,IAAI,IAG9C39C,EAAMiC,OAAOD,SAASK,IACpBmiE,EAAUhjE,KAAKa,EAAM,GAEzB,IAGFgmB,QAAQpX,IAAI,mBAAoBuzD,GAChCt/D,KAAKq/D,WAAWC,EAClB,MACEt/D,KAAKq/D,WAAW,IAGlBj3D,EAASiX,GAAG,eAAgB6gD,KACrBnqC,EAAAA,EAAAA,iBACC/1B,KAAKmgE,UACHD,GAAQlgE,KAAKwuD,QAAWxuD,KAAK4uD,gBAC/B5uD,KAAKsyD,QAAU4N,EACflgE,KAAKkyD,WAAY,IAIvB/uC,QAAQpX,IAAI,yBAA0Bm0D,EAAI,IAG5C93D,EAASiX,GAAG,wBAAyBoc,IACnCtY,QAAQpX,IAAI,kCAAmCxQ,KAAKC,UAAUigC,IAC9Dz7B,KAAKk7D,cAAcz/B,EAAM,IAG3BrzB,EAASiX,GAAG,qBAAsB6gD,KAC5BnqC,EAAAA,EAAAA,iBACE/1B,KAAKmgE,UACHD,GAAQlgE,KAAKwuD,QAAWxuD,KAAK4uD,gBAC/B5uD,KAAKsyD,QAAU4N,EACflgE,KAAKkyD,WAAY,IAIvB/uC,QAAQpX,IAAI,+BAAgCm0D,EAAI,IAIlD93D,EAASiX,GAAG,sBAAsB,KAChC8D,QAAQpX,IAAI,gCAAgC,IAG9C3D,EAASiX,GAAG,WAAYxW,IACtBsa,QAAQpX,IAAI,2BAA4BlD,EAAQ,IAElDT,EAASiX,GAAG,aAAcxW,IACxBsa,QAAQpX,IAAI,6BAA8BlD,GAC1C7I,KAAK+xD,cAAgB,WAAW,IAElC3pD,EAASiX,GAAG,cAAc,EAAE5P,YAC1B0T,QAAQpX,IAAI,wBAAwB0D,KACpCzP,KAAK+xD,cAAgB,kBAAkB,IAEzC3pD,EAASiX,GAAG,kBAAkB,EAAE5P,YAC9B0T,QAAQpX,IAAI,4BAA4B0D,IAAQ,IAElDrH,EAASiX,GAAG,kBAAmBxW,IAC7Bsa,QAAQpX,IAAI,2BAA4BxQ,KAAKC,UAAUqN,GAAS,IAGlET,EAASiX,GAAG,kBAAmBxW,IACzBA,IACF7I,KAAKu2D,QAAUh7D,KAAKC,UAAUqN,IAEhCsa,QAAQpX,IAAI,2BAA4BxQ,KAAKC,UAAUqN,GAAS,GAChE,GAGN,EAEA,uBAAM6oD,GACJvuC,QAAQpX,IAAI,wCAAwCiC,KAAKC,SACrDzQ,OAAO4K,SACTpI,KAAKogE,aAELj9C,QAAQpX,IAAI,6CAEhB,EAEA,yBAAM6lD,GAEJ,GADAzuC,QAAQpX,IAAI,wCAAwCiC,KAAKC,SACrDzQ,OAAO4K,UACT,GAAI5K,OAAO4K,oBAAoBhD,EAAAA,qBAC7B,GAAI5H,OAAO4K,SAAS0T,YAClB,IACE,IAAIvK,QAAgB/T,OAAO4K,SAAS4W,mBAElChf,KAAKu2D,QADe,iBAAXhlD,EACMA,EAEAhW,KAAKC,UAAU+V,EAElC,CAAE,MAAO1J,GACP7H,KAAKu2D,QAAUh7D,KAAKC,UAAUqM,EAChC,MAEA7H,KAAKu2D,QAAU,qBAKnBpzC,QAAQpX,IAAI,0CAEhB,EAEA,sBAAM+lD,GACJ,IACE3uC,QAAQpX,IAAI,qCAEZ,IAAI3D,EAAW5K,OAAO4K,eAChBA,EAASgK,aACfpS,KAAK+xD,cAAgB,cACvB,CAAE,MAAOnoD,GACPuZ,QAAQpX,IAAI,0BAA2BnC,EAAM2H,SAC7CvR,KAAKusD,cAAgB3iD,EAAM2H,OAC7B,CACF,EAEA,yBAAMshD,GACJ,IAAI32D,EAAO,CAACgV,OAAQ,uBACpBlR,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,0BAAMk5D,GACJ,IAAIr5D,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAClDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,UAAW3P,EAASb,KAAKC,UAAUO,IAC/C,IAAIG,EAAO,CAACgV,OAAQ,uBACpBF,OAAO,CAAC,CACN,QAAW,EACX,KAAQ5U,EACR,GAAMA,EACN,MAAS,OACT,SAAY,gDAId+mB,QAAQpX,IAAI,2BAA4B3P,EAASb,KAAKC,UAAUU,IAChE8D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,+BAAMm5D,GACJ,IAAIt5D,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAClDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,UAAW3P,EAASb,KAAKC,UAAUO,IAC/C,IAAIG,EAAO,CAACgV,OAAQ,uBAClBF,OAAO,CAAC,CACN,QAAW,GACX,KAAQ5U,EACR,GAAMA,EACN,MAAS,OACT,MAAS,qBACT,SAAY,gDAGhB+mB,QAAQpX,IAAI,gCAAiC3P,EAASb,KAAKC,UAAUU,IACrE8D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,yCAAMo5D,GACJ,IAAIv5D,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAClDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,UAAW3P,EAASb,KAAKC,UAAUO,IAC/C,IAAIG,EAAO,CAACgV,OAAQ,uBAClBF,OAAO,CAAC,CACN,QAAW,GACX,KAAQ5U,EACR,GAAM,6CACN,MAAS,aACT,MAAS,MACT,SAAY,gDAGhB+mB,QAAQpX,IAAI,0CAA2C3P,EAASb,KAAKC,UAAUU,IAC/E8D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,iBAAM42D,GACJ,IAAI52D,EAAO,CAACgV,OAAQ,eACpBlR,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EACA,gCAAM62D,GACJ,IAAI72D,EAAO,CACTgV,OAAQ,6BACRF,OAAQ,CACN,CACEzI,QAAS,UAIfvI,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,6BAAM82D,GACJ,IAAI92D,EAAO,CACTgV,OAAQ,0BACRF,OAAQ,CACNsvD,kBAAmB,CAAC,4BACpB/3D,QAAS,OACTg4D,UAAW,OACXC,eAAgB,CAAC1kE,KAAM,OAAQ2kE,OAAQ,OAAQC,SAAU,IACzDh5C,QAAS,CAAC,yBAId1nB,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA+nB,oBAAAA,CAAqBrb,GACnB,IAAKA,EACH,MAAO,GAET,IACE,IAAI3L,EAAa2L,EAAQ1L,MAAM,KAAKE,MAAM,GACtChB,EAAUa,EAAWZ,OAAS,EAAIY,EAAWI,KAAK,KAAO,GAC7D,OAAOjB,CACT,CAAE,MAAOyL,GACP,MAAO,EACT,CAEF,EAEAw4D,4BAAAA,CAA6B93D,GAE3B,GADA4a,QAAQpX,IAAI,gCAAiCxD,GACzC/K,OAAO4K,UAAY5K,OAAO4K,SAASS,SAAWN,EAAS,CACzD,IAAIsP,EAAMtP,EAAQpJ,SAAS,KAAOoJ,EAAQrL,MAAM,KAAK,GAAKqL,EACtDtM,EAAYuB,OAAO4K,SAASS,QAAQC,WACxC,GAAY,WAAR+O,EAAkB,CACpB,IAAI8oD,EAAe1kE,EAAU4b,GAC7B,GAAI8oD,GAAgBA,EAAa5kE,SAAU,CACzC,IAAIA,EAAW4kE,EAAa5kE,SAC5B,MAAO,IACF,IAAIwkB,IACHxkB,EAEKmC,QAAQ0K,GAAYA,EAAQzJ,SAASoJ,EAAQ,OAE7CuV,KAAKlV,GACG5I,KAAKikB,qBAAqBrb,MAK/C,CAEF,CACF,CAEF,EAEA,mBAAMqqD,GACJ,GAA2B,aAAvBjzD,KAAK2+D,cAA8B,CASrC,IAAI5iE,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAClDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,UAAW3P,EAASb,KAAKC,UAAUO,IAE/C,IAAI6kE,EAAU,CACZ1vD,OAAQ,gBACRF,OAAQ,CACN,qFACA5U,IAIJ4D,KAAKq2D,gBAAkB96D,KAAKC,UAAUolE,EACxC,MAAO,GACoB,eAAvB5gE,KAAK2+D,eACkB,eAAvB3+D,KAAK2+D,cACP,CAUA,IAAIkC,EAAc,CAChB3vD,OAAQ,gBACRF,OAAQ,CACNO,QACI,uFAGRvR,KAAKq2D,gBAAkB96D,KAAKC,UAAUqlE,EACxC,MAAO,GAA2B,cAAvB7gE,KAAK2+D,cAA+B,CAC7C,IAAIziE,EAAO,CACTgV,OAAQ,gBACRF,OAAQ,CACNO,QACI,uFAIRvR,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,CACF,EAEA,8BAAMi5D,GACJ,IAAIj5D,EAAO,CACTgV,OAAQ,sBACR3I,QAAS,aACTyI,OAAQ,CACNlW,MAAO,kBACPgsD,IAAK,UACL3iB,GAAI,6CACJ3X,KAAM,6CACNtwB,KAAM,+sBAGV8D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EACA,6BAAMq3D,GACJ,MAAM73D,EAAU,mz6BAChB,GAA2B,aAAvBsE,KAAK2+D,cAA8B,CASrC,IAAI5iE,QAAiByB,OAAO4K,SAASqB,QACnC,CAAEyH,OAAQ,uBACV,YAEE9U,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,UAAW3P,EAASb,KAAKC,UAAUO,IAE/C,IAAI6kE,EAAU,CACZ1vD,OAAQ,gBACRF,OAAQ,CACNtV,EACAU,IAIJ4D,KAAKq2D,gBAAkB96D,KAAKC,UAAUolE,EACxC,MAAO,GACkB,eAAvB5gE,KAAK2+D,eACkB,eAAvB3+D,KAAK2+D,cACL,CAUA,IAAIkC,EAAc,CAChB3vD,OAAQ,gBACRF,OAAQ,CACNO,QACE7V,IAGNsE,KAAKq2D,gBAAkB96D,KAAKC,UAAUqlE,EACxC,MAAO,GAA2B,cAAvB7gE,KAAK2+D,cAA+B,CAC7C,IAAIziE,EAAO,CACTgV,OAAQ,gBACRF,OAAQ,CACNO,QACE7V,IAINsE,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,CACF,EAEA,0BAAMg3D,GAiBJ,IAAIn3D,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAElDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,UAAW3P,EAASb,KAAKC,UAAUO,IAE/C,IAAIG,EAAO,CACTgV,OAAQ,uBACRF,OAAQ,CACN5U,EACA,CACE0kE,MAAO,CACLC,aAAc,CACZ,CACEjlE,KAAM,OACN0xB,KAAM,UAER,CACE1xB,KAAM,UACN0xB,KAAM,UAER,CACE1xB,KAAM,UACN0xB,KAAM,WAER,CACE1xB,KAAM,oBACN0xB,KAAM,YAGVwzC,OAAQ,CACN,CACEllE,KAAM,OACN0xB,KAAM,UAER,CACE1xB,KAAM,SACN0xB,KAAM,YAGVyzC,KAAM,CACJ,CACEnlE,KAAM,OACN0xB,KAAM,UAER,CACE1xB,KAAM,KACN0xB,KAAM,UAER,CACE1xB,KAAM,WACN0xB,KAAM,YAIZ0zC,YAAa,OACbC,OAAQ,CACNrlE,KAAM,aACN6O,QAAS,IACTpC,QAAS,EACT64D,kBAAmB,8CAErB7vD,QAAS,CACPib,KAAM,CACJ1wB,KAAM,MACNojB,OAAQ,8CAEVilB,GAAI,CACFroC,KAAM,MACNojB,OAAQ,8CAEVmiD,SAAU,kBAMlBrhE,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EACA,kCAAMi3D,GACJ,IAAIj3D,EAAO,CAAC,EACe,aAAvB8D,KAAK2+D,cACPziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwb,KAAM,6CACNjkB,QAAS,MACT47B,GAAI,6CACJrpC,MAAO,iBACPwmE,qBAAsB,aACtBxa,IAAK,SACLya,aAAc,gBAGc,eAAvBvhE,KAAK2+D,cACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwwD,SAAU,eACV92D,MAAO,SACPxO,KAAM,KACNpB,MAAO,OACPqpC,GAAI,6CACJs9B,SAAU,SACVj1C,KAAM,+CAGsB,cAAvBxsB,KAAK2+D,cACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACN81C,IAAK,SACLhsD,MAAO,iBACP0xB,KAAM,6CACNg1C,SAAU,aACVr9B,GAAI,6CACJ57B,QAAS,SAGmB,eAAvBvI,KAAK2+D,gBACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwb,KAAM,6CACN2X,GAAI,6CACJrpC,MAAO,MACPyN,QAAS,UAKf,IAAIxM,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAElDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,eAAgB3P,GAC5BF,EAAK8U,OAAO,MAAQ5U,EACpBF,EAAK8U,OAAO,QAAU5U,EACtB4D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,iCAAMk3D,GACJ,IAAIl3D,EAAO,CAAC,EAEe,aAAvB8D,KAAK2+D,cACPziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwb,KAAM,6CACNtwB,KAAM,6IACNioC,GAAI,+CAGwB,eAAvBnkC,KAAK2+D,cACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwb,KAAM,6CACNtwB,KAAM,6IACNioC,GAAI,+CAGwB,cAAvBnkC,KAAK2+D,cACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwb,KAAM,6CACN1xB,MAAO,MACPgsD,IAAK,SACL0a,SAAU,aACVtlE,KAAM,6IACNioC,GAAI,+CAGwB,eAAvBnkC,KAAK2+D,gBACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACNwb,KAAM,6CACNtwB,KAAM,6IACNioC,GAAI,gDAKV,IAAIpoC,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAElDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,eAAgB3P,GAC5BF,EAAK8U,OAAO,QAAU5U,EACtB4D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,8BAAMm3D,GACJ,IAAIn3D,EAAO,CAAC,EACe,aAAvB8D,KAAK2+D,cACPziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACN81C,IAAK,UACL5qD,KAAM,60GACNioC,GAAI,6CACJrpC,MAAO,MACP0xB,KAAM,+CAGsB,eAAvBxsB,KAAK2+D,gBACdziE,EAAO,CACLgV,OAAQ,sBACRF,OAAQ,CACN81C,IAAK,UACL5qD,KAAM,60GACNioC,GAAI,6CACJrpC,MAAO,MACP0xB,KAAM,gDAKZ,IAAI5B,EAAMrvB,KAAKC,UAAUU,GACzBinB,QAAQpX,IAAI,iBAAe6e,EAAIvuB,QAC/B,IAAIN,EAAWiE,KAAKqgE,6BAA6BrgE,KAAK2+D,eAElDviE,EAAUL,EAAS,GACvBonB,QAAQpX,IAAI,eAAgB3P,GAC5BF,EAAK8U,OAAO,QAAU5U,EACtB4D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,wBAAMg5D,GACJ,IACE,IAAIh5D,EAAO,CACTgV,OAAQ,2BACRF,OAAQ,CAAC,uEAEXhR,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,GAEtC,IAAIb,QAAemC,OAAO4K,SAASqB,QAAQvN,EAAM8D,KAAK2+D,eACtDx7C,QAAQpX,IAAI,wCAAqCxQ,KAAKC,UAAUH,MAG9D2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,CAAC,MAAOwM,GACN7H,KAAKu2D,QAAUh7D,KAAKC,UAAUqM,EAChC,CAEF,EACA,uBAAMyrD,GACJ,IAAIp3D,EAAO,CAAC,EACe,aAAvB8D,KAAK2+D,cACPziE,EAAO,CACLgV,OAAQ,oBACRF,OAAQ,CACNwc,KAAM,QACNmH,QAAS,CACPv4B,QAAS,6CACTqkE,OAAQ,UACRiB,MACI,0FACJhB,SAAU,KAIgB,eAAvB1gE,KAAK2+D,cACdziE,EAAO,CACLgV,OAAQ,oBACRF,OAAQ,CACNwc,KAAM,QACNmH,QAAS,CACPv4B,QAAS,6CACTqkE,OAAQ,OACRiB,MAAO,yDACPhB,SAAU,KAIgB,cAAvB1gE,KAAK2+D,gBACdziE,EAAO,CACLgV,OAAQ,oBACRF,OAAQ,CACNwc,KAAM,QACNmH,QAAS,CACPv4B,QAAS,6CACTqkE,OAAQ,MACRiB,MAAO,gDACPhB,SAAU,OAMlB1gE,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EAEA,yBAAMu3D,GACJ,IAAIv3D,EAAO,CACT,SAAY,CAAC,CACX,QAAW,mDACX,OAAU,YACV,QAAW,6MAEb,WAAc,cACd,QAAW,QAEb8D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,EACxC,EACAs3D,cAAAA,GACExzD,KAAKq2D,gBAAkB,0BACvB,IAAIh7D,EAASmC,OAAO2jB,YAAYvY,UAE9B5I,KAAKu2D,QADHl7D,EACaE,KAAKC,UAAUH,GAEf,MAEnB,EAEA,qBAAMsmE,GACJx+C,QAAQpX,IAAI,kCAAmCvO,OAAO2jB,YAAYrF,aAClEqH,QAAQpX,IAAI,gCAAiCxQ,KAAKC,UAAUgC,OAAO2jB,YAAYvY,YAC/Eua,QAAQpX,IAAI,+BAAgCxQ,KAAKC,UAAUgC,OAAO2jB,YAAYjC,UAChF,EAEA,0BAAM0iD,GAEJ,MAAMpiE,QAAiBqiE,MAAM,4GACvB3lE,QAAasD,EAAS2qC,OAC5BhnB,QAAQpX,IAAI,WAAYxQ,KAAKC,UAAUU,UACjC8D,KAAKizD,gBACP6O,QAAQ,kCACV9hE,KAAK6J,iBAIT,EAEA,qBAAMA,GACJ,KAAI7J,KAAK2+D,cAAc31D,WAAW,UAC3BhJ,KAAK2+D,cAAc31D,WAAW,aAC9BhJ,KAAK2+D,cAAc31D,WAAW,WAC9BhJ,KAAK2+D,cAAc31D,WAAW,UAC9BhJ,KAAK2+D,cAAc31D,WAAW,WASrC,GANAma,QAAQpX,IAAI,kBAAmBvO,OAAO4K,UACtC+a,QAAQpX,IAAI,4BAA6B/L,KAAKq2D,iBACzC74D,OAAO4K,UACV+a,QAAQvZ,MAAM,aAGZ5J,KAAKq2D,iBAAmB74D,OAAO4K,SAAU,CAE3C,MAAM25D,EAAWxmE,KAAKmO,MAAM1J,KAAKq2D,iBACjC,IACElzC,QAAQpX,IAAI,iCAAkCg2D,EAAS7wD,QAEvD,IAAI3I,EAAU,WAWd,GAVIvI,KAAK2+D,gBACPp2D,EAAUvI,KAAK2+D,cACfx7C,QAAQpX,IACJ,2CACA/L,KAAK2+D,gBAGXx7C,QAAQpX,IAAI,wBAAyBiC,KAAKC,OAC1CkV,QAAQpX,IAAI,eAAexD,GAEZ,eAAXA,EAA0B,CAC5B,MAAMy5D,EAAU,IAAIC,EAAAA,EAAWzkE,OAAO4K,UACtC,IAAI85D,EAAY,iBAChB,GAA6B,kBAAzBliE,KAAKw6D,iBAAsC,CAC7C,IAAIn/D,EAAS2mE,EAAQv5D,aAEnBzI,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,CACA,GAA6B,uBAAzB2E,KAAKw6D,iBACP0H,QAAkBF,EAAQj5C,gBACtB/oB,KAAKu6D,uBAETv6D,KAAKu2D,QAAUh7D,KAAKC,UAAU0mE,QACzB,GAA6B,iCAAzBliE,KAAKw6D,iBACd0H,QAAkBF,EAAQ9sC,0BACtBl1B,KAAKu6D,uBAETv6D,KAAKu2D,QAAUh7D,KAAKC,UAAU0mE,QACzB,GAA6B,mBAAzBliE,KAAKw6D,iBACdr3C,QAAQpX,IAAI,kBAAmB/L,KAAKu6D,uBACpC2H,QAAkBF,EAAQ54D,YAAYpJ,KAAKu6D,uBAC3Cv6D,KAAKu2D,QAAUh7D,KAAKC,UAAU0mE,GAE9BliE,KAAKmiE,oBAAoBD,GAAWl6D,MAAKwB,IACvCxJ,KAAKu2D,QAAU,qBAAqB/sD,EAAInO,WAAWmO,EAAIqM,UAAU7V,KAAKu2D,SAAQ,SAE3E,GAA6B,2BAAzBv2D,KAAKw6D,iBACdr3C,QAAQpX,IACJ,0BACA/L,KAAKu6D,uBAET2H,QAAkBF,EAAQzsC,oBACtBv1B,KAAKu6D,uBAETv6D,KAAKu2D,QAAUh7D,KAAKC,UAAU0mE,GAE9BliE,KAAKmiE,oBAAoBD,GAAWl6D,MAAKwB,IACvCxJ,KAAKu2D,QAAU,qBAAqB/sD,EAAInO,WAAWmO,EAAIqM,UAAU7V,KAAKu2D,SAAQ,SAE3E,GAA6B,eAAzBv2D,KAAKw6D,iBAAmC,CACjDr3C,QAAQpX,IAAI,eAAgB/L,KAAKu6D,uBACjCp3C,QAAQpX,IACJ,yBAAsBxQ,KAAKC,UAAUumE,MAEzC,MAAM73B,QAAY1sC,OAAO4K,SAASqB,QAAQs4D,EAAUx5D,GACpD4a,QAAQpX,IAAI,yBAAsBxQ,KAAKC,UAAUH,MAE/C2E,KAAKu2D,QADW,iBAAPrsB,EACMA,EAEA3uC,KAAKC,UAAU0uC,EAElC,CAEA,YADA/mB,QAAQpX,IAAI,wBAAyBiC,KAAKC,MAE5C,CAAO,GAAgB,aAAZ1F,EAAwB,CACjC4a,QAAQpX,IACJ,wCAAqCxQ,KAAKC,UAAUumE,MAExD,IAAI1mE,QAAemC,OAAO2jB,YAAYtX,gBAAgBk4D,GAStD,OARA5+C,QAAQpX,IACJ,qCAAkCxQ,KAAKC,UAAUH,WAGnD2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,GAGlC,CAEA,GAAe,eAAXkN,EAA0B,CAC5B,MAAM65D,EAAa,IAAIj9D,EAAAA,eAAe3H,OAAO4K,UAC7C,IAAIi6D,EAAY,iBAyChB,YAvC6B,mBAAzBriE,KAAKsiE,kBACPD,QAAkBD,EAAWh5D,YAAYb,EAASvI,KAAKuiE,sBAAsB,YAC7EviE,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACI,YAAzBriE,KAAKsiE,kBACdD,QAAkBD,EAAWluD,KAAK3L,EAASvI,KAAKuiE,uBAChDviE,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACI,gBAAzBriE,KAAKsiE,kBACdD,QAAkBD,EAAW79B,SAASh8B,EAASvI,KAAKuiE,sBAAsB/9B,QAASxkC,KAAKuiE,sBAAsB5tC,SAE9G30B,KAAKwiE,YAAYH,GAAWr6D,MAAKy6D,IAC/BziE,KAAKu2D,QAAUh7D,KAAKC,UAAUinE,EAAQ,IACrCtuD,OAAMvK,IACP5J,KAAKu2D,QAAU3sD,CAAI,KAEa,iBAAzB5J,KAAKsiE,kBACdD,QAAkBD,EAAW39B,UAAUl8B,EAASvI,KAAKuiE,sBAAsB59B,SAAU3kC,KAAKuiE,sBAAsB5tC,SAChH30B,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACI,uBAAzBriE,KAAKsiE,kBACdD,QAAkBD,EAAWv9B,gBAAgBt8B,EAASvI,KAAKuiE,sBAAsBnmE,QAAS4D,KAAKuiE,sBAAsBz9B,cAAe9kC,KAAKuiE,sBAAsB5tC,SAC/J30B,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACI,uBAAzBriE,KAAKsiE,kBACdD,QAAkBD,EAAWx9B,gBAAgBr8B,EAASvI,KAAKuiE,sBAAsB/9B,QAASxkC,KAAKuiE,sBAAsB5tC,SACrH30B,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACI,mBAAzBriE,KAAKsiE,kBACdD,QAAkBD,EAAWp+B,YAAYz7B,EAASvI,KAAKuiE,sBAAsBt+B,UAAWjkC,KAAKuiE,sBAAsBr+B,SAAUlkC,KAAKuiE,sBAAsB5tC,SACxJ30B,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACI,kBAAzBriE,KAAKsiE,kBACdD,EAAYD,EAAW35D,WAAWF,GAClCvI,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACG,kBAA1BriE,KAAKsiE,kBACZn/C,QAAQpX,IAAI,eAAYxQ,KAAKC,UAAUwE,KAAKuiE,wBAC5CF,QAAkBD,EAAWz8B,UAAUp9B,EAAQvI,KAAKuiE,sBAAsBnmE,QAAQ4D,KAAKuiE,sBAAsB38B,OAAO5lC,KAAKuiE,sBAAsB18B,QAC/I7lC,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACG,yBAA1BriE,KAAKsiE,mBACZn/C,QAAQpX,IAAI,eAAYxQ,KAAKC,UAAUwE,KAAKuiE,wBAC5CF,QAAkBD,EAAWt8B,iBAAiBv9B,EAAQvI,KAAKuiE,sBAAsBx8B,OAAO/lC,KAAKuiE,sBAAsB18B,QACnH7lC,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IAIlC,CAEA,GAAe,mBAAX95D,EAA8B,CAChC,MAAM65D,EAAa,IAAIj9D,EAAAA,eAAe3H,OAAO4K,UAC7C,IAAIs6D,EAAgB,iBAyCpB,YAvCiC,uBAA7B1iE,KAAK2iE,sBACPD,QAAsBN,EAAWh5D,YAAYb,EAASvI,KAAK4iE,0BAA0B,YACrF5iE,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACQ,gBAA7B1iE,KAAK2iE,sBACdD,QAAsBN,EAAWluD,KAAK3L,EAASvI,KAAK4iE,2BACpD5iE,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACQ,oBAA7B1iE,KAAK2iE,sBACdD,QAAsBN,EAAW79B,SAASh8B,EAASvI,KAAK4iE,0BAA0Bp+B,QAASxkC,KAAK4iE,0BAA0BjuC,SAC1H30B,KAAKwiE,YAAYE,GAAe16D,MAAKy6D,IACnCziE,KAAKu2D,QAAUh7D,KAAKC,UAAUinE,EAAQ,IACrCtuD,OAAMvK,IACP5J,KAAKu2D,QAAU3sD,CAAI,KAEiB,qBAA7B5J,KAAK2iE,sBACdD,QAAsBN,EAAW39B,UAAUl8B,EAASvI,KAAK4iE,0BAA0Bj+B,SAAU3kC,KAAK4iE,0BAA0BjuC,SAC5H30B,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACQ,2BAA7B1iE,KAAK2iE,sBACdD,QAAsBN,EAAWv9B,gBAAgBt8B,EAASvI,KAAK4iE,0BAA0BxmE,QAAS4D,KAAK4iE,0BAA0B99B,cAAe9kC,KAAK4iE,0BAA0BjuC,SAC/K30B,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACQ,2BAA7B1iE,KAAK2iE,sBACdD,QAAsBN,EAAWx9B,gBAAgBr8B,EAASvI,KAAK4iE,0BAA0Bp+B,QAASxkC,KAAK4iE,0BAA0BjuC,SACjI30B,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACQ,uBAA7B1iE,KAAK2iE,sBACdD,QAAsBN,EAAWp+B,YAAYz7B,EAASvI,KAAK4iE,0BAA0B3+B,UAAWjkC,KAAK4iE,0BAA0B1+B,SAAUlkC,KAAK4iE,0BAA0BjuC,SAExK30B,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACQ,sBAA7B1iE,KAAK2iE,sBACdD,EAAgBN,EAAW35D,WAAWF,GACtCvI,KAAKu2D,QAAUh7D,KAAKC,UAAUknE,IACO,sBAA9B1iE,KAAK2iE,sBACZx/C,QAAQpX,IAAI,mBAAgBxQ,KAAKC,UAAUwE,KAAK4iE,4BAChDP,QAAkBD,EAAWz8B,UAAUp9B,EAAQvI,KAAK4iE,0BAA0BxmE,QAAQ4D,KAAK4iE,0BAA0Bh9B,OAAO5lC,KAAK4iE,0BAA0B/8B,QAC3J7lC,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IACO,6BAA9BriE,KAAK2iE,uBACZx/C,QAAQpX,IAAI,mBAAgBxQ,KAAKC,UAAUwE,KAAK4iE,4BAChDP,QAAkBD,EAAWt8B,iBAAiBv9B,EAAQvI,KAAK4iE,0BAA0B78B,OAAO/lC,KAAK4iE,0BAA0B/8B,QAC3H7lC,KAAKu2D,QAAUh7D,KAAKC,UAAU6mE,IAIlC,CAEAl/C,QAAQpX,IAAI,qCAAkCxQ,KAAKC,UAAUumE,MAC7D,IAAI1mE,QAAemC,OAAO4K,SAASqB,QAAQs4D,EAAUx5D,GACrD4a,QAAQpX,IAAI,qCAAkCxQ,KAAKC,UAAUH,MAE7D8nB,QAAQpX,IAAI,wBAAyBiC,KAAKC,OAExCjO,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,GAEhC8nB,QAAQpX,IAAI,0BAA2B/L,KAAKu2D,QAC9C,CAAE,MAAO3sD,GACPuZ,QAAQvZ,MAAM,qBAAsBA,EAAM2H,SAEtC3H,EAAM4J,OAAS5T,EAAAA,wBAAwBC,mBACzCG,KAAKu2D,QAAU3sD,EAAM2H,QAErBvR,KAAKu2D,QAAU,mBAAqB3sD,EAAM2H,OAE9C,CACF,MACEymD,MAAM,gCAEV,EAEAwK,WAAAA,CAAYK,GAEV,IADA,IAAI7jC,EAAQ,GACH9zB,EAAI,EAAGA,EAAI23D,EAAOxmE,OAAQ6O,GAAK,EACtC8zB,EAAM1iC,KAAKooB,SAASm+C,EAAOzd,OAAOl6C,EAAG,GAAI,KAE3C,MAAMy8C,EAAS,IAAIjyB,WAAWsJ,GACxB8jC,EAAO,IAAIC,KAAK,CAACpb,IACvB,OAAO,IAAIngD,SAAQ,CAACD,EAASE,KAC3B,MAAMu7D,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAUr7D,GACxB,IAAIs7D,EAAat7D,EAAEhH,OAAOxF,OAAO6B,MAAM,KAAK,GAC5CqK,EAAQ47D,EACV,EACAH,EAAOnX,QAAU,SAAUhkD,GACzBJ,EAAOI,EACT,EACAm7D,EAAOI,cAAcN,EAAK,GAE9B,EACAjN,iBAAAA,GACE,IAAIwN,EAAW,CACb,YAAe,EACf,MAAS,mEACT,SAAY,mEACZ,UAAa,gBACb,SAAY,CACV,IAAO,mBACP,OAAU,2BACV,KAAQ,mBACR,KAAQ,oDAEV,SAAY,CAAC,CACX,KAAQ,kBACR,mBAAsB,CAAC,CAAC,UAAa,QAAS,OAAU,CAAC,eACzD,mBAAsB,GACtB,sBAAyB,CAAC,CACxB,QAAW,YACX,OAAU,oBACV,OAAU,CACR,KAAQ,CACN,SAAW,EACX,aAAe,EACf,SAAW,EACX,QAAW,YACX,MAAS,QACR,eAAkB,2BAA4B,OAAU,QAAS,aAAgB,SAI1F,SAAY,QAEVl5B,EAAO5uC,KAAKC,UAAU6nE,GAC1B,MAAMC,GAAY,IAAI54B,aAAcC,OAAOR,GAC3C,IAAIo5B,EAAS,GACbD,EAAUxmE,SAAQy3C,IAChBgvB,GAAUt9C,OAAO4P,aAAa0e,EAAK,IAGrC,IAAIivB,EAAW5tC,KAAK2tC,GACpBpgD,QAAQpX,IAAI,aAAcy3D,GAC1BA,EAAWA,EAAS3uD,QAAQ,MAAO,KACnCsO,QAAQpX,IAAI,aAAcy3D,GAC1BA,EAAWA,EAAS3uD,QAAQ,MAAO,KACnCsO,QAAQpX,IAAI,aAAcy3D,GAC1BA,EAAWA,EAAS3uD,QAAQ,MAAO,IACnCsO,QAAQpX,IAAI,aAAcy3D,GAE1B,IAAIC,GAAU5sC,EAAAA,EAAAA,mBAAiBJ,EAAAA,EAAAA,sBAAqB+sC,IACpDrgD,QAAQpX,IAAI,aAAc03D,GAC1BzjE,KAAKsyD,QAAUmR,EACfzjE,KAAKkyD,WAAY,CACnB,EAGA,gBAAMkO,GAGJ,IAYIsD,EAAWC,EAAWC,EAAQC,EAAQC,EAAUC,EAAQC,EAAWC,EAASC,EAZ5EC,EAAmB,GACnBC,EAAiB,GAEjBC,EAAe,CACjB,0CACA,0CACA,eACA,wCACA,wCACA,2CACA,0CAE0FC,GAAa,EAErGC,EAAY,CACd,eAGEC,EAAY,CACd,cACA,mBAGF,MAAMznE,EAASpC,OAAO+lC,QAAQ1gC,KAAK+wD,iBAC9B7yD,QAAQf,GAAUA,EAAM,GAAG6zD,UAC3BlzC,KAAK3gB,GAAUA,EAAM,KAC1BgmB,QAAQpX,IAAI,gBAAgBhP,EAAO4J,YACnC5J,EAAOD,SAAQ,SAAUyL,GAGvB,OAFA4a,QAAQpX,IAAI,gCAAgCxD,KAExC87D,EAAallE,SAASoJ,IACxB47D,EAAiB7nE,KAAKiM,QACtBo7D,GAAY,IAGQ,iBAAXp7D,GAAuBA,EAAQS,WAAW,QACnDm7D,EAAiB7nE,KAAKiM,QACtBw7D,GAAS,IAGW,iBAAXx7D,IAAwBA,EAAQS,WAAW,UAAYT,EAAQS,WAAW,cACnFm7D,EAAiB7nE,KAAKiM,QACtBu7D,GAAW,IAGS,iBAAXv7D,GAAuBA,EAAQS,WAAW,QACnDm7D,EAAiB7nE,KAAKiM,QACtBo7D,GAAY,IAGQ,iBAAXp7D,GAAuBA,EAAQS,WAAW,WACnDm7D,EAAiB7nE,KAAKiM,QACtBy7D,GAAY,IAGQ,iBAAXz7D,GAAuBA,EAAQS,WAAW,SACnDm7D,EAAiB7nE,KAAKiM,QACtB07D,GAAU,IAIU,iBAAX17D,GAAuBA,EAAQS,WAAW,aACnDm7D,EAAiB7nE,KAAKiM,QACtB27D,GAAc,IAIZK,EAAUplE,SAASoJ,IACrB4a,QAAQpX,IAAI,+BAA+BxD,KAC3C47D,EAAiB7nE,KAAKiM,QACtBq7D,GAAS,IAIPY,EAAUrlE,SAASoJ,IACrB4a,QAAQpX,IAAI,+BAA+BxD,KAC3C47D,EAAiB7nE,KAAKiM,QACtBs7D,GAAS,KAGK,QAAZt7D,IACF+7D,GAAa,GAEfZ,GAAY,OACZS,EAAiB7nE,KAAK,UAAUiM,KAClC,IAGAg1D,GAAazgE,SAAQ,SAAUyL,GAE7B,GADA4a,QAAQpX,IAAI,mCAAmCxD,IAC3C87D,EAAallE,SAASoJ,GAI1B,MAAsB,iBAAXA,GAAuBA,EAAQS,WAAW,QACnDm7D,EAAiB7nE,KAAKiM,QACtBo7D,GAAY,SAGVY,EAAUplE,SAASoJ,IAKnBi8D,EAAUrlE,SAASoJ,IAInBA,EAAQS,WAAW,OARrBo7D,EAAe9nE,KAAKiM,GAatB67D,EAAe9nE,KAAK,UAAUiM,MAtB5B67D,EAAe9nE,KAAKiM,EAuBxB,IAEA4a,QAAQpX,IAAI,yBAAyBxQ,KAAKC,UAAU2oE,MACpD,IAoNIM,EApNAC,EAAc,CAAC,EACnB,GAAIP,GAAoBA,EAAiB9nE,OAAS,EAAG,CACnD,IAAIsoE,EAAc,CAAC,EAsFnB,GApFIjB,IAGAiB,EAAY/8C,OADV08C,EACmB,CACnBvnE,OAAQonE,EAAiBjmE,QAAQrC,GAC7BA,EAAKmN,WAAW,YAEpB+U,aAAcomD,EAAiBjmE,QAAQrC,GACnCA,EAAKmN,WAAW,YAClB,GACFwb,OAAQ,CACN,IAAM,6BAIW,CACnBznB,OAAQonE,EAAiBjmE,QAAQrC,GAC7BA,EAAKmN,WAAW,YAEpB+U,aAAcomD,EAAiBjmE,QAAQrC,GACnCA,EAAKmN,WAAW,YAClB,KAKJ26D,IACFgB,EAAY95B,OAAS,CACnB9tC,OAAQonE,EAAiBjmE,QACpBrC,GACGA,EAAKmN,WAAW,WAChBnN,EAAKmN,WAAW,UAChBnN,EAAKmN,WAAW,QAChBnN,EAAKmN,WAAW,SAChBnN,EAAKmN,WAAW,aAExB+U,aAAcomD,EAAiBjmE,QAC1BrC,GACGA,EAAKmN,WAAW,WAChBnN,EAAKmN,WAAW,UAChBnN,EAAKmN,WAAW,QAChBnN,EAAKmN,WAAW,SAChBnN,EAAKmN,WAAW,aAEtB,KAIFg7D,IACFW,EAAYC,OAAS,CACnB7nE,OAAQonE,EAAiBjmE,QACpBrC,GACGA,EAAKmN,WAAW,YAExB+U,aAAcomD,EAAiBjmE,QAC1BrC,GACGA,EAAKmN,WAAW,YACtB,KAGFi7D,IACFU,EAAYE,KAAO,CACjB9nE,OAAQonE,EAAiBjmE,QACpBrC,GACGA,EAAKmN,WAAW,UAExB+U,aAAcomD,EAAiBjmE,QAC1BrC,GACGA,EAAKmN,WAAW,UACtB,KAGFk7D,IACFS,EAAYG,SAAW,CACrB/nE,OAAQonE,EAAiBjmE,QACpBrC,GACGA,EAAKmN,WAAW,cAExB+U,aAAcomD,EAAiBjmE,QAC1BrC,GACGA,EAAKmN,WAAW,cACtB,KAGF+6D,EAAQ,CAGV,IAAIxpC,EAAY,CACdp+B,SAAU,CACRL,KAAM,aAGNkE,KAAK4wD,gBACPr2B,EAAY,CACVp+B,SAAU,CACRL,KAAM,YAERY,UAAW,CACTZ,KAAM,YACNJ,QAASsE,KAAK4wD,iBAMpB+T,EAAYI,IAAM,CAChBhoE,OAAQonE,EAAiBjmE,QAAOrC,GAAQA,EAAKmN,WAAW,SACxD+U,aAAcomD,EAAiBjmE,QAAOrC,GAAQA,EAAKmN,WAAW,SAAQ,GACtEgI,OAAQupB,EAEZ,CAoBA,GAlBIqpC,IACFe,EAAYniB,IAAM,CAChBzlD,OAAQonE,EAAiBjmE,QAAQrC,GAASA,EAAKmN,WAAW,SAC1D+U,aAAcomD,EAAiBjmE,QAAQrC,GACnCA,EAAKmN,WAAW,SAClB,GACFwb,OAAQ,CACN,cAAe,mDAIjBs/C,IACFa,EAAYr8B,MAAQ,CAClBvrC,OAAQonE,EAAiBjmE,QAAOrC,GAAQA,EAAKmN,WAAW,UAAYnN,EAAKmN,WAAW,cACpF+U,aAAcomD,EAAiBjmE,QAAOrC,GAAQA,EAAKmN,WAAW,UAAYnN,EAAKmN,WAAW,cAAa,KAIvG66D,EAAQ,CACV,IAAIW,EAAYL,EAAiBjmE,QAAOrC,GAAQA,EAAKmN,WAAW,QAAUnN,EAAKmN,WAAW,aAC1F27D,EAAYK,IAAM,CAChBjoE,OAAQynE,EACRzmD,aAAcymD,EAAU,GAE5B,CACArhD,QAAQpX,IAAI,qBAAqBxQ,KAAKC,UAAUmpE,MAChDD,EAAY,cAAgBC,EAC5BxhD,QAAQpX,IAAIxQ,KAAKC,UAAUkpE,GAC7B,CAEA,GAAIN,GAAkBA,EAAe/nE,OAAS,EAAG,CAC/C,MAAM4oE,EAAU,CAAC,EAEXC,EAAed,EAAelmE,QAAQrC,GAASA,EAAKmN,WAAW,YACjEk8D,EAAa7oE,OAAS,IACxB4oE,EAAQ,UAAY,CAClBloE,OAAQmoE,EACRnnD,aAAcmnD,EAAa,KAI/B,MAAMb,EAAeD,EAAelmE,QAAQrC,GAASA,EAAKmN,WAAW,YACjEq7D,EAAahoE,OAAS,IACxB4oE,EAAQ,UAAY,CAClBloE,OAAQsnE,EACRtmD,aAAcsmD,EAAa,KAI/B,MAAMc,EAAYf,EAAelmE,QAAQrC,GAASA,EAAKmN,WAAW,SAClE,GAAIm8D,EAAU9oE,OAAS,EAAG,CAExB,IAAIk+B,EAAY,CACdp+B,SAAU,CACRL,KAAM,aAGNkE,KAAK4wD,gBACPr2B,EAAY,CACVp+B,SAAU,CACRL,KAAM,YAERY,UAAW,CACTZ,KAAM,YACNJ,QAASsE,KAAK4wD,iBAMpBqU,EAAQ,OAAS,CACfloE,OAAQooE,EACRpnD,aAAconD,EAAU,GACxBn0D,OAAQupB,EAEZ,CAEA,MAAMiqC,EAAYJ,EAAelmE,QAAQrC,GAASA,EAAKmN,WAAW,SAC9Dw7D,EAAUnoE,OAAS,IACrB4oE,EAAQ,OAAS,CACfloE,OAAQynE,EACRzmD,aAAcymD,EAAU,KAI5BE,EAAY,sBAAwBO,CACtC,CAEA,GAAgC,IAA5Bd,EAAiB9nE,QAA0C,IAA1B+nE,EAAe/nE,OAGlD,YADA27D,MAAM,gDAGR70C,QAAQpX,IAAI,sBACZoX,QAAQpX,IAAI24D,GAGZ,IAAIU,EAAcplE,KAAKqlE,+BACnB7nE,OAAO4K,oBAAoB43D,EAAAA,sBAG3ByE,EADEW,GAAeA,EAAY/oE,OAAS,EACtBmB,OAAO4K,SAASk9D,iBAAiBZ,EAAanpE,KAAKmO,MAAMnO,KAAKC,UAAU4pE,KAExE5nE,OAAO4K,SAASu3D,UAAU+E,IAGxC1kE,KAAK4uD,cACP8V,EAAY/nD,cAAgB,CAC1BqT,SAAS,EACTzR,kBAAkB,EAClB0R,aAAc,QAGhBy0C,EAAY/nD,cAAgB,CAC1BD,SAAU+gD,IAIZgH,EADEW,GAAeA,EAAY/oE,OAAS,EACtBmB,OAAO4K,SAASgW,eAAesmD,EAAanpE,KAAKmO,MAAMnO,KAAKC,UAAU4pE,KAEtE5nE,OAAO4K,SAASkK,QAAQoyD,UAItCD,EACDz8D,MAAM3M,IAUL,GARA2E,KAAK+xD,cAAgB,YACjB/xD,KAAKmgE,SACPngE,KAAKkyD,WAAY,GAEf72D,IACF2E,KAAKu2D,QAAUh7D,KAAKC,UAAUH,IAG5BmC,OAAO4K,SAASS,SAAWrL,OAAO4K,SAASS,QAAQC,WAAY,CACjE,IAAIi8D,EAAMvnE,OAAO4K,SAASS,QAAQC,WAAW,OAC7Cqa,QAAQpX,IAAI,UAAWg5D,GACnBA,GACF/kE,KAAK2hE,iBAET,KAEDxtD,OAAOvK,IACY,KAAdA,EAAM4J,KACRtS,YAAW,KACTiiB,QAAQvZ,MAAMA,EAAM2H,QAAQ,GAC3B,IACM3H,EAAM2H,SACf4R,QAAQvZ,MAAMA,EAAM2H,SAEtB4R,QAAQvZ,MAAM,SAAUA,EAAM,GAEtC,EAEAy7D,4BAAAA,GACE,IAAIE,EAAa,GAqMjB,OApMAvlE,KAAKywD,eAAe3zD,SAAQoU,IAC1B,OAAQA,GACN,IAAK,+BACHq0D,EAAWjpE,KAAK,CACd4U,OAAQ,0BACR3I,QAAS,WACTyI,OAAQ,CACNsvD,kBAAmB,CAAC,4BACpB/3D,QAAS,OACTg4D,UAAW,OACXC,eAAgB,CAAC1kE,KAAM,OAAQ2kE,OAAQ,OAAQC,SAAU,IACzDh5C,QAAS,CAAC,0BAGd,MACF,IAAK,qBACH69C,EAAWjpE,KACP,CACE4U,OAAQ,gBACR3I,QAAS,WACTyI,OAAQ,CACN,wFAGR,MACF,IAAK,kCACHu0D,EAAWjpE,KACP,CACE,QAAW,0CACX,OAAU,qBACV,OAAU,CACR,QAAW,kBAInB,MACF,IAAK,+BACL,IAAK,uCAAwC,CAC3C,IAAIkpE,EAAU,CACZ,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEbnwB,EAAa,IAAI3f,WAAW8vC,GAC5BC,EAAgB,kBACpBzlE,KAAKu6D,sBAAwB,CAC3BhpD,QAAS8jC,GAGPnkC,EAAOlI,WAAW,6BACpBy8D,EAAgB,2BAElBF,EAAWjpE,KACP,CACE4U,OAAQu0D,EACRl9D,QAAS,cACTyI,OAAQ,CACNO,QAAS8jC,KAIjB,KACF,CACA,IAAK,uBACHkwB,EAAWjpE,KACP,CACE4U,OAAQ,kBACR3I,QAAS,cACTyI,OAAQ,CACNO,QAAS,oBAIjB,MACF,IAAK,mCACHg0D,EAAWjpE,KACP,CACE,QAAW,gBACX,OAAU,oBACV,OAAU,CACRF,SAAS,EACTspE,aAAa,EACbn9D,SAAS,EACTgJ,QAAS,cACT7G,MAAO,UAIf,MACF,IAAK,kCACH66D,EAAWjpE,KACP,CACE,QAAW,qBACX,OAAU,uBACV,OAAU,CACRiV,QAAS,iBAKjB,MACF,IAAK,0BACHg0D,EAAWjpE,KACP,CACEiM,QAAS,WACT2I,OAAQ,qBACRF,OAAQ,CACNO,QAAS,gBAIjB,MACF,IAAK,qBACHg0D,EAAWjpE,KACP,CACE4U,OAAQ,uBAEd,MACF,IAAK,mBACHq0D,EAAWjpE,KACP,CACEiM,QAAS,eACT2I,OAAQ,mBACRF,OAAQ,CACNO,QAAS,gBAIjB,MACF,IAAK,qBACHg0D,EAAWjpE,KACP,CACEiM,QAAS,eACT2I,OAAQ,qBACRF,OAAQ,CACNO,QAAS,gBAIjB,MAGF,IAAK,uBAAwB,CAC3B,MAAMhI,EAAW,CACf,OAAU,CACR,QAAW,mBACX,KAAQ,WACR,QAAW,KAEb,QAAW,CACT,SAAY,0BACZ,QAAW,sBAEb,YAAe,MACf,MAAS,CACP,eAAkB,CAChB,CACE,KAAQ,OACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,SAGZ,IAAO,CACL,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,WACR,KAAQ,WAKhBg8D,EAAWjpE,KAAK,CACdiM,QAAS,mBACT2I,OAAQ,uBACRF,OAAQ,CACN20D,eAAgB,GAChBr8D,UAAWC,IAGjB,CACE,MACF,QAEE,MACJ,IAEFvJ,KAAK++D,mBAAqBwG,EACnBA,CAET,EAEApT,UAAAA,GACEnyD,KAAKkyD,WAAY,CACnB,EAEAiO,IAAAA,GACE,MAAMyF,EAAgBlkE,UAAUC,UAChCwhB,QAAQpX,IAAI,4BAA6B65D,GAEzC,MAAMC,EAAS,CACb,UACA,SACA,YACA,gBACA,OACA,QAEF,IAAIC,GAAO,EACX,IAAK,IAAIj7D,EAAI,EAAGA,EAAIg7D,EAAOxpE,OAAQwO,IACjC,GAAI+6D,EAAc35C,QAAQ45C,EAAOh7D,IAAM,EAAG,CACxCi7D,GAAO,EACP,KACF,CAEF,OAAOA,CACT,EACAC,gBAAAA,GACE,MAAMH,EAAgBlkE,UAAUC,UAC1BkkE,EAAS,CAAC,SAAU,UAC1B,IAAIC,GAAO,EACX,IAAK,IAAIj7D,EAAI,EAAGA,EAAIg7D,EAAOxpE,OAAQwO,IACjC,GAAI+6D,EAAc35C,QAAQ45C,EAAOh7D,IAAM,EAAG,CACxCi7D,GAAO,EACP,KACF,CAEF,OAAOA,CACT,EAGA,qBAAMpS,GAEJ,IACE,IAAIx3D,EAAO,CACTgV,OAAQ,qBACRF,OAAQ,CACNO,QAAS,eACTy0D,OAAQ,KAGZhmE,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,GACtC,IAAIkM,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAE5C,MAAM89D,EAAU,IAAIx7B,YACdy7B,EAAcD,EAAQv7B,OAAO,gBAEnC,IAAIp5B,QAAgBnJ,EAASgB,YACzB+8D,EACAnmE,KAAK2+D,eAETx7C,QAAQpX,IAAI,6BAA8BxQ,KAAKC,UAAU+V,UAAiB40D,GAC1E,MAAMC,EAAUC,IAAAA,KAAUnmC,SAASC,QAC/B,IAAIuK,aAAcC,OAAO,gBACzBp5B,EAAQ0X,UACR,IAAIq9C,EAAAA,UAAU/0D,EAAQrI,WAAWq9D,WAErCpjD,QAAQpX,IAAIq6D,GAGVpmE,KAAKu2D,QAAU6P,CAInB,CAAE,MAAOv+D,GACPsb,QAAQpX,IAAI,4BAA6BxQ,KAAKC,UAAUqM,IACxD7H,KAAKu2D,QAAU1uD,EAAE0J,OACnB,CAEF,EAEA,uBAAMqjD,GAEJ,IAAI14D,EAAO,CACTE,SAAS,EACTspE,aAAa,EACbn9D,SAAS,EACTgJ,QAAS,cACT7G,MAAO,QAGLtC,EAAW,IAAIo+D,EAAAA,EAAiBhpE,OAAO4K,UACvCmJ,QAAgBnJ,EAASgB,YAAYlN,EAAM8D,KAAK2+D,eACpD3+D,KAAKq2D,gBAAkB96D,KAAKC,UAAUU,GAEpC8D,KAAKu2D,QADe,iBAAXhlD,EACMA,EAEAhW,KAAKC,UAAU+V,EAElC,EAEA,2BAAMsjD,GACJ,IAAIzsD,EAAW,IAAIo+D,EAAAA,EAAiBhpE,OAAO4K,UAC3C,MAAMq+D,EAAS,IAAIC,EAAAA,IAAY,CAACjqE,QAASkqE,EAAAA,IAAQxgE,UAC3CmiC,EAAQ,IAAIs+B,EAAAA,IAAMH,GAkBxB,IAaE,MAAMI,EAAY,qEACZ/8D,QAAoBw+B,EAAMx+B,YAAYuwD,MAAMyM,OAAO,CACvDC,OAAQ3+D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAChDF,KAAM,CACJ89C,SAAU,+BACVH,cAAe,GACfE,kBAAmB,CAAC8sB,EAAW,cAGnC1jD,QAAQpX,IAAI,qBAEZ/L,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIyH,QAAgBnJ,EAAS2gB,gBAAgBjf,EAAa9J,KAAK2+D,eAE7D3+D,KAAKu2D,QADe,iBAAXhlD,EACMA,EAEAhW,KAAKC,UAAU+V,EAElC,CAAC,MAAO1J,GAEN7H,KAAKu2D,QAAUh7D,KAAKC,UAAUqM,EAChC,CAEF,EAEA,0BAAM0tD,GACJ,IAAIntD,EAAW,IAAIo+D,EAAAA,EAAiBhpE,OAAO4K,UAC3C,MAAMq+D,EAAS,IAAIC,EAAAA,IAAY,CAACjqE,QAASkqE,EAAAA,IAAQxgE,UAC3CmiC,EAAQ,IAAIs+B,EAAAA,IAAMH,GAmBlB38D,QAAoBw+B,EAAMx+B,YAAYuwD,MAAMyM,OAAO,CACvDC,OAAQ3+D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAChDF,KAAM,CAEJ89C,SAAU,oFAEVH,cAAe,CAAC,6BAA8B,mFAAoF,4FAClIE,kBAAmB,CAAC,QAAS,SAIjC/5C,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIyH,QAAgBnJ,EAAS2gB,gBAAgBjf,EAAa9J,KAAK2+D,eAE7D3+D,KAAKu2D,QADe,iBAAXhlD,EACMA,EAEAhW,KAAKC,UAAU+V,EAElC,EAEA,mCAAMikD,GACJ,IAAIptD,EAAW,IAAIo+D,EAAAA,EAAiBhpE,OAAO4K,UAC3C,MAAMq+D,EAAS,IAAIC,EAAAA,IAAY,CAACjqE,QAASkqE,EAAAA,IAAQxgE,UAC3CmiC,EAAQ,IAAIs+B,EAAAA,IAAMH,GAmBlB38D,QAAoBw+B,EAAMx+B,YAAYuwD,MAAMyM,OAAO,CACvDC,OAAQ3+D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAChDF,KAAM,CAEJ89C,SAAU,oFAEVH,cAAe,CAAC,6BAA8B,mFAAoF,4FAClIE,kBAAmB,CAAC,QAAS,SAIjC/5C,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIyH,QAAgBnJ,EAAS+gB,yBAAyBrf,EAAa9J,KAAK2+D,eAEtE3+D,KAAKu2D,QADe,iBAAXhlD,EACMA,EAEAhW,KAAKC,UAAU+V,EAElC,EAEA,oCAAMujD,GACJ,IAAI1sD,EAAW,IAAIo+D,EAAAA,EAAiBhpE,OAAO4K,UAC3C,MAAMq+D,EAAS,IAAIC,EAAAA,IAAY,CAACjqE,QAASkqE,EAAAA,IAAQxgE,UAC3CmiC,EAAQ,IAAIs+B,EAAAA,IAAMH,GAalBI,EAAY,qEACZ/8D,QAAoBw+B,EAAMx+B,YAAYuwD,MAAMyM,OAAO,CACvDC,OAAQ3+D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAChDF,KAAM,CACJ89C,SAAU,+BACVH,cAAe,GACfE,kBAAmB,CAAC8sB,EAAW,cAUnC7mE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIyH,QAAgBnJ,EAAS+gB,yBAAyBrf,EAAa9J,KAAK2+D,eAEtE3+D,KAAKu2D,QADe,iBAAXhlD,EACMA,EAEAhW,KAAKC,UAAU+V,EAElC,EAEA,kCAAMqiD,GACJ,IAAIxrD,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAExC49D,EAAS,IAAIM,EAAAA,UACbl+D,EAASK,WAAW,2CAA2CrM,SAEnE,MAAMu9B,EAAa,IAAIqtC,EAAAA,WAAWhnE,KAAKinE,kBACjC,UAACC,SAAmBvtC,EAAWwtC,qBAC/BC,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUtB,EACVuB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIrB,EAAAA,UAAUl+D,EAASK,aAAarM,SAChDwrE,SAAU,IAAItB,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CyrE,SAAU,WAGbC,qBAEH,IAAIh+D,EAAc,IAAIi+D,EAAAA,qBAAqBX,GAC3CpnE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIzO,QAAe+M,EAAS2gB,gBACxBjf,EACA9J,KAAK2+D,eAETx7C,QAAQpX,IAAI,6BAA8BxQ,KAAKC,UAAUH,IAEvD2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEA,yCAAM24D,GACJ,IAAI5rD,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAExC49D,EAAS,IAAIM,EAAAA,UAAUl+D,EAASK,aAAarM,SACjD,MAAMu9B,EAAa,IAAIqtC,EAAAA,WAAWhnE,KAAKinE,kBACjC,UAACC,SAAmBvtC,EAAWwtC,qBAC/BC,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUtB,EACVuB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIrB,EAAAA,UAAUl+D,EAASK,aAAarM,SAChDwrE,SAAU,IAAItB,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CyrE,SAAU,WAGbC,qBAEH,IAAIh+D,EAAc,IAAIi+D,EAAAA,qBAAqBX,GAC3CpnE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIzO,QAAe+M,EAASyjB,uBACxB/hB,EACA9J,KAAK2+D,eAETx7C,QAAQpX,IAAI,6BAA8BxQ,KAAKC,UAAUH,IAEvD2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEA,sCAAMy4D,GACJ,IAAI1rD,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAC5C,MAAMuxB,EAAa,IAAIqtC,EAAAA,WAAWhnE,KAAKinE,kBACjC,UAACC,SAAmBvtC,EAAWwtC,qBACrC,IAAInB,EAAS,IAAIM,EAAAA,UAAUl+D,EAASK,aAAarM,SACjD,MAAMgrE,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUtB,EACVuB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIrB,EAAAA,UAAUl+D,EAASK,aAAarM,SAChDwrE,SAAU,IAAItB,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CyrE,SAAU,WAGbC,qBAEH,IAAIh+D,EAAc,IAAIi+D,EAAAA,qBAAqBX,GAC3CpnE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIzO,QAAe+M,EAAS4iC,oBACxB,CAAClhC,GACD9J,KAAK2+D,eAETx7C,QAAQpX,IAAI,6BAA8BxQ,KAAKC,UAAUH,IAEvD2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEA,yBAAMs4D,GACJ,MAAMh6B,EAAa,IAAIqtC,EAAAA,WAAWhnE,KAAKinE,kBACjC,UAACC,SAAmBvtC,EAAWwtC,qBACrC,IAAI/+D,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAC5C,MAAM0B,EAAc,IAAIk+D,EAAAA,YAAY,CAClCC,SAAU,IAAI3B,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CmrE,gBAAiBL,IAChBlnB,IACCynB,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIrB,EAAAA,UAAUl+D,EAASK,aAAarM,SAChDwrE,SAAU,IAAItB,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CyrE,SAAU,OAIhB7nE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GACzC,IAAIzO,QAAe+M,EAAS2gB,gBACxBjf,EACA9J,KAAK2+D,eAETx7C,QAAQpX,IAAI,6BAA8BxQ,KAAKC,UAAUH,IAEvD2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEA,6BAAMw4D,GACJ,MAAMl6B,EAAa,IAAIqtC,EAAAA,WAAWhnE,KAAKinE,kBACjC,UAACC,SAAmBvtC,EAAWwtC,qBAErC,IAAI/+D,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAC5C,MAAM0B,EAAc,IAAIk+D,EAAAA,YAAY,CAClCC,SAAU,IAAI3B,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CmrE,gBAAiBL,IAChBlnB,IACCynB,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIrB,EAAAA,UAAUl+D,EAASK,aAAarM,SAChDwrE,SAAU,IAAItB,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CyrE,SAAU,SAGhB7nE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIzO,QAAe+M,EAAS4iC,oBACxB,CAAClhC,GACD9J,KAAK2+D,eAGP3+D,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEA4rE,aAAAA,GACE,IAAI3iD,EAAM,gDAQV,MAP2B,4CAAvBtkB,KAAK2+D,cACPr6C,EAAM,iDAC0B,4CAAvBtkB,KAAK2+D,cACdr6C,EAAM,uDAC0B,iBAAvBtkB,KAAK2+D,gBACdr6C,EAAM,2DAEDA,CACT,EAEA,gCAAMyvC,GAEJ,MAAMp6B,EAAa,IAAIqtC,EAAAA,WAAWhnE,KAAKinE,kBACjC,UAACC,SAAmBvtC,EAAWwtC,qBAErC,IAAI/+D,EAAW,IAAI69D,EAAAA,EAAkBzoE,OAAO4K,UAC5C,MAAM0B,EAAc,IAAIk+D,EAAAA,YAAY,CAClCC,SAAU,IAAI3B,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CmrE,gBAAiBL,IAChBlnB,IACCynB,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIrB,EAAAA,UAAUl+D,EAASK,aAAarM,SAChDwrE,SAAU,IAAItB,EAAAA,UAAUl+D,EAASK,aAAarM,SAC9CyrE,SAAU,SAGhB7nE,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkB3E,GAEzC,IAAIzO,QAAe+M,EAASyjB,uBACxB/hB,EACA9J,KAAK2+D,eAGP3+D,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEA,0BAAM05D,GACJ,IAAI3sD,EAAW,IAAIlD,EAAAA,kBAAkB1H,OAAO4K,UACxCmJ,QAAgBnJ,EAASo+C,cAAcxmD,KAAK2+D,cAAev2D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAAS,eAChH,GAAsB,iBAAXmV,EACTvR,KAAKu2D,QAAUhlD,MACV,CACL,IAAI4pD,QAAgBn7D,KAAKkoE,2BAA2B9/D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAAS,cAAemV,EAAQ0X,UAAW1X,EAAQ42D,QAAQrtE,OACvJqoB,QAAQpX,IAAI,SAAUovD,GACtBn7D,KAAKu2D,QAAU,UAAY4E,EAAU5/D,KAAKC,UAAU+V,EACtD,CACF,EAEA,gCAAM22D,CAA2BE,EAAQlsE,EAAM+sB,EAAW+8C,GACxD,IACE7iD,QAAQpX,IAAI,qCAAsCq8D,GAClDjlD,QAAQpX,IAAI,mCAAoCxQ,KAAKC,UAAUU,IAC/DinB,QAAQpX,IAAI,wCAAyCkd,GACrD9F,QAAQpX,IAAI,qCAAsCi6D,GAGlD,MAAO1pC,OAAQ+rC,GAAalL,GAAWiL,GAEjCE,EAAkBhO,EAAO9tC,KAAKvD,EAAW,UAEzCs/C,EAAiB,IAAI7yC,WAAW4yC,GAEhCE,EAAoBlO,EAAO9tC,KAAKw5C,EAAQ,UAExCyC,EAAmB,IAAI/yC,WAAW8yC,GAGxC,aAAatL,GACTmL,EACAD,EACAlsE,EACAusE,EACAF,EAEN,CAAE,MAAOn0D,GAEP,OADA+O,QAAQvZ,MAAM,uBAAwBwK,IAC/B,CACT,CACF,EAEA,sBAAM4gD,GACJ,IAAI5sD,EAAW,IAAIlD,EAAAA,kBAAkB1H,OAAO4K,UAgBxCq+C,EAAU,CACZ,SAAY,YACZ,eAAkB,SAClB,SAAY,MACZ,IAAO,CAAC,IAAO,SAAU,OAAU,CAAC,CAAC,MAAS,QAAS,OAAU,UACjE,KAAQ,CAAC,CACP,KAAQ,2CACR,MAAS,CACP,OAAU,8CACV,OAAU,CAAC,CACT,QAAW,OACX,gBAAmB,wEAClB,CACD,QAAW,MACX,gBAAmB,yEAErB,SAAY,CAAC,MAAS,QAAS,OAAU,OACzC,qBAAwB,OAG5B,KAAQ,KACR,eAAkB,WAClB,YAAe,CACb,oBAAsB,EACtB,gBAAkB,EAClB,IAAO,CAAC,IAAO,SAAU,OAAU,CAAC,CAAC,MAAS,QAAS,OAAU,YAerEzmD,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkBg4C,GACzC,IAAIvc,QAAY9hC,EAAS6+C,UAAUjnD,KAAK2+D,cAAev2D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAASqqD,GAGtGzmD,KAAKu2D,QADW,iBAAPrsB,EACMA,EAKA3uC,KAAKC,UAAU0uC,EAElC,EAEAwd,eAAAA,CAAgBn2C,GACd,IAAIo2C,EAAS2S,EAAO9tC,KAAK,IACzB,IAEIm7B,EADqB,kBAAZp2C,EACA+oD,EAAO9tC,KAAKjb,EAAQsD,QAAQ,KAAM,IAAK,OAEvCylD,EAAO9tC,KAAKjb,EAEzB,CAAE,MAAO6C,GACP+O,QAAQpX,IAAI,0BAA0BqI,IACxC,CACA,OAAOuzC,CACT,EAGA,uBAAMsN,GACJ,IAAI7sD,EAAW,IAAIlD,EAAAA,kBAAkB1H,OAAO4K,UAExCq+C,EAAU,CACZ,UAAazmD,KAAK0nD,gBAAgB,8YAClC,cAAiB1nD,KAAK0nD,gBAAgB,wNACtC,QAAW,YACX,cAAiB,UAInB1nD,KAAKq2D,iBAAkB5nD,EAAAA,EAAAA,mBAAkBg4C,GACzC,IAAIvc,QAAY9hC,EAASi/C,WAAWrnD,KAAK2+D,cAAev2D,EAASK,WAAWzI,KAAK2+D,eAAeviE,QAASqqD,GAEvGzmD,KAAKu2D,QADW,iBAAPrsB,EACMA,EAIA3uC,KAAKC,UAAU0uC,EAElC,EAEAiqB,6BAAAA,CAA8BnjD,EAAQ80D,GACpC9lE,KAAKq2D,gBAAkB96D,KAAKC,UAAUwV,GACtChR,KAAKu6D,sBAAwBvpD,EAC7BhR,KAAKw6D,iBAAmBsL,CAC1B,EAEAzR,6BAAAA,CAA8BrjD,EAAQ80D,GACpC9lE,KAAKq2D,gBAAkB96D,KAAKC,UAAUwV,GACtChR,KAAKuiE,sBAAwBvxD,EAC7BhR,KAAKsiE,iBAAmBwD,EACxB3iD,QAAQpX,IAAI,QAASiF,GACrBmS,QAAQpX,IAAI,SAAU+5D,EACxB,EAEAvR,iCAAAA,CAAkCvjD,EAAQ80D,GACxC9lE,KAAKq2D,gBAAkB96D,KAAKC,UAAUwV,GACtChR,KAAK4iE,0BAA4B5xD,EACjChR,KAAK2iE,qBAAuBmD,EAC5B3iD,QAAQpX,IAAI,QAASiF,GACrBmS,QAAQpX,IAAI,SAAU+5D,EACxB,EACAnR,yBAAAA,CAA0Bt5D,GAEtB2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EACAo5D,8BAAAA,CAA+BzjD,GAE3BhR,KAAKq2D,gBADc,iBAAVrlD,EACcA,EAEAzV,KAAKC,UAAUwV,EAE1C,EAEA4kD,6BAAAA,CAA8Bv6D,GAE1B2E,KAAKu2D,QADc,iBAAVl7D,EACMA,EAEAE,KAAKC,UAAUH,EAElC,EAEAs6D,kCAAAA,CAAmC3kD,GAE/BhR,KAAKq2D,gBADc,iBAAVrlD,EACcA,EAEAzV,KAAKC,UAAUwV,EAE1C,EAEAi+C,kBAAAA,CAAmBF,GACjByO,GAAiBzO,EACb/uD,KAAKwuD,SACPhxD,OAAO4K,SAASsgE,UAAY,CAC1B5I,qBAAsB,CACpBzQ,eAAgBoO,GAChB1O,OAA0B,IAAlBA,EAAO1yD,OAAe,MAAQ0yD,GAExCvR,SAAUmgB,GACVoC,cAAe,CACb3P,MAAOwN,KAIf,EAEAtO,0BAAAA,CAA2BD,GACzBoO,GAA4C,aAAnBpO,EAAgCrvD,KAAK6vD,SAAWR,EAErErvD,KAAKwuD,OACPhxD,OAAO4K,SAASsgE,UAAY,CAC1B5I,qBAAsB,CACpBzQ,eAAgBoO,GAChB1O,OAAkC,IAA1ByO,GAAenhE,OAAe,MAAQmhE,IAEhDhgB,SAAUmgB,GACVoC,cAAe,CACb3P,MAAOwN,KAIPpgE,OAAO4K,SAASuU,cAClBnf,OAAO4K,SAASuU,cAAcD,SAAW+gD,GAEzCjgE,OAAO4K,SAASuU,cAAgB,CAC9BD,SAAU+gD,GAIlB,EAEA3N,4BAAAA,CAA6BD,GAC3B1sC,QAAQpX,IAAI,+BAAgC8jD,GAC5C4N,GAAyB5N,EAErB7vD,KAAKwuD,OACPhxD,OAAO4K,SAASsgE,UAAY,CAC1B5I,qBAAsB,CACpBzQ,eAAgBQ,EAChBd,OAAkC,IAA1ByO,GAAenhE,OAAe,MAAQmhE,IAEhDhgB,SAAUmgB,GACVoC,cAAe,CACb3P,MAAOwN,KAIPpgE,OAAO4K,SAASuU,cAClBnf,OAAO4K,SAASuU,cAAcD,SAAWmzC,EAEzCryD,OAAO4K,SAASuU,cAAgB,CAC9BD,SAAUmzC,EAIlB,EAEAI,oBAAAA,CAAqBzS,GACnBmgB,GAAmBngB,EACfx9C,KAAKwuD,SACPhxD,OAAO4K,SAASsgE,UAAY,CAC1B5I,qBAAsB,CACpBzQ,eAAgBoO,GAChB1O,OAAkC,IAA1ByO,GAAenhE,OAAe,MAAQmhE,IAEhDhgB,SAAUA,EACVuiB,cAAe,CACb3P,MAAOwN,KAIf,EACAlN,0BAAAA,GACEvtC,QAAQpX,IAAI,gCAAiC/L,KAAKywD,eACpD,EAEAkY,iBAAAA,CAAkBp3D,EAAS0X,EAAW2/C,GAIpC,GAHAzlD,QAAQpX,IAAI,iCAAkCwF,GAC9C4R,QAAQpX,IAAI,mCAAoCkd,GAChD9F,QAAQpX,IAAI,oCAAqC68D,IAC5Cr3D,IAAY0X,EACf,MAAO,GAET,IAAI4/C,EAAkBt3D,EACtB,GAAIA,EAAQvI,WAAW,MAAO,CAC5B6/D,EAAkBA,EAAgBh0D,QAAQ,MAAO,IACjD,IAAI+V,EAAM,GACV,IAAK,IAAI1f,EAAI,EAAGA,EAAI29D,EAAgBxsE,OAAQ6O,GAAK,EAAG,CAClD,MAAMqpC,EAAOs0B,EAAgBzrE,MAAM8N,EAAGA,EAAI,GAC1C0f,GAAO3E,OAAO4P,aAAanR,SAAS6vB,EAAM,IAC5C,CACAs0B,EAAkBj+C,CACpB,CACAzH,QAAQpX,IAAI,yCAA0C88D,GAGtD,MAAMC,EAAmBC,EAAAA,GAA2BF,EAAiB5/C,GAErE,OADA9F,QAAQpX,IAAI,sCAAuC+8D,GAC5CA,EAAiBxmE,gBAAkBsmE,EAAWtmE,aACvD,EAEA,mBAAM44D,CAAc8N,GAElB,GAAIxrE,OAAO4K,UAAY5K,OAAO4K,SAASS,SAAWmgE,GAAQA,EAAK3sE,OAAS,EAAG,CACzE,IAAI4sE,EAAa,CAAC,EAClB,IAAK,IAAIC,KAAcF,EACrB,GAAI,WAAYE,GAAc,WAAYA,EAAY,CACpD,IAAIC,EAAcnpE,KAAK++D,mBAAmB7gE,QAAOrC,GAAQA,EAAKqV,SAAWg4D,EAAWh4D,SAAQ,GAG5F,GAFAiS,QAAQpX,IAAI,cAAexQ,KAAKC,UAAU2tE,IAC1ChmD,QAAQpX,IAAI,cAAexQ,KAAKC,UAAU0tE,IAChB,kBAAtBA,EAAWh4D,OAA4B,CACzC,IAAI03D,EAAa5oE,KAAKqgE,6BAA6B6I,EAAW3gE,SAC9DqgE,EAAaA,EAAW,GACxBzlD,QAAQpX,IAAI,iBAAkB68D,GAC9B,IAAIQ,EAAaD,EAAYn4D,OAAO,GACpCmS,QAAQpX,IAAI,iBAAkBxQ,KAAKC,UAAU4tE,IAC7CH,EAAWC,EAAWh4D,QAAUlR,KAAK2oE,kBAAkBS,EAAYF,EAAW7tE,OAAQutE,EACxF,MAAO,GAA0B,uBAAtBM,EAAWh4D,OAAiC,CACrD,IAAIm4D,EAAgBH,EAAW7tE,OAC/B,GAAI,cAAeguE,GAAiB,cAAeA,EAAe,CAChE,MAAMC,EAAYjD,IAAAA,KAAUnmC,SAASC,QACjC,IAAIuK,aAAcC,OAAO,gBACzB0+B,EAAcpgD,UACd,IAAIq9C,EAAAA,UAAU+C,EAAcngE,WAAWq9D,WAE3C0C,EAAWC,EAAWh4D,QAAUo4D,CAClC,MACEL,EAAWC,EAAWh4D,SAAU,CAEpC,MAAO,GAA0B,4BAAtBg4D,EAAWh4D,QAA8D,oBAAtBg4D,EAAWh4D,OAA8B,CACrG,IAAIgxD,EAAYliE,KAAKmiE,oBAAoB+G,EAAW7tE,QACpD4tE,EAAWC,EAAWh4D,eAAiBgxD,GAAW7mE,MACpD,MAAO,GAA0B,oBAAtB6tE,EAAWh4D,OAEpB+3D,EAAWC,EAAWh4D,QAAU,wBAE3B,GAA0B,sBAAtBg4D,EAAWh4D,OAAgC,CACpD,IAAIq4D,EAAeL,EAAW7tE,OAC1BqmB,EAAgB,IAAI8kD,EAAAA,EAAiBhpE,OAAO4K,UAC5CohE,EAAiB9nD,EAAcjZ,WAAWygE,EAAW3gE,UAAUW,UAE/D66B,EAAUwlC,EAAatgD,UACvB8a,EAAQ/6B,WAAW,QACrB+6B,EAAUA,EAAQ3mC,MAAM,EAAG2mC,EAAQ1nC,SAGrC8mB,QAAQpX,IAAI,+CAAgDy9D,EAAgBzlC,GAC5EklC,EAAWC,EAAWh4D,QAAUm1D,IAAAA,KAAUnmC,SAASC,OAC/Cm6B,EAAO9tC,KAAK+8C,EAAaE,aACzBnP,EAAO9tC,KAAKuX,EAAS,OACrBu2B,EAAO9tC,KAAKg9C,EAAgB,OAElC,MAAO,GAA0B,yBAAtBN,EAAWh4D,OAAmC,CACvD,IAAI0Q,EAAiB,IAAI1c,EAAAA,kBAAkB1H,OAAO4K,UAC9CshE,EAAgB9nD,EAAenZ,WAAWygE,EAAW3gE,UAAUnM,QAC/DutE,EAAgBT,EAAW7tE,OAC3B8/D,QAAgBn7D,KAAKkoE,2BAA2BwB,EAAe,cAAeC,EAAc1gD,UAAW0gD,EAAcxB,QAAQrtE,OACjImuE,EAAWC,EAAWh4D,QAAUiqD,CAElC,MAAO,GAA0B,qBAAtB+N,EAAWh4D,OAA+B,CACnD,IAAI04D,EAAcV,EAAW7tE,OACzB+gE,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZj0D,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UAC1C6gE,EAAWC,EAAWh4D,cAAgBkrD,EAAQE,IAAIpB,cAAc,KAAOZ,EAAO9tC,KAAK,cAAcva,SAAS,OAAQ23D,EAAaxhE,EAASK,WAAW,gBAAgBrM,QACrK,MAAO,GAA0B,uBAAtB8sE,EAAWh4D,OAAiC,CACrD,IAAI04D,EAAcV,EAAW7tE,OACzB+gE,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAME,QAAsBH,EAAQE,IAAIE,gBAAgB,aAAcoN,GACtE,IAAIxhE,EAAW,IAAIpD,EAAAA,gBAAgBxH,OAAO4K,UAE1C6gE,EAAWC,EAAWh4D,QAAUqrD,IAAkBn0D,EAASK,WAAW,gBAAgBrM,OACxF,MAAO,GAA0B,yBAAtB8sE,EAAWh4D,OAAmC,CACvD,IAAIg5B,EAAMg/B,EAAW7tE,OACjBkO,EAAWvJ,KAAKk/D,uBAEpB,MAAMtE,EAAc,IAAIiP,EAAAA,GAAoB,CAAC/O,QAAS,qDAEtD,IAAI1yD,EAAW,IAAIrD,EAAAA,oBAAoBvH,OAAO4K,UAC1ChM,EAAUgM,EAASK,WAAW,oBAAoBrM,QAClD2+D,EAAK,QACT,MAAMnyD,EAAU,IAAIkhE,EAAAA,GAAgBlP,EAAax+D,EAAS2+D,GAE1D,IAAIE,EAAOj7D,KACX4I,EAAQsyD,cAAc3xD,EAAU2gC,GAAKliC,MAAK,SAAUmzD,GAClDF,EAAK5E,gBAAkB,sBAAsB8E,GAC/C,IAAGhnD,OAAM,SAAUvK,GACjBqxD,EAAK5E,gBAAkB,sBAAsBzsD,GAC/C,IACAq/D,EAAWC,EAAWh4D,QAAU,oCAClC,MACE+3D,EAAWC,EAAWh4D,QAAU,kBAGpC,KAAW,WAAYg4D,GAAc,UAAWA,IAC9CD,EAAWC,EAAWh4D,QAAUg4D,EAAWt/D,OAK/CuZ,QAAQpX,IAAI,iBAAkBxQ,KAAKC,UAAUytE,IAC7CjpE,KAAKq2D,gBAAkB,eAAiB96D,KAAKC,UAAUytE,EACzD,MACE9lD,QAAQpX,IAAI,uDAIhB,EAEAskD,iBAAAA,CAAkBD,GAChBwN,GAAgBxN,EACZpwD,KAAKwuD,SACPhxD,OAAO4K,SAASsgE,UAAY,CAC1B5I,qBAAsB,CACpBzQ,eAAgBoO,GAChB1O,OAAkC,IAA1ByO,GAAenhE,OAAe,MAAQmhE,IAEhDhgB,SAAUmgB,GACVoC,cAAe,CACb3P,MAAOA,IAIf,EAEA,yBAAM+R,CAAoB4H,GACxB,IAAIC,EAAYD,EACZ1uE,GAAS,EACTwa,EAAM,GACV,IAEE,MAAMmsD,EAAU,IAAIC,EAAAA,EAAWzkE,OAAO4K,UACtC,IAAIQ,EAAUo5D,EAAQv5D,aACtB0a,QAAQpX,IAAI,sBAAsBnD,EAAQxM,WAG1C,IAAI+M,QAAe8gE,EAAAA,EAAAA,IAA+BjqE,KAAKu6D,sBAAsBhpD,QAASy4D,EAAU/gD,WAC5F7sB,EAAU+M,EAAO+gE,eACrB/mD,QAAQpX,IAAI,mBAAmB3P,KAG/B+mB,QAAQpX,IAAI,mBAAmBnD,EAAQM,aACvCia,QAAQpX,IAAI,kBAAkB5C,EAAOghE,cACrC9uE,EAAUuN,EAAQxM,UAAYA,GAAawM,EAAQM,YAAcC,EAAOghE,WAExEt0D,EAAM,mBAAmBjN,EAAQxM,UAAYA,wBAA8BwM,EAAQM,YAAcC,EAAOghE,aACxGhnD,QAAQpX,IAAI,6BAA8B5C,EAC5C,CAAE,MAAOtB,GACPsb,QAAQpX,IAAI,4BAA6BlE,EAC3C,CACA,MAAO,CACLxM,SACAwa,MAEJ,EAGAmgD,oBAAAA,CAAqBhmD,GACnBhQ,KAAK0c,SAAW1M,CAClB,EAEAmmD,sBAAAA,CAAuBnmD,GACrBhQ,KAAKk2D,iBAAmBlmD,CAC1B,EAEAomD,gBAAAA,GACE,GAAIp2D,KAAKq2D,gBAAiB,CACxB,MAAM+T,EAAiB7uE,KAAKmO,MAAM1J,KAAKq2D,iBACvC+T,EAAe1tD,SAA6B,aAAlB1c,KAAK0c,SAA0B1c,KAAKk2D,iBAAmBl2D,KAAK0c,SACtF1c,KAAKq2D,gBAAkB96D,KAAKC,UAAU4uE,EACxC,CACF,EAEAnU,wBAAAA,GACE,OAAOqH,GAA8B+M,MAAMC,GAAMtqE,KAAK2+D,cAAc31D,WAAWshE,IACjF,GAEFC,OAAAA,GAOE,EAGFC,OAAAA,GAEE,IAAIC,EAAYp5C,SAASq5C,cAAc,UACvCD,EAAUE,IAAM,8CAChBF,EAAU95D,GAAK,QACf0gB,SAASG,qBAAqB,QAAQ,GAAGo5C,YAAYH,GAErDzqE,KAAKw+D,cAAe,EACpBntC,SAASD,MAAQ,cAGfpxB,KAAKsxD,iBAIPnuC,QAAQpX,IAAI,SACR/L,KAAK6qE,MAAMC,kBACb9qE,KAAKk/D,wBAAyB6L,EAAAA,EAAAA,IAAM/qE,KAAK6qE,MAAMC,iBAAiBvhE,UAChE4Z,QAAQpX,IAAI,QAAS/L,KAAKk/D,yBAE1B/7C,QAAQpX,IAAI,MAEhB,GWhoIF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAASi/D,GAAQ,CAAC,YAAY,qBAEzF,UCJA,MAAMC,IAAMC,EAAAA,EAAAA,IAAUC,IAEtBF,GAAIG,IAAIC,EAAAA,GACRJ,GAAIK,MAAM,O,mCCPV3wE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6+B,iBAAmB7+B,EAAQ0wE,wBAAqB,EACxD,MAAMA,GAEN1wE,EAAQ0wE,mBAAqBA,EAC7B,MAAM7xC,EACFvxB,WAAAA,CAAYqjE,GACZ,EAEJ3wE,EAAQ6+B,iBAAmBA,C,qCCVfh/B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI7H,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4wE,2BAAwB,EAChC5wE,EAAQkkB,gCAAkCA,EAC1ClkB,EAAQ2tC,8BAAgCA,EACxC3tC,EAAQquD,6BAA+BA,EACvCruD,EAAQkuD,qCAAuCA,EAC/CluD,EAAQwuD,sBAAwBA,EAChC,MAAMnhD,EAASxN,EAAQ,OACjB6vC,EAASxqC,EAAgBrF,EAAQ,QACjCigB,EAAajgB,EAAQ,OAC3B,SAAS8P,EAAQ1P,GACb,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkByP,MAAMC,QAAQ1P,EACxE,CACA,SAAS0qB,EAAS1qB,GACd,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmByP,MAAMC,QAAQ1P,EACzE,CAeA,SAASikB,EAAgCsqB,GACrC,IAAIqiC,EAAkB,IAAIxjE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,sBAChF,IAAIusD,EAAY,CACZz6D,OAAQm4B,EAAcn4B,OACtB3I,QAAS8gC,EAAc9gC,QACvBqB,MAAO,CACH4J,KAAMk4D,EAAgBl4D,KACtBjC,QAASm6D,EAAgBn6D,UAGjC,OAAOo6D,CACX,CACA,SAASnjC,EAA8Ba,EAAexgC,GAClD,OAAO5B,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EAAIC,EAAIC,EAAI0G,EAAIC,EACpB,KACI,EAAIT,EAAO5M,UAAU,+CAAgDC,KAAKC,UAAU6tC,IACpF,IAAIuiC,EAAiB,CAAC,EACtB,GAA6B,uBAAzBviC,EAAcn4B,OAAiC,CAC/C,IAAI26D,EAAmE,QAArD/pE,EAAK+G,EAAQC,WAAWZ,EAAOtB,wBAAqC,IAAP9E,OAAgB,EAASA,EAAG/F,SAASmC,QAAO,SAAU4tE,GACjI,OAAOA,EAAS9iE,WAAWqgC,EAAc9gC,QAC7C,IAAG,GACH,MAAMwjE,GAAa,EAAIpxD,EAAWsJ,sBAAsB4nD,GACxD,GAAIxiC,EAAcr4B,QAAU+6D,GAAc,YAAa1iC,EAAcr4B,OAAQ,CACzE,IAAIg7D,EAAc3iC,EAAcr4B,OAAOO,QACvC,GAA+E,eAAhD,QAAzBxP,EAAK8G,EAAQqW,cAA2B,IAAPnd,OAAgB,EAASA,EAAG1D,SAA0B,CACzF,IAAI4tE,GAAgB,IAAIvhC,aAAcC,OAAOqhC,GAC7CA,EAAczhC,EAAOroC,QAAQyoC,OAAOshC,EACxC,CAWA,OAVA5iC,EAAcr4B,OAAS,CACnBO,QAASy6D,EACT,OAAUD,GAEd1iC,EAAcniB,aAAemiB,EAAcr4B,OAC3C46D,EAAiB,CACb1iE,UAAW6iE,IAEf,EAAI7jE,EAAO5M,UAAU,0CAA2CC,KAAKC,UAAUqwE,GAAaE,IAC5F,EAAI7jE,EAAO5M,UAAU,qCAAsCC,KAAKC,UAAUowE,IACnEA,CACX,CAEI,MAAM,IAAI1jE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAExE,CACK,GAA6B,oBAAzBiqB,EAAcn4B,QAAyD,4BAAzBm4B,EAAcn4B,OAAsC,CACvG,GAAI,YAAam4B,EAAcr4B,QAAUq4B,EAAcr4B,OAAOO,QAAS,CACnE,IAAI26D,EAAa3wE,KAAKmO,MAAMnO,KAAKC,UAAU6tC,EAAcr4B,OAAOO,UAC5D46D,EAAiBxxE,OAAOgM,OAAOulE,GAC/B72B,EAAa,IAAI3f,WAAWy2C,GAC5BC,EAAU,IAAIC,YAAY,QAC1BC,EAAa12C,KAAKw2C,EAAQG,OAAOl3B,IAqBrC,OApBAhM,EAAcr4B,OAAS,CACnBO,QAASi7D,KAAKF,IAElBjjC,EAAcniB,aAAe,CACzB3V,QAAS8jC,GAEblyB,QAAQpX,IAAI,gDAAiDxQ,KAAKC,UAAU6tC,EAAcr4B,QAASs7D,GACtE,oBAAzBjjC,EAAcn4B,OACd06D,EAAiB,CACb,aAAgBU,EAChB,UAAa,IAGa,4BAAzBjjC,EAAcn4B,SACnB06D,EAAiB,CACb,MAASU,EACT,UAAa,MAGrB,EAAIpkE,EAAO5M,UAAU,0DAA2DC,KAAKC,UAAUowE,IACxFA,CACX,CAEI,MAAM,IAAI1jE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAExE,CACK,GAA6B,oBAAzBiqB,EAAcn4B,OAA8B,CACjD,IAAIu7D,EAAoE,QAArDzqE,EAAK6G,EAAQC,WAAWZ,EAAOxB,wBAAqC,IAAP1E,OAAgB,EAASA,EAAGjG,SAASmC,QAAO,SAAUwuE,GAClI,OAAOA,EAAS1jE,WAAWqgC,EAAc9gC,QAC7C,IACIokE,EAAaF,EAAY,GAC7B,MAAMG,GAAa,EAAIjyD,EAAWsJ,sBAAsB0oD,GAExD,IADA,EAAIzkE,EAAO5M,UAAU,uCAAwCC,KAAKC,UAAUmxE,GAAaC,GACrFA,EAAY,CACZ,KAAI,YAAavjC,EAAcr4B,UAAUq4B,EAAcr4B,OAAOO,SAAmD,kBAAjC83B,EAAcr4B,OAAOO,QAOjG,MAAM,IAAIrJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,sBAIpE,OAVIiqB,EAAcr4B,OAAS,CACnBwb,KAAMogD,EACN7oC,QAASsF,EAAcr4B,OAAOO,SAMtC83B,EAAcr4B,OAAO,QAAU47D,GAC/B,EAAI1kE,EAAO5M,UAAU,kCAAmCC,KAAKC,UAAUowE,IAChEA,CACX,CAEI,MAAM,IAAI1jE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAExE,CACK,GAA6B,sBAAzBiqB,EAAcn4B,OAAgC,CACnD,IAAI27D,EAAYxjC,EAAcr4B,OAC1B87D,EAAuE,QAAvDpkE,EAAKG,EAAQC,WAAWZ,EAAOnB,0BAAuC,IAAP2B,OAAgB,EAASA,EAAG3M,SAASmC,QAAO,SAAU6uE,GACrI,OAAOA,EAAS/jE,WAAWqgC,EAAc9gC,QAC7C,IAAG,GACCykE,GAAe,EAAIryD,EAAWsJ,sBAAsB6oD,GACxD,GAAID,GAAaG,EAAc,CAC3B,IAAI1wC,EAAS,QACT/qB,EAAU,GAAI7G,EAAQ,GAC1B,IAAI++D,EAAcntC,EAClB,IAAIopC,EAAcloE,OAAOyB,SAASs6B,SAAW,KAAO/7B,OAAOyB,SAASC,SAChE,YAAa2tE,GAAaA,EAAUzwE,UACpCqtE,GAAe,cAAgBuD,GAE/B,gBAAiBH,GAAaA,EAAUnH,cACxC+D,GAAe,kBAAoB/D,GAEvC,IAAIuH,EAAe,EACf,YAAaJ,GAAaA,EAAUtkE,UACX,iBAArBskE,EAAUtkE,QACV0kE,EAAe,EAEW,oBAArBJ,EAAUtkE,UACf0kE,EAAe,GAEnBxD,GAAe,cAAgBwD,GAE/B,YAAaJ,IACbpD,GAAe,cAAgBoD,EAAUt7D,QACzCA,EAAUs7D,EAAUt7D,SAEpB,UAAWs7D,IACXpD,GAAe,YAAcoD,EAAUniE,MACvCA,EAAQmiE,EAAUniE,OAEtB,MAAM44D,GAAY,IAAI54B,aAAcC,OAAO8+B,GACrC5+C,EAAMtgB,MAAMiiB,KAAK82C,GAClBxlD,KAAIy2B,GAAQA,EAAKtiC,SAAS,IAAI8Y,SAAS,EAAG,OAC1C1tB,KAAK,IAiBV,OAhBAgsC,EAAcr4B,OAAS,CACnB,QAAW6Z,GAEfwe,EAAcniB,aAAe2lD,GAC7B,EAAI3kE,EAAO5M,UAAU,mCAAoCC,KAAKC,UAAU6tC,IACxEuiC,EAAiB,CACbxvE,QAAS4wE,EACTtH,YAAaA,EACbn9D,QAAS0kE,EACTxD,YAAaA,EACbl4D,QAASA,EACT7G,MAAOA,EACP4xB,OAAQA,EACRrT,UAAW,KAEf,EAAI/gB,EAAO5M,UAAU,oCAAqCC,KAAKC,UAAUowE,IAClEA,CACX,CAEI,MAAM,IAAI1jE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAExE,CACK,GAA6B,yBAAzBiqB,EAAcn4B,OAAmC,CACtD,IAAIg8D,EAA2H,QAA1GvkE,EAAiB,OAAZE,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,WAAWZ,EAAOlB,2BAAwC,IAAP2B,OAAgB,EAASA,EAAG5M,SAASmC,QAAO,SAAUivE,GACzL,OAAOA,EAAenkE,WAAWqgC,EAAc9gC,QACnD,IAAG,GACH,MAAMmhE,GAAgB,EAAI/uD,EAAWsJ,sBAAsBipD,GAC3D,IAAIE,EAAa/jC,EAAcr4B,OAAO,WACtC,MAAMq8D,EAAsBz3C,KAAKw3C,GAGjC,IAFA,EAAIllE,EAAO5M,UAAU,4CAA6CC,KAAKC,UAAU0xE,GAAgBxD,IACjG,EAAIxhE,EAAO5M,UAAU,4CAA6C+xE,GAC9DD,GAAc1D,EAAe,CAC7B,MAAMjjB,EAAU,CACZC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLjhB,OAAQ,IAEZkhB,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAU2iB,EACV,KAAQ2D,KAGpBrmB,KAAM,IAQV,OANA3d,EAAcr4B,OAAS,CACnB,OAAU04D,EACV,SAAYrgC,EAAc9gC,QAAQrL,MAAM,KAAK,GAC7C,KAAQupD,IAEZ,EAAIv+C,EAAO5M,UAAU,uCAAwCC,KAAKC,UAAUowE,IACrEA,CACX,CAEI,MAAM,IAAI1jE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAExE,EACA,EAAIlX,EAAO5M,UAAU,sCAAuCC,KAAKC,UAAU6tC,GAC/E,CACA,MAAOz/B,GACH,MAAMA,CACV,CACJ,GACJ,CACA,SAASs/C,EAA6BrgD,EAASwgC,GAC3C,OAAOpiC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAI8B,EACJ,IACI,GAAI+G,EAAQiW,aAAc,EACtB,EAAI5W,EAAO5M,UAAU,6CAA8CC,KAAKC,UAAUqN,EAAQiW,gBAC1F,EAAI5W,EAAO5M,UAAU,mDAAoDC,KAAKC,UAAUqN,EAAQC,aAChG,IAAK,MAAMogE,KAAcrgE,EAAQiW,aAE7B,IADA,EAAI5W,EAAO5M,UAAU,2CAA4CC,KAAKC,UAAU0tE,IAC5E,WAAYA,EACZ,GAA0B,uBAAtBA,EAAWh4D,OAAiC,CAC5C,IAAIo8D,EAAoBpE,EAAW7tE,QACnC,EAAI6M,EAAO5M,UAAU,yCAA0C4tE,EAAW3gE,SAC1E,IAAIK,EAAgE,QAArD9G,EAAK+G,EAAQC,WAAWZ,EAAOtB,wBAAqC,IAAP9E,OAAgB,EAASA,EAAG/F,SAASmC,QAAO,SAAU0K,GAE9H,OADA,EAAIV,EAAO5M,UAAU,8BAA+BsN,GAC7CA,EAAQI,WAAWkgE,EAAW3gE,QACzC,IAAG,IACH,EAAIL,EAAO5M,UAAU,qCAAsCgyE,EAAmB1kE,GAC1E0kE,GAAqB1kE,IACrBsgE,EAAW7tE,OAAS,CAChB,UAAakvC,EAAOroC,QAAQqqE,OAAOe,GACnC,WAAa,EAAI3yD,EAAWsJ,sBAAsBrb,IAG9D,MACK,GAA0B,oBAAtBsgE,EAAWh4D,QAAsD,4BAAtBg4D,EAAWh4D,OAAsC,CACjG,IAAIq8D,EAAYlkC,EAAcnrC,QAAO,SAAUsvE,GAC3C,OAAOA,EAAct8D,SAAWg4D,EAAWh4D,MAC/C,IAAG,GACH,GAAIq8D,GAAaA,EAAUv8D,QAAU,YAAau8D,EAAUv8D,OAAQ,CAChE,IAAIk7D,EAAaqB,EAAUv8D,OAAOO,QAC9Bk8D,EAAgB73C,KAAKs2C,GACzB/oD,QAAQpX,IAAI,gDAAiDmgE,EAAYuB,GAC/C,oBAAtBvE,EAAWh4D,OACXg4D,EAAW7tE,OAAS,CAChB,aAAgBoyE,EAChB,UAAavE,EAAW7tE,QAGD,4BAAtB6tE,EAAWh4D,SAChBg4D,EAAW7tE,OAAS,CAChB,MAASoyE,EACT,UAAavE,EAAW7tE,QAGpC,CACJ,MACK,GAA0B,sBAAtB6tE,EAAWh4D,OAAgC,CAIhD,GAHAg4D,EAAW3gE,SAAU,EAAIL,EAAO+V,2BAA2BirD,EAAW3gE,SACtE2gE,EAAW7tE,OAASE,KAAKmO,MAAMw/D,EAAW7tE,QAC1C8nB,QAAQpX,IAAI,yDAA0DxQ,KAAKC,UAAU0tE,EAAW7tE,SAC5F6tE,EAAW7tE,QAAU,cAAe6tE,EAAW7tE,OAAQ,CACvD,IAAIqyE,EAAiBxE,EAAW7tE,OAAO4tB,UACnCykD,GAAkBA,EAAe1kE,WAAW,QAC5C0kE,EAAiBA,EAAetwE,MAAM,EAAGswE,EAAerxE,QACxD6sE,EAAW7tE,OAAO4tB,UAAYykD,EAEtC,CACAvqD,QAAQpX,IAAI,wDAAyDxQ,KAAKC,UAAU0tE,EAAW7tE,QACnG,MACK,GAA0B,yBAAtB6tE,EAAWh4D,OAChBg4D,EAAW7tE,OAASE,KAAKmO,MAAMw/D,EAAW7tE,aAEzC,GAAyB,wBAArB6tE,EAAWh4D,OAAkC,CAClD,IAAIjP,EAAUinE,EAAW7tE,OACH,iBAAX4G,IACPA,EAAU1G,KAAKmO,MAAMzH,IAEzBinE,EAAW7tE,OAAS,CAAC4G,EAAQ,eAAgBA,EAAQ,eACzD,KAC8B,sBAArBinE,EAAWh4D,SAChBg4D,EAAW7tE,OAASguD,EAAsB6f,EAAW7tE,QAIrE,CACJ,CACA,MAAOuO,GAEH,MADA,EAAI1B,EAAO5M,UAAU,mDAAoDC,KAAKC,UAAUoO,IAClFA,CACV,CACJ,GACJ,CACA,SAASm/C,EAAqC/3C,EAAQ28D,GAClD,OAAO1mE,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAIkI,EAAO5M,UAAU,uDAAwDC,KAAKC,UAAUwV,IAC5F,MAAM3V,EAAS,GAEf,GAAI2V,GAAUA,EAAO3U,OAAS,EAC1B,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,qEAEnF,IAAKuxD,GAAoB38D,GAAUA,EAAO3U,OAAS,EAC/C,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,6FAGnF,IAAK,MAAM8sD,KAAcl4D,EAKrB,GAJ0B,sBAAtBk4D,EAAWh4D,SACXg4D,EAAW3gE,SAAU,EAAIL,EAAOsU,2BAA2B0sD,EAAW3gE,UAGhD,4BAAtB2gE,EAAWh4D,OAAsC,CACjD,IAAI08D,EAAqC,OAArBD,QAAkD,IAArBA,OAA8B,EAASA,EAAiBtD,MAAKwD,GAASA,EAAM5xE,UAAUkD,SAAS,YAChJ,IAAKyuE,EACD,MAAM,IAAI1lE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,6CAA6C8sD,EAAWh4D,+DAE/I,MACK,GAA0B,uBAAtBg4D,EAAWh4D,OAAiC,CACjD,KAAI,EAAIyJ,EAAW0J,4BAIf,MAAM,IAAInc,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,sBAHhE8pD,EAAW3gE,QAAU,EAK7B,KACK,CACD,MAAMulE,KAAuC,OAArBH,QAAkD,IAArBA,OAA8B,EAASA,EAAiBtD,MAAKwD,GAASA,EAAM9wE,OAAOstE,MAAKltE,GAASA,EAAMgC,SAAS,GAAG+pE,EAAW3gE,gBACnL,IAAKulE,EACD,MAAM,IAAI5lE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,6CAA6C8sD,EAAWh4D,oCAAoCg4D,EAAW3gE,WAE9L,CAEJ,IAAK,MAAM1M,KAAQmV,EAAQ,CACvB,IAAKnW,EAAQ4wE,sBAAsBtsE,SAAStD,EAAKqV,QAC7C,MAAM,IAAIhJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,uDAAuDvgB,EAAKqV,WAE/I,GAAoB,4BAAhBrV,EAAKqV,QACL,GAAI3G,MAAMC,QAAQ3O,EAAKmV,QAAS,CAC5B,MAAMmV,EAAYtqB,EAAKmV,OACvB,IAAImV,GAAkC,IAArBA,EAAU9pB,OAMtB,MAAI8pB,GAAaA,EAAU9pB,OAAS,EAC/B,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,0DAA0DvgB,EAAKqV,WAGxI,IAAIhJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,2CAA2CvgB,EAAKqV,WAV1F,CACrC,MAAMkV,EAAaD,EAAU,GACzBX,EAASY,KACTvqB,EAAKmV,OAASoV,EAEtB,CAOJ,OAEC,GAAoB,kBAAhBvqB,EAAKqV,QACV,GAAI1G,EAAQ3O,EAAKmV,QAAS,CACtB,GAAInV,EAAKmV,QAAiC,IAAvBnV,EAAKmV,OAAO3U,OAC3B,MAAM,IAAI6L,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,2CAA2CvgB,EAAKqV,YAEnI,IAAIyV,EAAW9qB,EAAKmV,OAAO,GAC3B,IAAI2V,GAAgC,kBAAbA,EAMnB,MAAM,IAAIze,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YALlIrV,EAAKmV,OAAS,CACVO,QAASoV,EAMrB,OAEC,GAAoB,oBAAhB9qB,EAAKqV,QAAgD,4BAAhBrV,EAAKqV,OAAsC,CACrF,IAAIsU,EAAS3pB,EAAKmV,WAAW,YAAanV,EAAKmV,QAe3C,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YAdlI,IAAIrV,EAAKmV,OAAOO,QAUZ,MAAM,IAAIrJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YAV7G,EACrB,EAAIhJ,EAAO5M,UAAU,wCAAyCO,EAAKmV,OAAOO,SAC1E,IAAIA,EAAUhW,KAAKmO,MAAMnO,KAAKC,UAAUK,EAAKmV,OAAOO,UAChD46D,EAAiBxxE,OAAOgM,OAAO4K,GAC/B8jC,EAAa,IAAI3f,WAAWy2C,GAC5BC,EAAU,IAAIC,YAAY,QAC1BC,EAAa12C,KAAKw2C,EAAQG,OAAOl3B,IACrCx5C,EAAKmV,OAAOO,QAAUi7D,KAAKF,EAC/B,CAQR,MACK,GAAoB,uBAAhBzwE,EAAKqV,OAAiC,CAC3C,IAAIsU,EAAS3pB,EAAKmV,WAAW,YAAanV,EAAKmV,QAU3C,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YATlI,IAAIrV,EAAKmV,OAAOO,SAA0C,kBAAxB1V,EAAKmV,OAAOO,QAK1C,MAAM,IAAIrJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YALlE,CAChE,IAAI+6D,GAAgB,IAAIvhC,aAAcC,OAAO9uC,EAAKmV,OAAOO,SACzD1V,EAAKmV,OAAO,eAAiBu5B,EAAOroC,QAAQyoC,OAAOshC,EACvD,CAQR,MACK,GAAoB,sBAAhBpwE,EAAKqV,OAAgC,CAC1C,IAAIsU,EAAS3pB,EAAKmV,QAsBd,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YArBlI,IAAIrV,EAAK0M,QAiBL,MAAM,IAAIL,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,sDAAsDvgB,EAAKqV,YAjB5H,CACd,IAAI68D,EAAclyE,EAAKmV,OACnBg9D,EAAaxwE,OAAOyB,SAASs6B,SAAW,KAAO/7B,OAAOyB,SAASC,SACnE,IAAI+uE,EAAc,EACG,cAAjBpyE,EAAK0M,SAEiB,mBAAjB1M,EAAK0M,UACV0lE,EAAc,GAElBpyE,EAAKmV,OAAS,CACV9U,KAAM6xE,EACNG,eAAgBF,EAChB1xC,OAAQ,QACR2wC,aAAcgB,EAEtB,CAQR,MACK,GAAoB,yBAAhBpyE,EAAKqV,OAAmC,CAC7C,IAAIsU,EAAS3pB,EAAKmV,QAmCd,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YAlClI,IAAIrV,EAAKmV,OAAOO,SAA0C,kBAAxB1V,EAAKmV,OAAOO,QA8B1C,MAAM,IAAIrJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,sDAAsDvgB,EAAKqV,YA9B1E,CAChE,MAAMwe,EAAgBkG,KAAK/5B,EAAKmV,OAAOO,SACvC,IAAI48D,EAActyE,EAAK0M,QAAQrL,MAAM,KAAK,GAC1C,IAAIixE,EAuBA,MAAM,IAAIjmE,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,sDAAsDvgB,EAAKqV,YAtB1IrV,EAAKmV,OAAS,CACV01C,SAAUynB,EACVjyE,KAAM,CACFwqD,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLjhB,OAAQ,IAEZkhB,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAU,GACV,KAAQr3B,KAGpBs3B,KAAM,IAOtB,CAQR,MACK,GAAmB,oBAAfnrD,EAAKqV,OAA8B,CACxC,IAAIsU,EAAS3pB,EAAKmV,QASd,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YARlI,KAAI,YAAarV,EAAKmV,UAAUnV,EAAKmV,OAAOO,SAA0C,kBAAxB1V,EAAKmV,OAAOO,QAItE,MAAM,IAAIrJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YAHlIrV,EAAKmV,OAAOO,QAAUoZ,EAAY9uB,EAAKmV,OAAOO,QAS1D,MACK,GAAmB,mBAAf1V,EAAKqV,OAA6B,CACvC,IAAIsU,EAAS3pB,EAAKmV,QAWd,MAAM,IAAI9I,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YAVlI,KAAI,YAAarV,EAAKmV,UAAUnV,EAAKmV,OAAOO,SAA0C,kBAAxB1V,EAAKmV,OAAOO,QAMtE,MAAM,IAAIrJ,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwc,cAAe,8CAA8CvgB,EAAKqV,YALlIrV,EAAKmV,OAAS,CACV+yB,QAASloC,EAAKmV,OAAOO,QAUrC,EACA,EAAIrJ,EAAO5M,UAAU,6CAA8CC,KAAKC,UAAUK,IAClFR,EAAOiB,KAAKT,EAChB,CACA,OAAOR,CACX,CACA,MAAOuO,GACH,MAAMA,CACV,CACJ,GACJ,CACA,SAAS+gB,EAAYC,GACjB,IAAIC,EAAM,GACV,IAAK,IAAI3f,EAAI,EAAGA,EAAI0f,EAAIvuB,OAAQ6O,IAC5B2f,GAAOD,EAAIE,WAAW5f,GAAG+G,SAAS,IAAI8Y,SAAS,EAAG,KAEtD,OAAOF,CACX,CACA,SAASw+B,EAAsB+kB,GAC3B,MAAMC,EAAa9yE,KAAKmO,MAAM0kE,GACxB/yE,EAAS,CACXmyB,KAAM6gD,EAAW7gD,KACjB8gD,MAAOD,EAAWC,MAClB79C,WAAY49C,EAAW59C,WACvB89C,WAAYF,EAAWE,WACvB5xE,UAAW0xE,EAAW1xE,UAAUmhB,KAAK0wD,IAAI,CACrCxpC,OAAQwpC,EAAKC,GACbryE,QAASoyE,EAAKhtE,GAAgB,SAAXgtE,EAAKhtE,EAAegtE,EAAKhtE,EAAI6sE,EAAWK,gBAGnE,OAAOrzE,CACX,CAzhBAR,EAAQ4wE,sBAAwB9wE,OAAOg0E,OAAO,CAC1C,gBACA,kBACA,0BACA,kBACA,oBACA,uBACA,mBACA,qBACA,uBACA,sB,sDCxCJh0E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+zE,6BAA+B/zE,EAAQm2C,8CAA2C,EAC1Fn2C,EAAQm2C,yCAA2C,SACnDn2C,EAAQ+zE,6BAA+B,CACnCC,gBAAiB,U,qCCJrBl0E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+E,wBAA0B/E,EAAQ8E,qBAAkB,EAC5D,IAAIo4B,EAAsBr9B,EAAQ,OAClCC,OAAOC,eAAeC,EAAS,kBAAmB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOu0B,EAAoBp4B,eAAiB,IACrIhF,OAAOC,eAAeC,EAAS,0BAA2B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOu0B,EAAoBn4B,uBAAyB,G,sDCJrJjF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQi0E,yBAA2Bj0E,EAAQk0E,QAAUl0E,EAAQm0E,QAAUn0E,EAAQo0E,QAAUp0E,EAAQq0E,WAAar0E,EAAQs0E,SAAWt0E,EAAQu0E,UAAYv0E,EAAQw0E,YAAS,EACtKx0E,EAAQw0E,OAAS,QACjBx0E,EAAQu0E,UAAY,gCACpBv0E,EAAQs0E,SAAW,KACnBt0E,EAAQq0E,WAAa,EACrBr0E,EAAQo0E,QAAU,qBAClBp0E,EAAQm0E,QAAU,GAAGn0E,EAAQs0E,YAAYt0E,EAAQq0E,cAAcr0E,EAAQo0E,WACvEp0E,EAAQk0E,QAAU,oCAClBl0E,EAAQi0E,yBAA2B,S,qCCVvBp0E,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAM40E,EACFnnE,WAAAA,CAAY0S,EAAMgC,EAAQzQ,GACtBpM,KAAKlE,KAAOoM,EAAOlB,mBACnBhH,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,qBAC9B,CACAsC,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACA8gB,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3d,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,iCAAkCC,KAAKC,UAAUsE,KACtE,EAAIoI,EAAO5M,UAAU,8BAA+BC,KAAKC,UAAUwE,KAAK/D,aACnE+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAC9E,OAAOlR,KAAK6c,OAAOpT,QAAQ3J,GAG3B,MAAM,IAAIoI,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAAsB,yBAE9F,GACJ,CACAK,eAAAA,CAAgBlX,EAASmX,GAEhB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAChC,GAAoB,qBAAT4qB,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,CACJ,CACAzE,gBAAAA,CAAiBxjB,GACb,OAAO,CACX,EAEJjF,EAAAA,WAAkBy0E,C,mCClHlB,IAAIluB,EAFJzmD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQumD,8BAA2B,EAEnC,SAAWA,GACPA,EAAyBA,EAAyB,iBAAmB,GAAK,gBAC1EA,EAAyBA,EAAyB,wBAA0B,KAAO,sBACtF,CAHD,CAGGA,IAA6BvmD,EAAQumD,yBAA2BA,EAA2B,CAAC,G,qCCPnF1mD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ00E,kBAAoBA,EAC5B10E,EAAQiuD,kCAAoCA,EAC5CjuD,EAAQouD,oBAAsBA,EAC9BpuD,EAAQ20E,gBAAkBA,EAC1B30E,EAAQ2lB,kBAAoBA,EAC5B,MAAMtY,EAASxN,EAAQ,OACvB,SAAS60E,EAAkBxzE,GACvB,MAAMgB,EAAS,GAKf,OAJAhB,EAASe,SAAS8L,IACd,MAAOzL,EAAOoL,GAAWK,EAAQ1L,MAAM,KACvCH,EAAOT,KAAK,GAAGa,KAASoL,IAAU,IAE/BxL,CACX,CACA,SAAS+rD,EAAkChgD,GACvC,IAAIzN,EAAS,GACb,OAAKyN,GAGLnO,OAAO2hB,KAAKxT,GAAYhM,SAAS+a,IACzBA,IAAQ3P,EAAO6zB,oBAAsBlkB,IAAQ3P,EAAOtB,iBAAmBiR,IAAQ3P,EAAOpB,iBAAmB+Q,IAAQ3P,EAAOnB,mBACrH8Q,GAAO3P,EAAOxB,iBAAmBmR,IAAQ3P,EAAOrB,iBAAmBgR,IAAQ3P,EAAOlB,oBAAsB6Q,IAAQ3P,EAAOwiB,kBAAoB7S,IAAQ3P,EAAOa,sBACzJD,EAAW+O,GAAK9a,QAChB1B,EAAOiB,KAAK,CACRL,UAAW4b,EACX9a,OAAQ+L,EAAW+O,GAAK9a,OACxBiU,OAAQlI,EAAW+O,GAAK7G,QAGpC,IAEG3V,GAdIA,CAef,CACA,SAAS4tD,EAAoBpgD,EAASC,EAAY8U,EAAoBjB,GAElE,MAAM8yD,EAAcA,CAACC,EAAcC,KAC/Bh1E,OAAO8hB,OAAOizD,EAAcC,EAAa,EAGvCC,EAAkBA,CAAC/uE,EAAQgvE,KAC7B,IAAK,MAAMh4D,KAAOg4D,EACVA,EAAOjsE,eAAeiU,IAAQg4D,EAAOh4D,GAAK2M,SACtCqrD,EAAOh4D,GAAK2M,SACP3jB,EAAOgX,GAAK2M,SACb3jB,EAAOgX,GAAK2M,OAAS,CAAC,GAG1BirD,EAAY5uE,EAAOgX,GAAK2M,OAAQqrD,EAAOh4D,GAAK2M,SAE5CqrD,EAAOh4D,GAAKkG,mBAA6C7a,IAA7BrC,EAAOgX,GAAKkG,cAEpCld,EAAOgX,GAAK9a,OAAOstE,MAAKltE,GAASA,EAAMD,MAAM,KAAK,KAAO2yE,EAAOh4D,GAAKkG,iBACrEld,EAAOgX,GAAKkG,aAAe8xD,EAAOh4D,GAAKkG,cAIvD,EAGAjV,GACA8mE,EAAgB/mE,EAAQC,WAAYA,GAGpC8U,GACAgyD,EAAgB/mE,EAAQC,WAAY8U,GAExC,IAAK,MAAM/F,KAAOhP,EAAQC,WAAY,CAClC,MAAM7M,EAAY4M,EAAQC,WAAW+O,IACjB,OAAd5b,QAAoC,IAAdA,OAAuB,EAASA,EAAUF,WAA2C,IAA9BE,EAAUF,SAASM,eAC3FwM,EAAQC,WAAW+O,EAElC,CACIhP,EAAQC,WAAWZ,EAAOxB,kBAAoBmC,EAAQqW,OAAO7gB,UAAY6J,EAAO4Q,eAChFg3D,EAAoBjnE,EAAQC,WAAWZ,EAAOxB,kBAElDmC,EAAQ8T,cAAgBA,CAC5B,CACA,SAASmzD,EAAoBC,GACzB,IACI,GAAIA,GAAgBA,EAAalzE,MAAO,CACpC,IAAIX,EAAO6zE,EAAalzE,MACxBlC,OAAO2hB,KAAKpgB,GAAMY,SAAQ+a,IACtB,MAAMhc,EAAOK,EAAK2b,GACe,IAA7B+M,OAAO/oB,EAAKm0E,aACZn0E,EAAKqN,UAAYrN,EAAKy7C,oBAAoBl6C,MAAM,GAGhDvB,EAAKqN,UAAYrN,EAAKy7C,mBAC1B,GAER,CACJ,CACA,MAAOzvC,IACH,EAAIK,EAAO5M,UAAU,uCACzB,CACJ,CA8GA,SAASk0E,EAAgBvzE,GACrB,OAAOA,EAAUkD,SAAS,IAC9B,CACA,SAASqhB,EAAkBvkB,GACvB,OAAOuzE,EAAgBvzE,GAAaA,EAAUiB,MAAM,KAAK,GAAKjB,CAClE,C,qCCnNAtB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6R,QAAU7R,EAAQozB,OAASpzB,EAAQg0C,wBAA0Bh0C,EAAQsQ,kBAAoBtQ,EAAQgT,wBAAqB,EAC9H,IAAIzC,EAAY1Q,EAAQ,OACxBC,OAAOC,eAAeC,EAAS,qBAAsB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO4H,EAAUyC,kBAAoB,IACjI,IAAIsgB,EAAsBzzB,EAAQ,MAClCC,OAAOC,eAAeC,EAAS,oBAAqB,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAO2qB,EAAoBhjB,iBAAmB,IACzI,IAAI8kE,EAA4Bv1E,EAAQ,OACxCC,OAAOC,eAAeC,EAAS,0BAA2B,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOysE,EAA0BphC,uBAAyB,IAC3J,IAAI/0B,EAAWpf,EAAQ,OACvBC,OAAOC,eAAeC,EAAS,SAAU,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOsW,EAASmU,MAAQ,IACxG,IAAIviB,EAAYhR,EAAQ,OACxBC,OAAOC,eAAeC,EAAS,UAAW,CAAE0I,YAAY,EAAMC,IAAK,WAAc,OAAOkI,EAAUgB,OAAS,G,qCCX3G,IAAI5K,EAAIC,EAAIC,EAAI0G,EADJhO,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQq1E,mBAAqBA,EAC7Br1E,EAAQs1E,aAAeA,EACvBt1E,EAAQg8B,iBAAmBA,EAC3Bh8B,EAAQ+7B,gBAAkBA,EAC1B/7B,EAAQw1B,4BAA8BA,EACtCx1B,EAAQ6rC,UAAYA,EACpB7rC,EAAQ87B,cAAgBA,EACxB97B,EAAQ67B,4BAA8BA,EACtC77B,EAAQ80B,oBAAsBA,EAC9B90B,EAAQ07B,0BAA4BA,EACpC17B,EAAQ47B,qBAAuBA,EAC/B57B,EAAQy7B,0BAA4BA,EACpCz7B,EAAQ27B,wBAA0BA,EAClC37B,EAAQu1B,iCAAmCA,EAC3Cv1B,EAAQoS,QAAUA,EAClBpS,EAAQsoD,oBAAsBA,EAC9BtoD,EAAQk1B,WAAaA,EACrB,MAAMxwB,EAAa7E,EAAQ,OACrBQ,EAAQR,EAAQ,OAChB8Q,EAAc9Q,EAAQ,MACtBiR,EAAUjR,EAAQ,OAClBiG,EAAYjG,EAAQ,OACpB01E,EAAc11E,EAAQ,OAC5B,SAASw1E,EAAmBryE,GACxB,MAAsB,MAAlBA,EAAIT,OAAO,GACJS,EAAIT,MAAM,GAAI,GAElBS,CACX,CACA,SAASsyE,EAAatyE,EAAK0/C,GACvB,OAAO2yB,EAAmBryE,GAAO,IAAM0/C,CAC3C,CACA,SAAS1mB,EAAiBw5C,EAAaC,GAA2B,GAC9DntD,QAAQpX,IAAI,gCAAiCskE,EAAa,8BAA+BC,GAkBzF,MAAMC,EAAoBt7B,mBAAmBo7B,GAG7C,OAFAltD,QAAQpX,IAAI,0CAA2CxM,EAAWR,uBAClEokB,QAAQpX,IAAI,0CAA2C,GAAGxM,EAAWR,kCAAkCwxE,KAChG,GAAGhxE,EAAWR,kCAAkCwxE,GAC3D,CACA,SAAS35C,EAAgBy5C,EAAazgD,EAAetU,GACjD+U,EAA4BggD,EAAazgD,EAAetU,GAAU,EACtE,CACA,SAAS+U,EAA4BggD,EAAazgD,EAAetU,EAAUk1D,GAAiB,GACxF,IAAI1uE,EACJ,MAAMmlC,KAAuC,QAAtBnlC,EAAK4kC,WAAgC,IAAP5kC,OAAgB,EAASA,EAAGolC,sBACjF/jB,QAAQpX,IAAI,uCAAwC6jB,GACpD,IAAI6gD,GAAiB,EACrB,MAAMC,EAAkB,IACJnxE,EAAWR,sBAC/BokB,QAAQpX,IAAI,qDAAsDxM,EAAWR,uBAC7E,IAAI4xE,EAAY,KACZC,EAAyBA,KACzBztD,QAAQpX,IAAI,gCAAgC,EAE5C8kE,GAAiB,EA+BrB,GA7BIA,EADAv1D,IAAa/b,EAAWgc,gBAAgBC,eACvB,EAAI7P,EAAQooC,mBAAoB,EAAIpoC,EAAQkoC,iBAAkB,EAAIloC,EAAQmoC,iBAAkB,EAAInoC,EAAQqoC,kBAIzF,IAAf/M,IAAwB,EAAIt7B,EAAQ4kB,SAErDigD,KACK,EAAI7kE,EAAQ4kB,SAYRsgD,IACLD,EAAyBA,KACrBztD,QAAQpX,IAAI,8CAA4C0kE,GACnDA,IACDttD,QAAQpX,IAAI,2DACZvO,OAAOsD,KAAK8uB,EAAe,SAC/B,GAjBJghD,EAAyBA,KAChBH,IACGE,EACAA,EAAU7vE,KAAK8uB,EAAe,SAG9BpyB,OAAOsD,KAAK8uB,EAAe,UAEnC,KAaP,EAAIjkB,EAAQ4kB,UAAYsgD,GAQzB,GAPI5pC,EACA0pC,EAAYnzE,OAAOsD,KAAKuvE,EAAa,WAGrCltD,QAAQpX,IAAI,iCACZvO,OAAOyB,SAAS2B,KAAOyvE,GAEvBG,EAAgB,CAChBtvE,WAAW0vE,EAAwBF,GACnC,IAAII,EAAQ,EACRl6B,EAAWC,aAAY,KACvBi6B,IACA3tD,QAAQpX,IAAI,8BAA4B+kE,EAAOz/C,SAAS0/C,OAAQ1/C,SAASi7B,iBACrEj7B,SAAS0/C,SACTN,GAAiB,IAEjBK,EAAQ,IAAMz/C,SAAS0/C,UACvBj6B,cAAcF,GACdzzB,QAAQpX,IAAI,+BAChB,GACD,KACHvO,OAAO2D,iBAAiB,QAAQ,KAC5BgiB,QAAQpX,IAAI,oBACZ0kE,GAAiB,CAAI,GACtB,CAAEpvE,MAAM,IACXgwB,SAASlwB,iBAAiB,oBAAoB,KAC1CgiB,QAAQpX,IAAI,gCAAiCslB,SAASi7B,iBACrB,WAA7Bj7B,SAASi7B,kBACTmkB,GAAiB,EACrB,GAER,OAGIxpC,EACAzpC,OAAOsD,KAAK8uB,EAAe,WAG3BzM,QAAQpX,IAAI,uBAAwBiC,KAAKC,QAC1B,OAAXzQ,aAA8B,IAAXA,YAAoB,EAASA,OAAOyvB,aACvDzvB,OAAOsD,KAAK8uB,EAAe,UAG3BpyB,OAAOsD,KAAK8uB,EAAe,SAE/BzM,QAAQpX,IAAI,sBAAuBiC,KAAKC,OAGpD,CACA,SAASy4B,IACL,GAAsB,qBAAXlpC,OACP,OAAOA,MAGf,CACA,SAASm5B,EAAcwtB,GACnB,IAAKA,EACD,OAAO,EAEX,MAAMtmD,EAAM,IAAIE,IAAIomD,GACpB,MAAwB,QAAjBtmD,EAAI07B,UAAuC,SAAjB17B,EAAIqB,QACzC,CACA,SAASw3B,EAA4Bs6C,GACjC,IAAIC,EAAoBD,EAOxB,OANAC,EAAoBA,EAAkBp8D,QAAQ,MAAO,OACrDo8D,EAAoBA,EAAkBp8D,QAAQ,KAAM,OACpDo8D,EAAoBA,EAAkBp8D,QAAQ,KAAM,OACpDo8D,EAAoBA,EAAkBp8D,QAAQ,KAAM,KACpDo8D,EAAoBA,EAAkBp8D,QAAQ,KAAM,MACpDo8D,EAAoBA,EAAkBp8D,QAAQ,KAAM,MAC7Co8D,CACX,CACA,SAASthD,EAAoBQ,GACzB,IAAI+gD,EAA4Bv2E,OAAO8hB,OAAO9hB,OAAO8hB,OAAO,CAAC,EAAG0T,GAAiB,CAAE5a,gBAAiB66D,EAAYv9C,uBAChH,MAAMs+C,EAAoB51E,KAAKC,UAAU01E,IACzC,EAAIh2E,EAAMI,UAAU,6CAA8C61E,GAClE,MAAM7N,GAAY,IAAI54B,aAAcC,OAAOwmC,GACrCzhD,EAAgBkG,KAAK3P,OAAO4P,gBAAgBytC,IAKlD,OADA,EAAIpoE,EAAMI,UAAU,yCAA0Co0B,GACvDA,CACX,CACA,SAAS6G,EAA0BpG,GAC/B,MAAMghD,EAAoB51E,KAAKC,UAAU,CAAEiU,MAAO0gB,EAAe1gB,MAAOkD,SAAUwd,EAAexd,YACjG,EAAIzX,EAAMI,UAAU,4CAA6C61E,GACjE,MAAM7N,GAAY,IAAI54B,aAAcC,OAAOwmC,GACrCzhD,EAAgBkG,KAAK3P,OAAO4P,gBAAgBytC,IAClD,OAAO5zC,CACX,CACA,SAAS+G,EAAqB26C,GAC1B,MAAO,GAAG7xE,EAAWX,0BAA0BwyE,GACnD,CACA,SAAS96C,EAA0B7mB,EAAOkD,GACtC,MAAO,GAAGnH,EAAY1M,4BAA4B2Q,KAAQ,EAAI9D,EAAQmkC,mBAAmBn9B,IAC7F,CAEA,SAAS6jB,EAAwB46C,EAAcC,GAC3C,IAAIzgC,EAAgB,CAAE0gC,WAAY,GAAI50D,SAAU,GAAI60D,YAAa,GAAIC,QAAQ,GACzEJ,IACAxgC,EAAc0gC,WAAaF,GAE3BC,IACAzgC,EAAcl0B,SAAW20D,GAExBpkE,IAID2jC,EAAc4gC,QAAS,EAHvB5gC,EAAc4gC,QAAS,GAK3B,EAAIt2E,EAAMI,UAAU,oCAAqCs1C,EAAcl0B,UACvE,IAAI+0D,EAAmBl2E,KAAKC,UAAUo1C,GACtC,MAAM0yB,GAAY,IAAI54B,aAAcC,OAAO8mC,GACrC/hD,EAAgBkG,KAAK3P,OAAO4P,gBAAgBytC,IAC5CoO,GAAgB,EAAI/lE,EAAQqqB,wBAAwBtG,GAE1D,IADA,EAAIx0B,EAAMI,UAAU,mBAAoBs1C,EAAelhB,GACnD0hD,GAAgBC,EAAa,CAC7B,GAAKpkE,IAkBD,OAAI,EAAIzB,EAAY9N,mBACT,IAAG,EAAI8N,EAAY9N,+BAA+Bg0E,IAGlD,gBAAgBlmE,EAAY9M,+BAA+BgzE,IApBtE,IAAI,EAAIlmE,EAAYjO,iBAChB,MAAO,IAAG,EAAIiO,EAAYjO,uCAAuCm0E,IAEhE,IAAI,EAAIlmE,EAAY9N,mBAAoB,CACzC,IAAIrC,GAAS,EAAImQ,EAAY5N,uBAAsB,EAAI4N,EAAY9N,oBACnE,GAAIrC,EAAQ,CACR,IAAI,QAAE+C,EAAO,QAAEC,GAAYhD,EAC3B,MAAO,uBAAuB+C,aAAmBC,cAAoBqzE,GACzE,CACA,MAAO,uBAAuBlmE,EAAY9M,wBAAwB8M,EAAY/M,4BAA4BizE,GAC9G,CAEI,MAAO,uBAAuBlmE,EAAY9M,wBAAwB8M,EAAY/M,4BAA4BizE,GAWtH,CACA,GAAKzkE,IAkBD,OAAI,EAAIzB,EAAY9N,mBACT,IAAG,EAAI8N,EAAY9N,qBAGnB,gBAAgB8N,EAAY9M,qBApBvC,IAAI,EAAI8M,EAAYjO,iBAChB,MAAO,IAAG,EAAIiO,EAAYjO,mBAEzB,IAAI,EAAIiO,EAAY9N,mBAAoB,CACzC,IAAIrC,GAAS,EAAImQ,EAAY5N,uBAAsB,EAAI4N,EAAY9N,oBACnE,GAAIrC,EAAQ,CACR,IAAI,QAAE+C,EAAO,QAAEC,GAAYhD,EAC3B,MAAO,uBAAuB+C,aAAmBC,GACrD,CACA,MAAO,uBAAuBmN,EAAY9M,wBAAwB8M,EAAY/M,iBAClF,CAEI,MAAO,uBAAuB+M,EAAY9M,wBAAwB8M,EAAY/M,iBAW1F,CAEA,SAAS2xB,EAAiCuhD,GACtC,IAAI7vE,EAAIC,EAAIC,EAAI0G,EAAIC,GACpB,EAAIzN,EAAMI,UAAU,mBAAoBq2E,EAAa,eAAgB1kE,KAChEA,KASkF,QAA9ElL,EAA4B,QAAtBD,EAAK4kC,WAAgC,IAAP5kC,OAAgB,EAASA,EAAG6hD,gBAA6B,IAAP5hD,OAAgB,EAASA,EAAG6hD,QACkB,QAApIj7C,EAAoF,QAA9ED,EAA4B,QAAtB1G,EAAK0kC,WAAgC,IAAP1kC,OAAgB,EAASA,EAAG2hD,gBAA6B,IAAPj7C,OAAgB,EAASA,EAAGk7C,cAA2B,IAAPj7C,GAAyBA,EAAGipE,iBAAiBD,IAG1L,EAAIhxE,EAAU0iD,sBAAsBsuB,IAZpC,EAAInmE,EAAYjO,iBAChBC,OAAOsD,KAAK6wE,EAAa,UAGzBn0E,OAAOsD,KAAK6wE,EAAa,QAWrC,CAIA,SAAS1sB,EAAcM,GACnB,IAEI,OADAA,EAAaA,EAAW1wC,QAAQ,MAAO,OAChCsgC,mBAAmBoQ,EAC9B,CACA,MAAO19C,GACH,OAAO09C,CACX,CACJ,CACA,SAASD,EAAoBE,GACzB,IAAIx0C,EAAS,CAAC,EACd,IAAKw0C,EAAYnpD,OACb,OAAO2U,EAEX,IACI9F,EAAGu6C,EAAOC,EAAWC,EADrBC,EAAoBJ,EAAYtoD,MAAM,KAE1C,IAAKgO,EAAI,EAAGA,EAAI06C,EAAkBvpD,OAAQ6O,IACtCu6C,EAAQG,EAAkB16C,GAAGhO,MAAM,KACnCwoD,EAAYT,EAAcQ,EAAM,IAChCE,EAAyB,MAAZF,EAAM,GAAa,KAAOR,EAAcQ,EAAM,IAC3Dz0C,EAAO00C,GAAaC,EAExB,OAAO30C,CACX,CACA,SAASwyC,EAAmBD,GACxBA,EAAeA,EAAa1uC,QAAQ,KAAM,IAC1C,IAAI7D,EAAS,CAAC,EACd,IAAKuyC,EAAalnD,OACd,OAAO2U,EAEX,GAAIuyC,EAAat3B,QAAQ,KAAO,GAAKs3B,EAAat3B,QAAQ,KAAO,EAE7D,OADAjb,EAAOg0C,MAAQC,EAAc1B,GACtBvyC,EAEX,IAAIk0C,EAAS3B,EAAat3B,QAAQ,KAClC,GAAIi5B,GAAU,EAAG,CACb,IAAIC,EAAY5B,EAAa6B,OAAO,EAAGF,GACvCl0C,EAAOg0C,MAAQC,EAAcE,GAC7B5B,EAAeA,EAAa6B,OAAOF,EAAS,EAChD,CACA,IAAIG,EAAeC,EAAoB/B,GACvC,IAAK,IAAIvgD,KAAKqiD,EACVr0C,EAAOhO,GAAKqiD,EAAariD,GAE7B,OAAOgO,CACX,CACA,IAAIsyC,EAAa,CAAC,EAClB,IACI,IAAIC,EAAetkD,SAASmqB,KAAKnX,WACjCqxC,EAAaE,EAAmBD,EACpC,CACA,MAAO17C,GAAK,CACZ,IAAI47C,EAAc,UAIlB,IAHmB,OAAfH,QAAsC,IAAfA,OAAwB,EAASA,EAAWI,oBACnED,EAAqD,QAAtC3hD,EAAKwhD,EAAWI,wBAAqC,IAAP5hD,EAAgBA,EAAK,WAElE,YAAhB2hD,EAA2B,CAC3B,MAAMjmD,EAASkpC,IACf+c,EAAuM,QAAxL/6C,EAAsI,QAAhI1G,EAAgF,QAA1ED,EAAgB,OAAXvE,QAA8B,IAAXA,OAAoB,EAASA,EAAOmmD,gBAA6B,IAAP5hD,OAAgB,EAASA,EAAG6hD,cAA2B,IAAP5hD,OAAgB,EAASA,EAAGkwB,gBAA6B,IAAPxpB,EAAgBA,EAAK,SACxO,CACA,SAASuE,IACL,IAAInL,EACJ,MAAuB,YAAhB2hD,MAAuD,QAAtB3hD,EAAK4kC,WAAgC,IAAP5kC,OAAgB,EAASA,EAAGolC,qBACtG,CAIA,SAASic,IACL,IAAIrhD,EACJ,MAAMkiD,KAA8C,QAAtBliD,EAAK4kC,WAAgC,IAAP5kC,OAAgB,EAASA,EAAGmiD,iBACxF,OAAQh3C,KAAa+2C,IAAsC,YAAhBP,CAC/C,CACA,SAAS1zB,EAAWI,EAAgBH,GAAU,EAAOC,GAEjD,IADA,EAAI/0B,EAAMI,UAAU,8CAA8CC,KAAKC,UAAU20B,iBAA8BH,sBAA4BC,KACvID,EACA,OAAOG,EACD,CAAEP,cAAe4G,EAAwBD,EAA0BpG,GAAkC,OAAjBF,QAA0C,IAAjBA,EAA0BA,EAAe,SACtJ,CAAEL,cAAe4G,OAAwBtzB,EAA4B,OAAjB+sB,QAA0C,IAAjBA,EAA0BA,EAAe,SAE3H,CACD,IAAIJ,EAAWM,EACT,GAAG5wB,EAAWX,0BAA0B+wB,EAAoBQ,KAC5D5wB,EAAWX,iBACjB,IAAI,EAAI+M,EAAQoqB,gBAAiB,CAC7B,IAAI87C,EAA2B1hD,EACzBmG,EAA0BnG,EAAe1gB,MAAO0gB,EAAexd,UAC/DnH,EAAY1M,mBAClB,MAAO,CAAE8wB,cAAeiiD,EAA0BhiD,SAAUA,EAChE,CAEI,MAAO,CAAED,cAAeiH,EAAiBhH,GAAWA,SAAUA,EAEtE,CACJ,C,qCC1YYn1B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0Q,EAAc9Q,EAAQ,OACtBwN,EAASxN,EAAQ,OACjBiR,EAAUjR,EAAQ,OAClB2qB,EAAsB3qB,EAAQ,OAC9B0qB,EAAoB1qB,EAAQ,OAClC,MAAMgxC,EACFvjC,WAAAA,CAAY0S,EAAM/e,EAAM+gB,EAAQzQ,GAC5BpM,KAAKlE,KAAO,QACZkE,KAAK/D,UAAY4e,EAAK5e,UACtB+D,KAAKoM,OAASA,EACdpM,KAAK6c,OAASA,EACd7c,KAAKuI,QAAUvI,KAAK8iB,kBACpB9iB,KAAKslB,cAAgBtlB,KAAKulB,sBAC1BvlB,KAAKlE,KAAOA,CAChB,CACA+rB,eAAAA,CAAgB5rB,GACZ+D,KAAK/D,UAAYtB,OAAO8hB,OAAOzc,KAAK/D,UAAWA,EACnD,CACA8gB,eAAAA,GACI,OAAO/c,KAAKonB,aAChB,CACA3d,OAAAA,CAAQ3J,GACJ,OAAOmH,EAAUjH,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIkI,EAAO5M,UAAU,iCAAiC,EAAI4M,EAAOuG,mBAAmB3O,KACpF,EAAIoI,EAAO5M,UAAU,6BAA8B0E,KAAK/D,YACnD+D,KAAK6c,OAAOsK,0BAA4BnnB,KAAK/D,UAAUW,QAAQuC,SAASW,EAAKoR,QAC9E,OAAOlR,KAAK6c,OAAOpT,QAAQ3J,GAG3B,MAAM,IAAIoI,EAAOvI,gBAAgBuI,EAAOtI,wBAAwBwf,qBAAsB,yBAE9F,GACJ,CACAK,eAAAA,CAAgBlX,EAASmX,GAEhB1f,KAAKslB,cAAc/c,IACpBvI,KAAK2nB,gBAAgBpf,EAASmX,GAElC1f,KAAKuI,QAAUA,EACfvI,KAAKoM,OAAOsE,KAAKlF,EAAYwW,gBAAgBC,sBAAuB,GAAGjiB,KAAKlE,QAAQyM,IACxF,CACAua,eAAAA,GACI,GAAI9iB,KAAKuI,QACL,OAAOvI,KAAKuI,QAChB,GAAIvI,KAAK/D,UAAU8hB,aACf,OAAO/d,KAAK/D,UAAU8hB,aAC1B,MAAMxV,EAAUvI,KAAK/D,UAAUc,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAI4J,MAAM,qBACpB,OAAO5J,EAAQrL,MAAM,KAAK,EAC9B,CAEAkqB,WAAAA,GACI,MAAMrrB,EAAWiE,KAAK/D,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIwkB,IAAIxkB,EAENmC,QAAQ0K,GAAYA,EAAQ1L,MAAM,KAAK,KAAO8C,KAAKuI,QAAQ0J,aAE3D6L,KAAKlV,GAAYA,EAAQ1L,MAAM,KAAK,OAPlC,EASf,CACAqoB,mBAAAA,GACI,MAAMwC,EAAO,CAAC,EASd,OARA/nB,KAAK/D,UAAUc,OAAOD,SAASK,IAC3B,MAAM0pB,GAAgB,EAAIlb,EAAQqY,YAAY7mB,GACxC+qB,GAAY,EAAIvc,EAAQoY,WAAW5mB,EAAO6C,KAAK/D,WACrD,IAAIksB,EAAenoB,KAAK8nB,mBAAmBjB,EAAeqB,GACtDC,IACAJ,EAAKlB,GAAiBsB,EAC1B,IAEGJ,CACX,CACAR,eAAAA,GACI,MAAMpqB,EAAQ,GAAG6C,KAAKuI,UAChBwf,EAAO/nB,KAAKslB,cAAcnoB,GAChC,GAAoB,qBAAT4qB,EACP,MAAM,IAAI5V,MAAM,yBAAyBhV,eAE7C,OAAO4qB,CACX,CACAJ,eAAAA,CAAgBpf,EAASmX,GACrB,MAAMqI,EAAO/nB,KAAK8nB,mBAAmBvf,EAASmX,GAC1CqI,IACA/nB,KAAKslB,cAAc/c,GAAWwf,EAEtC,CACAD,kBAAAA,CAAmBvf,EAASmX,GAExB,MAAM4E,EAAM5E,EACZ,GAAK4E,EAIA,CACD,MAAMyD,EAAO,IAAI3C,EAAkB4C,gBAAgB,IAAI3C,EAAoB4C,kBAAkB3D,GAAK,EAAI3Y,EAAQuZ,WAAW,yBACzH,OAAO6C,CACX,CACJ,CACAzE,gBAAAA,CAAiBxjB,GACb,OAAO,CACX,EAEJjF,EAAAA,WAAkB6wC,C,mCClHlB,SAASomC,IACL,MAAuD,qBAA5CC,EAA2B,YAI1C,CACA,SAASA,EAA2B91E,GAChC,MAAM+1E,EAAiBA,CAAC5pE,EAAUnM,KAC9B,MAAO01B,KAAa4rB,GAAQthD,EAAUiB,MAAM,KACtCw2B,EAAYtrB,EAASupB,GAC3B,GAAI+B,EACA,OAAoB,IAAhB6pB,EAAKlhD,OACEq3B,EACJs+C,EAAet+C,EAAW6pB,EAAKlgD,KAAK,KAC/C,EAEJ,GAAsB,qBAAXG,OACP,OAAOw0E,EAAex0E,OAAQvB,EACtC,CArBAtB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ48C,WAAa58C,EAAQgoD,WAAahoD,EAAQghC,WAAahhC,EAAQo3E,aAAep3E,EAAQqwC,cAAgBrwC,EAAQigD,kBAAe,EACrIjgD,EAAQi3E,uBAAyBA,EAoBjCj3E,EAAQigD,aAAe,CACnB,gBACA,uBACA,sBACA,0BACA,oBACA,6BACA,sBACA,eACA,eAEJjgD,EAAQqwC,cAAgB,CACpB,yBACA,qBACA,6BACA,iCAEJrwC,EAAQo3E,aAAe,CACnB,oBACA,wBACA,kCAEJp3E,EAAQghC,WAAa,CACjB,uBAEJhhC,EAAQgoD,WAAa,CACjB,kBACA,0BACA,2BACA,sCAEJhoD,EAAQ48C,WAAa,CACjB,kBACA,gBACA,WACA,sBACA,sBACA,uBACA,gB,qCC5DJ,IAAI13C,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAtF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkS,mBAAgB,EACxB,MAAMirB,EAAcj4B,EAAgBrF,EAAQ,QACtCiR,EAAUjR,EAAQ,OACxB,MAAMqS,EACF5E,WAAAA,CAAYoG,OAAUrL,GAClBlD,KAAKkyE,YAAc,GACnBlyE,KAAKmyE,eAAiB5jE,EAAUvO,KAAKoyE,wBAAwB7jE,GAAWvO,KAAKqyE,eACjF,CACAA,aAAAA,GACI,OAAOr6C,EAAY91B,QAAQowE,IAAI/jE,SACnC,CACA6jE,uBAAAA,CAAwB7jE,GACpB,MAAO,CACHrF,WAAW,EAAIyC,EAAQ0D,gBAAgBd,EAAQrF,WAC/CgG,WAAW,EAAIvD,EAAQ0D,gBAAgBd,EAAQW,WAEvD,CACAqjE,WAAAA,GACI,OAAOv6C,EAAY91B,QAAQo2B,YAAYt4B,KAAKkyE,YAChD,CACA,WAAI3jE,GACA,OAAOvO,KAAKmyE,cAChB,CAGAx7D,OAAAA,CAAQpF,EAASihE,GACb,MAAM/nC,GAAiB,IAAIC,aAAcC,OAAOp5B,GAC1C7G,EAAQ1K,KAAKuyE,cACbE,EAAYz6C,EAAY91B,QAAQowE,IAAI7nC,EAAgB//B,GAAO,EAAIiB,EAAQ0D,gBAAgBmjE,GAAoBxyE,KAAKuO,QAAQW,WAC9H,IAAIwjE,GAAa,EAAI/mE,EAAQ0qB,mBAAmB3rB,EAAO+nE,GACvD,IAAIE,GAAY,EAAIhnE,EAAQsD,aAAayjE,GACrCE,GAAgB,IAAIloC,aAAcC,OAAOgoC,GAC7C,OAAO,EAAIhnE,EAAQwqB,cAAcy8C,GAAe,EACpD,CAIAxgC,aAAAA,CAAc7gC,EAASihE,GACnB,MAAM/nC,GAAiB,IAAIC,aAAcC,OAAOp5B,GAC1C7G,EAAQ1K,KAAKuyE,cACbE,EAAYz6C,EAAY91B,QAAQowE,IAAI7nC,EAAgB//B,GAAO,EAAIiB,EAAQ0D,gBAAgBmjE,GAAoBxyE,KAAKuO,QAAQW,WAC9H,IAAIwjE,GAAa,EAAI/mE,EAAQ0qB,mBAAmB3rB,EAAO+nE,GACvD,OAAO,EAAI9mE,EAAQwqB,cAAcu8C,GAAY,EACjD,CAGA38D,OAAAA,CAAQxE,EAASshE,GACb,IAAIjiC,GAAgB,EAAIjlC,EAAQuqB,cAAc3kB,GAAS,GACnDuhE,EAAmBliC,EAAc6E,eACrC,MAAO/qC,EAAOqoE,IAAmB,EAAIpnE,EAAQyqB,oBAAoB08C,EAAkB9yE,KAAKkyE,aAClFc,EAAYh7C,EAAY91B,QAAQowE,IAAIxxE,KAAKiyE,EAAiBroE,GAAO,EAAIiB,EAAQ0D,gBAAgBwjE,GAAkB7yE,KAAKuO,QAAQW,WAClI,IAAK8jE,EACD,MAAM,IAAI7gE,MAAM,iCAAiCZ,EAAQU,gCAAgC4gE,EAAgB5gE,kCAAiC,EAAItG,EAAQsD,aAAajP,KAAKuO,QAAQrF,qCAAoC,EAAIyC,EAAQsD,aAAajP,KAAKuO,QAAQW,cAE9P,OAAO,IAAIm9D,aAAcE,OAAOyG,EACpC,CAGAtiC,aAAAA,CAAcn/B,EAASshE,GACnB,IAAIjiC,GAAgB,EAAIjlC,EAAQuqB,cAAc3kB,GAAS,GACnDuhE,GAAmB,EAAInnE,EAAQ0D,gBAAgBuhC,EAAc3+B,YACjE,MAAOvH,EAAOqoE,IAAmB,EAAIpnE,EAAQyqB,oBAAoB08C,EAAkB9yE,KAAKkyE,aAClFc,EAAYh7C,EAAY91B,QAAQowE,IAAIxxE,KAAKiyE,EAAiBroE,GAAO,EAAIiB,EAAQ0D,gBAAgBwjE,GAAkB7yE,KAAKuO,QAAQW,WAClI,IAAK8jE,EACD,MAAM,IAAI7gE,MAAM,iCAAiCZ,EAAQU,gCAAgC4gE,EAAgB5gE,kCAAiC,EAAItG,EAAQsD,aAAajP,KAAKuO,QAAQrF,qCAAoC,EAAIyC,EAAQsD,aAAajP,KAAKuO,QAAQW,cAE9P,OAAO,IAAIm9D,aAAcE,OAAOyG,EACpC,CACApgE,gBAAAA,GACI,MAAO,CACH1J,WAAW,EAAIyC,EAAQsD,aAAajP,KAAKuO,QAAQrF,WACjDgG,WAAW,EAAIvD,EAAQsD,aAAajP,KAAKuO,QAAQW,WAEzD,EAEJrU,EAAQkS,cAAgBA,C,qCChFZrS,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8jC,cAAgBA,EACxB9jC,EAAQ6jC,YAAcA,EACtB7jC,EAAQo4E,MAAQA,EAChBp4E,EAAQq4E,YAAcA,EACtB,MAAMC,EAAWz4E,EAAQ,MACnBQ,EAAQR,EAAQ,OACtB,SAASikC,EAAcy0C,EAAQC,EAAW,QACtC,MAAMC,EAAOC,EAAMF,GAEnB,IADA,EAAIn4E,EAAMI,UAAU,yBACfg4E,EACD,MAAM,IAAInhE,MAAM,yBAAyBkhE,MAE7C,OAAOC,EAAKlH,QAAQG,OAAO,GAAG+G,EAAKh3C,SAAS82C,IAChD,CACA,SAAS10C,EAAYiW,EAAO0+B,EAAW,QACnC,MAAMC,EAAOC,EAAMF,GAEnB,IADA,EAAIn4E,EAAMI,UAAU,uBACfg4E,EACD,MAAM,IAAInhE,MAAM,yBAAyBkhE,MAE7C,OAAOC,EAAKpN,QAAQv7B,OAAOgK,GAAO8D,UAAU,EAChD,CACA,SAASw6B,EAAMthC,EAAO,GAClB,OAAO,IAAIjc,WAAWic,EAC1B,CACA,SAASuhC,EAAYvhC,EAAO,GACxB,OAAO,IAAIjc,WAAWic,EAC1B,CACA,SAAS6hC,EAAY13E,EAAMwgC,EAAQqO,EAAQ4hC,GACvC,MAAO,CACHzwE,OACAwgC,SACA4pC,QAAS,CACLpqE,OACAwgC,SACAqO,UAEJyhC,QAAS,CAAEG,UAEnB,CACA,MAAM6G,EAASI,EAAY,OAAQ,KAAKC,IACpC,MAAMrH,EAAU,IAAIC,YAAY,QAChC,MAAO,IAAMD,EAAQG,OAAOkH,EAAI,IACjC7oD,IACC,MAAMs7C,EAAU,IAAIx7B,YACpB,OAAOw7B,EAAQv7B,OAAO/f,EAAI6tB,UAAU,GAAG,IAErCi7B,EAAQF,EAAY,QAAS,KAAKC,IACpC,IAAIp4E,EAAS,IACb,IAAK,IAAI6P,EAAI,EAAGA,EAAIuoE,EAAIp3E,OAAQ6O,IAAK,CACjC,IAAIyoE,EAASF,EAAIvoE,GACbyoE,GAAU1tD,OAAO4P,aAAa89C,KAC9Bt4E,GAAU4qB,OAAO4P,aAAa89C,GAEtC,CACA,OAAOt4E,CAAM,IACduvB,IACCA,EAAMA,EAAI6tB,UAAU,GACpB,MAAMg7B,EAAMP,EAAYtoD,EAAIvuB,QAC5B,IAAK,IAAI6O,EAAI,EAAGA,EAAI0f,EAAIvuB,OAAQ6O,IAC5BuoE,EAAIvoE,GAAK0f,EAAIE,WAAW5f,GAE5B,OAAOuoE,CAAG,IAERF,EAAQ54E,OAAO8hB,OAAO,CAAEm3D,KAAMR,EAAQ,QAASA,EAAQvoD,IAAKsoD,EAASU,MAAMC,OAAQC,OAAQL,EAAOA,MAAOA,EAAOnQ,OAAQmQ,GAASP,EAASU,M,wDClEpIn5E,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIuM,EAAajH,MAAQA,KAAKiH,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMxM,GAAS,OAAOA,aAAiBsM,EAAItM,EAAQ,IAAIsM,GAAE,SAAUG,GAAWA,EAAQzM,EAAQ,GAAI,CAC3G,OAAO,IAAKsM,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU5M,GAAS,IAAM6M,EAAKN,EAAUO,KAAK9M,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAShN,GAAS,IAAM6M,EAAKN,EAAU,SAASvM,GAAS,CAAE,MAAO+M,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKtM,GAAUA,EAAO0M,KAAOR,EAAQlM,EAAOP,OAASwM,EAAMjM,EAAOP,OAAOkN,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6wC,mBAAgB,EACxB,MAAMnsC,EAAa7E,EAAQ,OACrBiR,EAAUjR,EAAQ,OAClB0/B,EAAgB1/B,EAAQ,OACxBo6B,EAAUp6B,EAAQ,OAClBugD,EAAgBvgD,EAAQ,OACxBs5E,EAAiBr5E,OAAOg0E,OAAO,CACjC,MACA,WACA,aAEEsF,EAAsB,IAAI3zC,IAChC2zC,EAAoBtsC,IAAI,YAAa,WACrCssC,EAAoBtsC,IAAI,iBAAkB,oBAC1CssC,EAAoBtsC,IAAI,iBAAkB,oBAC1C,MAAM+D,EACFx3B,IAAAA,CAAKzK,GACD,OAAOxC,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAI2L,EAAQrQ,UAAU,+BAA+B,EAAIqQ,EAAQ8C,mBAAmBhF,UAC9EzJ,KAAKkS,iBACX,IAAIzV,QAAgBe,OAAO6qC,UAAUC,MAAM7rC,UACvCy3E,EAAgBl0E,KAAKm0E,+BAA+B1qE,EAAQlB,SAEhE,IADA,EAAIoD,EAAQrQ,UAAU,gDAAiDmB,EAAS,QAASy3E,IACnFz3E,IAAWy3E,GAAiBz3E,EAAQ6F,gBAAkB4xE,EAAc5xE,cACtE,MAAM,IAAI/C,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,sCAAsC83D,MAEjI,MAAMhjE,EAASzH,EAAQyH,OACvB,IAAI7V,EACJ,OAAQ6V,GACJ,IAAK,oBAEG,GAAIzH,EAAQyd,aAAc,CACtB,IAAI3V,QAAgB/T,OAAO6qC,UAAUC,MAAMl/B,YAAYK,EAAQyd,cAO/D,OANA7rB,EAAS,CACL6V,OAAQzH,EAAQyH,OAChB7V,OAAQkW,EAAQ0X,UAChBoM,aAAc9jB,IAElB,EAAI5F,EAAQrQ,UAAU,8BAA8B,EAAIqQ,EAAQ8C,mBAAmBpT,IAC5EA,CACX,CAEI,MAAM,IAAIkE,EAAWI,gBAAgBJ,EAAWK,wBAAwBwc,cAAe,2BAA2BlL,MAI9H,IAAK,wBACD,EACI,EAAIvF,EAAQrQ,UAAU,6BAA8B4V,GACpD,IAAIK,QAAgB/T,OAAO6qC,UAAUC,MAAMvf,gBAAgBtf,EAAQuH,QAMnE,OALA3V,EAAS,CACL6V,OAAQzH,EAAQyH,OAChB7V,OAAQkW,IAEZ,EAAI5F,EAAQrQ,UAAU,8BAA8B,EAAIqQ,EAAQ8C,mBAAmBpT,IAC5EA,CACX,CAEJ,IAAK,iCACD,EACI,EAAIsQ,EAAQrQ,UAAU,6BAA8B4V,GACpD,IAAIK,QAAgB/T,OAAO6qC,UAAUC,MAAMnf,yBAAyB1f,EAAQuH,QAM5E,OALA3V,EAAS,CACL6V,OAAQzH,EAAQyH,OAChB7V,OAAQkW,EAAQ6X,OAEpB,EAAIzd,EAAQrQ,UAAU,8BAA8B,EAAIqQ,EAAQ8C,mBAAmBpT,IAC5EA,CACX,CAEJ,QACI,MAAM,IAAIkE,EAAWI,gBAAgBJ,EAAWK,wBAAwBwf,qBAAsB,aAAalO,MAEvH,CACA,MAAOtH,GAEH,MADA,EAAI+B,EAAQrQ,UAAU,4BAA6BsO,GAC7CA,CACV,CACJ,GACJ,CACAuqE,8BAAAA,CAA+B5rE,GAC3B,IAAIg4D,EAAYh4D,EAMhB,OALA0rE,EAAoBn3E,SAAQ,CAAChC,EAAO+c,KAC5BtP,EAAQpJ,SAAS0Y,KACjB0oD,EAAYzlE,EAChB,IAEGylE,CACX,CACAnuD,UAAAA,GACA,CACAF,cAAAA,GACI,OAAI,EAAI4iB,EAAQU,UAAU,UACfx1B,KAAKsS,UAET9K,QAAQD,SACnB,CACAozB,oBAAAA,CAAqBC,EAASC,EAAeC,EAAaC,EAAwBC,EAA8BtY,GAC5G,OAAOzb,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,IAAIi7B,EAAe,GACnBF,EAAuBj+B,SAAQjB,IACvBA,EAAKI,YAAcsD,EAAWwH,mBAC9Bk0B,EAAa3+B,QAAQT,EAAKkB,OAC9B,IAEJ,IAGImM,EAHAvM,EAAY,GACZE,EAAQ,CAAC,EAGb,IAFA,EAAI8O,EAAQrQ,UAAU,kDAAmDC,KAAKC,UAAUy/B,MAEnF,EAAInG,EAAQU,UAAU,WAAayF,GAAgBA,EAAa5+B,OAAS,EAAG,CAC7E,IAAIywE,QAAqBtvE,OAAO6qC,UAAUC,MAAMh2B,UAChDpJ,EAAY4jE,EAAa5jE,SAC7B,CAaA,GAZA+xB,EAAan+B,SAASo+B,IAClB,IAAIC,EAAkBH,EAA6B5+B,QAAQR,MAAMoB,GACrDg3E,EAAe70E,SAASnC,EAAYuL,UAAqC,MAAzBvL,EAAYo+B,UAAsBp+B,EAAYq+B,mBAAqBH,IAE3HC,IACAx+B,EAAUL,KAAK4+B,EAAW,IAAMC,EAAgB/+B,SAChDS,EAAMq+B,GAAY,CACdhyB,UAAWiyB,EAAgBjyB,UAAYiyB,EAAgBjyB,UAAYA,GAE3E,KAEJ,EAAIyC,EAAQrQ,UAAU,+CAAgDC,KAAKC,UAAUmB,IACjFA,GAAaA,EAAUN,OAAS,EAAG,CACnC,IAAIu/B,EAAoB,CACpB3/B,UAAWsD,EAAWwH,kBACtBpK,UAAWA,EACXC,QAAS,IAAIw9B,EAAc63C,cAC3Bp1E,MAAOA,GAEX,OAAO++B,CACX,CAEJ,GACJ,CACAtpB,OAAAA,GACI,OAAOrL,EAAUjH,UAAM,OAAQ,GAAQ,YACnC,OAAOxC,OAAO6qC,UAAUC,MAAMh2B,SAClC,GACJ,CACAwpB,aAAAA,GACI,OAAO97B,KAAKsS,SAChB,CACA+W,yBAAAA,CAA0BoF,GACtBjxB,OAAO6qC,UAAUC,MAAMhf,iBAAiB+K,IACpClR,QAAQpX,IAAI,6CAA8CiC,KAAKC,MAAOgtC,EAAcpjC,IAAKtc,KAAKC,UAAU64B,IACpGA,GACA5F,GACJ,GAER,CACAlP,cAAAA,GACA,EAEJ1kB,EAAQ6wC,cAAgBA,C,GCvKpB0oC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBpxE,IAAjBqxE,EACH,OAAOA,EAAa15E,QAGrB,IAAI25E,EAASJ,EAAyBE,GAAY,CACjD3jE,GAAI2jE,EACJG,QAAQ,EACR55E,QAAS,CAAC,GAUX,OANA65E,EAAoBJ,GAAUzwE,KAAK2wE,EAAO35E,QAAS25E,EAAQA,EAAO35E,QAASw5E,GAG3EG,EAAOC,QAAS,EAGTD,EAAO35E,OACf,CAGAw5E,EAAoBtxE,EAAI2xE,E,WC5BxBL,EAAoBM,KAAO,CAAC,C,eCA5B,IAAIC,EAAW,GACfP,EAAoBQ,EAAI,SAASx5E,EAAQy5E,EAAUxrB,EAAIyrB,GACtD,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAAS/pE,EAAI,EAAGA,EAAI0pE,EAASv4E,OAAQ6O,IAAK,CACrC4pE,EAAWF,EAAS1pE,GAAG,GACvBo+C,EAAKsrB,EAAS1pE,GAAG,GACjB6pE,EAAWH,EAAS1pE,GAAG,GAE3B,IAJA,IAGIxD,GAAY,EACPwtE,EAAI,EAAGA,EAAIJ,EAASz4E,OAAQ64E,MACpB,EAAXH,GAAsBC,GAAgBD,IAAap6E,OAAO2hB,KAAK+3D,EAAoBQ,GAAGznC,OAAM,SAASv1B,GAAO,OAAOw8D,EAAoBQ,EAAEh9D,GAAKi9D,EAASI,GAAK,IAChKJ,EAAS92B,OAAOk3B,IAAK,IAErBxtE,GAAY,EACTqtE,EAAWC,IAAcA,EAAeD,IAG7C,GAAGrtE,EAAW,CACbktE,EAAS52B,OAAO9yC,IAAK,GACrB,IAAIiqE,EAAI7rB,SACEpmD,IAANiyE,IAAiB95E,EAAS85E,EAC/B,CACD,CACA,OAAO95E,CArBP,CAJC05E,EAAWA,GAAY,EACvB,IAAI,IAAI7pE,EAAI0pE,EAASv4E,OAAQ6O,EAAI,GAAK0pE,EAAS1pE,EAAI,GAAG,GAAK6pE,EAAU7pE,IAAK0pE,EAAS1pE,GAAK0pE,EAAS1pE,EAAI,GACrG0pE,EAAS1pE,GAAK,CAAC4pE,EAAUxrB,EAAIyrB,EAwB/B,C,eC5BAV,EAAoBe,EAAI,SAASZ,GAChC,IAAIa,EAASb,GAAUA,EAAOt0E,WAC7B,WAAa,OAAOs0E,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAH,EAAoBiB,EAAED,EAAQ,CAAE7zE,EAAG6zE,IAC5BA,CACR,C,eCPA,IACIE,EADAC,EAAW76E,OAAOq7C,eAAiB,SAASD,GAAO,OAAOp7C,OAAOq7C,eAAeD,EAAM,EAAI,SAASA,GAAO,OAAOA,EAAI0/B,SAAW,EAQpIpB,EAAoBroD,EAAI,SAASlxB,EAAO46E,GAEvC,GADU,EAAPA,IAAU56E,EAAQkF,KAAKlF,IAChB,EAAP46E,EAAU,OAAO56E,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP46E,GAAa56E,EAAMoF,WAAY,OAAOpF,EAC1C,GAAW,GAAP46E,GAAoC,oBAAf56E,EAAMkN,KAAqB,OAAOlN,CAC5D,CACA,IAAI+oC,EAAKlpC,OAAOkI,OAAO,MACvBwxE,EAAoBc,EAAEtxC,GACtB,IAAI8xC,EAAM,CAAC,EACXJ,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAII,EAAiB,EAAPF,GAAY56E,EAAyB,iBAAX86E,KAAyBL,EAAetpD,QAAQ2pD,GAAUA,EAAUJ,EAASI,GACxHj7E,OAAOqQ,oBAAoB4qE,GAAS94E,SAAQ,SAAS+a,GAAO89D,EAAI99D,GAAO,WAAa,OAAO/c,EAAM+c,EAAM,CAAG,IAI3G,OAFA89D,EAAI,WAAa,WAAa,OAAO76E,CAAO,EAC5Cu5E,EAAoBiB,EAAEzxC,EAAI8xC,GACnB9xC,CACR,C,eCxBAwwC,EAAoBiB,EAAI,SAASz6E,EAASg7E,GACzC,IAAI,IAAIh+D,KAAOg+D,EACXxB,EAAoBvxE,EAAE+yE,EAAYh+D,KAASw8D,EAAoBvxE,EAAEjI,EAASgd,IAC5Eld,OAAOC,eAAeC,EAASgd,EAAK,CAAEtU,YAAY,EAAMC,IAAKqyE,EAAWh+D,IAG3E,C,eCPAw8D,EAAoByB,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO/1E,MAAQ,IAAIg2E,SAAS,cAAb,EAChB,CAAE,MAAOnuE,GACR,GAAsB,kBAAXrK,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB62E,EAAoBvxE,EAAI,SAASizC,EAAKkgC,GAAQ,OAAOt7E,OAAOgJ,UAAUC,eAAeC,KAAKkyC,EAAKkgC,EAAO,C,eCCtG5B,EAAoBc,EAAI,SAASt6E,GACX,qBAAXq7E,QAA0BA,OAAOC,aAC1Cx7E,OAAOC,eAAeC,EAASq7E,OAAOC,YAAa,CAAEr7E,MAAO,WAE7DH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,GACvD,C,eCNAu5E,EAAoB+B,IAAM,SAAS5B,GAGlC,OAFAA,EAAO6B,MAAQ,GACV7B,EAAO8B,WAAU9B,EAAO8B,SAAW,IACjC9B,CACR,C,eCCA,IAAI+B,EAAkB,CACrB,IAAK,GAaNlC,EAAoBQ,EAAEK,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4Bx6E,GAC/D,IAKIo4E,EAAUkC,EALV1B,EAAW54E,EAAK,GAChBy6E,EAAcz6E,EAAK,GACnB06E,EAAU16E,EAAK,GAGIgP,EAAI,EAC3B,GAAG4pE,EAASzK,MAAK,SAAS15D,GAAM,OAA+B,IAAxB4lE,EAAgB5lE,EAAW,IAAI,CACrE,IAAI2jE,KAAYqC,EACZtC,EAAoBvxE,EAAE6zE,EAAarC,KACrCD,EAAoBtxE,EAAEuxE,GAAYqC,EAAYrC,IAGhD,GAAGsC,EAAS,IAAIv7E,EAASu7E,EAAQvC,EAClC,CAEA,IADGqC,GAA4BA,EAA2Bx6E,GACrDgP,EAAI4pE,EAASz4E,OAAQ6O,IACzBsrE,EAAU1B,EAAS5pE,GAChBmpE,EAAoBvxE,EAAEyzE,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOnC,EAAoBQ,EAAEx5E,EAC9B,EAEIw7E,EAAqBhhC,KAAK,8BAAgCA,KAAK,+BAAiC,GACpGghC,EAAmB/5E,QAAQ25E,EAAqB5iE,KAAK,KAAM,IAC3DgjE,EAAmBv6E,KAAOm6E,EAAqB5iE,KAAK,KAAMgjE,EAAmBv6E,KAAKuX,KAAKgjE,G,IC/CvF,IAAIC,EAAsBzC,EAAoBQ,OAAE3xE,EAAW,CAAC,MAAM,WAAa,OAAOmxE,EAAoB,MAAQ,IAClHyC,EAAsBzC,EAAoBQ,EAAEiC,E","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/inject/types/index.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/types/StandardWallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/baseAptosWalletAdapter.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/aptosThirdpartInjectProvider.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/aptosWalletAdapter.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/martainWalletAdapter.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/suiStandardProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/connector/appwalletConnector.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connector/InjectConnector.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/connector/wsConnector.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/petraWalletAdapter.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwalletInjectConnector.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/aptosStandardProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/connector/thirdpartInjectConnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwalletConnector.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/inject/types/IInjectProvider.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwalletInjectTonsdkConnector.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosNetwork = exports.UserResponseStatus = void 0;\nexports.getArgs = getArgs;\nconst protocol_1 = require(\"../../../protocol\");\nvar UserResponseStatus;\n(function (UserResponseStatus) {\n    UserResponseStatus[\"APPROVED\"] = \"Approved\";\n    UserResponseStatus[\"REJECTED\"] = \"Rejected\";\n})(UserResponseStatus || (exports.UserResponseStatus = UserResponseStatus = {}));\nfunction getArgs(response) {\n    if (typeof response === 'object' && response !== null && 'status' in response) {\n        if (response.status === UserResponseStatus.REJECTED) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n        }\n        return response.args;\n    }\n    return response;\n}\nvar AptosNetwork;\n(function (AptosNetwork) {\n    AptosNetwork[\"MAINNET\"] = \"mainnet\";\n    AptosNetwork[\"TESTNET\"] = \"testnet\";\n    AptosNetwork[\"DEVNET\"] = \"devnet\";\n})(AptosNetwork || (exports.AptosNetwork = AptosNetwork = {}));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./StandardWallet\"), exports);\n__exportStar(require(\"./IInjectProvider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThirdpartInjectConnector = exports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.AppwalletConnector = void 0;\nvar appwalletConnector_1 = require(\"./appwalletConnector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwalletConnector_1.AppwalletConnector; } });\n__exportStar(require(\"./iconnector\"), exports);\nvar InjectConnector_1 = require(\"./InjectConnector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return InjectConnector_1.InjectConnector; } });\nvar tgwalletConnector_1 = require(\"./tgwalletConnector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwalletConnector_1.TgwalletConnector; } });\nvar wsConnector_1 = require(\"./wsConnector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return wsConnector_1.WsConnector; } });\nvar okxwalletInjectConnector_1 = require(\"./okxwalletInjectConnector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwalletInjectConnector_1.OkxwalletInjectConnector; } });\nvar okxwalletInjectTonsdkConnector_1 = require(\"./okxwalletInjectTonsdkConnector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwalletInjectTonsdkConnector_1.OkxwalletInjectTonsdkConnector; } });\nvar thirdpartInjectConnector_1 = require(\"./thirdpartInjectConnector\");\nObject.defineProperty(exports, \"ThirdpartInjectConnector\", { enumerable: true, get: function () { return thirdpartInjectConnector_1.ThirdpartInjectConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    tryToReconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.checkStorage();\n        });\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.connected())\n                return;\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    if (!this.connected()) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n                    }\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    // let cleanSession = e.code !== OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR\n                    yield this.cleanup(false);\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.tryToReconnect();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, arguments, void 0, function* (cleanSession = true) {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            if (cleanSession) {\n                this.persist(\"connectSession\", undefined);\n            }\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n    getEngine() {\n        return this.client.engine;\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAptosWalletAdapter = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass BaseAptosWalletAdapter extends eventemitter3_1.EventEmitter {\n    get connected() {\n        return !!this.publicAccount.publicKey;\n    }\n}\nexports.BaseAptosWalletAdapter = BaseAptosWalletAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosThirdpartInjectProvider = void 0;\nconst protocol_1 = require(\"../../../protocol\");\nconst walletAdapter_1 = require(\"./walletAdapter\");\nconst utils_1 = require(\"../../../utils\");\nconst misc_1 = require(\"./misc\");\nclass AptosThirdpartInjectProvider {\n    constructor(walletAdapter) {\n        this.walletAdapter = walletAdapter;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.walletAdapter.disconnect();\n        });\n    }\n    getVersion() {\n        return this.walletAdapter.version;\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.walletAdapter.connect();\n            let publicAccount = this.walletAdapter.publicAccount;\n            let address = publicAccount.address;\n            let publicKey = publicAccount.publicKey.toString();\n            let extra = {};\n            extra[protocol_1.APTOS_CHAINS.MAINNET] = { publicKey: publicKey };\n            return {\n                namespace: protocol_1.NameSpaceKeyAptos,\n                addresses: [`${protocol_1.APTOS_CHAINS.MAINNET}:${address}`],\n                methods: [],\n                extra: extra\n            };\n        });\n    }\n    supportChains(chains) {\n        if (this.walletAdapter.readyState !== walletAdapter_1.WalletReadyState.Installed) {\n            return false;\n        }\n        if (chains.length === 1 && chains[0] === protocol_1.APTOS_CHAINS.MAINNET) {\n            return true;\n        }\n        return false;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                try {\n                    (0, utils_1.logDebug)(\"AptosStandardProvider send request:\", JSON.stringify(request));\n                }\n                catch (e) {\n                }\n                this.confirmNetwrok(request.chainId);\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.walletAdapter) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"aptos_signTransaction\":\n                            let injectSignResult = yield this.walletAdapter.signTransaction(request.params);\n                            result = {\n                                method: \"aptos_signTransaction\",\n                                result: injectSignResult\n                            };\n                            break;\n                        case \"aptos_signMessage\":\n                            let signMessageResult = yield this.walletAdapter.signMessage(originalRarams);\n                            if (typeof signMessageResult === 'object' && \"signature\" in signMessageResult) {\n                                signMessageResult = signMessageResult.signature;\n                            }\n                            result = {\n                                method: \"aptos_signMessage\",\n                                result: signMessageResult\n                            };\n                            break;\n                        case \"aptos_signAndSubmitTransaction\":\n                            let transactionResult = yield this.walletAdapter.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: \"aptos_signAndSubmitTransaction\",\n                                result: transactionResult.hash\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"aptosProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    removeListener() {\n    }\n    addAccountChangedListener(listener) {\n        this.walletAdapter.onAccountChange((account) => {\n            listener === null || listener === void 0 ? void 0 : listener(account === null || account === void 0 ? void 0 : account.address);\n        });\n    }\n    confirmNetwrok(chainid) {\n        var _a;\n        if (chainid !== utils_1.chainName2IdMap.get(protocol_1.APTOS_CHAINS.MAINNET)) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n        }\n        let walletNetwork = this.walletAdapter.network;\n        if (((_a = walletNetwork.name) === null || _a === void 0 ? void 0 : _a.toLowerCase()) == misc_1.AptosNetwork.MAINNET) {\n            return;\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n    }\n}\nexports.AptosThirdpartInjectProvider = AptosThirdpartInjectProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECTOR_TYPE = exports.STANDARD_INJECT_WALLET = exports.OTHER_INJECT_WALLET = exports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nexports.OTHER_INJECT_WALLET = \"other_inject_wallet\";\nexports.STANDARD_INJECT_WALLET = \"standard_inject_wallet\";\nexports.CONNECTOR_TYPE = {\n    WS: {\n        OKX_APP_WALLET: 100,\n        OKX_TG_WALLET: 110\n    },\n    INJECT: {\n        OKX_INJECT_WALLET: 200,\n        STANDARD_INJECT_WALLET: 210\n    },\n    KEYLESS: {\n        APPLE_WALLET: 300,\n        GOOGLE_WALLET: 310\n    }\n};\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag || appName || '';\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletReadyState = void 0;\nvar WalletReadyState;\n(function (WalletReadyState) {\n    WalletReadyState[\"Installed\"] = \"Installed\";\n    WalletReadyState[\"NotDetected\"] = \"NotDetected\";\n    WalletReadyState[\"Loadable\"] = \"Loadable\";\n    WalletReadyState[\"Unsupported\"] = \"Unsupported\";\n})(WalletReadyState || (exports.WalletReadyState = WalletReadyState = {}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK1] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK1] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK1] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    getAllConnectors() {\n        return this.connectors;\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return Object.values(iconnector_1.CONNECTOR_TYPE.WS).includes(connector.getType());\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return Object.values(iconnector_1.CONNECTOR_TYPE.INJECT).includes(connector.getType())\n            || Object.values(iconnector_1.CONNECTOR_TYPE.KEYLESS).includes(connector.getType());\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.isInjectedConnector(this.connectors[0])) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response, connector) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    //for ws connector;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                    }\n                                    var realConector;\n                                    if (connector) {\n                                        realConector = connector;\n                                    }\n                                    else if (tag) {\n                                        realConector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    }\n                                    if (!realConector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(realConector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(realConector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector()) {\n                this.getConnector().restoreconnect(sessionInfo, (session) => {\n                    var _a, _b;\n                    onConnectResult(session);\n                    if (session) {\n                        this.deviceInfo = Object.assign({}, session.wallet);\n                        (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                    }\n                });\n            }\n            else {\n                onConnectResult(null);\n            }\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MartainWalletAdapter = void 0;\nconst baseAptosWalletAdapter_1 = require(\"./baseAptosWalletAdapter\");\nconst aptosWalletAdapter_1 = require(\"./aptosWalletAdapter\");\nconst protocol_1 = require(\"../../../../protocol\");\nconst utils_1 = require(\"../../../../utils/utils\");\nconst utils_2 = require(\"../../../../utils\");\nclass MartainWalletAdapter extends baseAptosWalletAdapter_1.BaseAptosWalletAdapter {\n    get readyState() {\n        throw new Error(\"Method not implemented.\");\n    }\n    constructor() {\n        super();\n        this.name = 'Martian';\n        this.icon = 'https://raw.githubusercontent.com/hippospace/aptos-wallet-adapter/main/logos/martian.png';\n        this.url = '';\n        this._version = \"unknown\";\n        this._readyState = typeof window === 'undefined' || typeof document === 'undefined'\n            ? aptosWalletAdapter_1.WalletReadyState.Unsupported\n            : aptosWalletAdapter_1.WalletReadyState.NotDetected;\n        this._provider = typeof window !== 'undefined' ? window.martian : undefined;\n        this._network = undefined;\n        this._connecting = false;\n        this._wallet = null;\n        if (typeof window !== 'undefined' && this._readyState !== aptosWalletAdapter_1.WalletReadyState.Unsupported) {\n            (0, utils_1.scopePollingDetectionStrategy)(() => {\n                if (window.martian) {\n                    this._readyState = aptosWalletAdapter_1.WalletReadyState.Installed;\n                    this.emit('readyStateChange', this._readyState);\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n    get publicAccount() {\n        var _a, _b, _c;\n        return {\n            publicKey: ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null,\n            address: ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.address) || null,\n            authKey: ((_c = this._wallet) === null || _c === void 0 ? void 0 : _c.authKey) || null\n        };\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get version() {\n        return this._version;\n    }\n    get network() {\n        return {\n            name: this._network,\n            chainId: this._chainId\n        };\n    }\n    onAccountChange(listener) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const handleChangeAccount = (newAccount) => __awaiter(this, void 0, void 0, function* () {\n                    const { publicKey } = yield (provider === null || provider === void 0 ? void 0 : provider.account());\n                    this._wallet = Object.assign(Object.assign({}, this._wallet), { address: newAccount, publicKey });\n                    // this.emit('accountChange', newAccount);\n                });\n                yield (provider === null || provider === void 0 ? void 0 : provider.onAccountChange(handleChangeAccount));\n            }\n            catch (error) {\n                const errMsg = error.message;\n                // this.emit('error', new WalletAccountChangeError(errMsg));\n                throw error;\n            }\n            (0, utils_2.logDebug)('MartainWalletAdapter.onAccountChange()');\n        });\n    }\n    onNetworkChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_2.logDebug)('MartainWalletAdapter.onNetworkChange()');\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!(this._readyState === aptosWalletAdapter_1.WalletReadyState.Loadable ||\n                    this._readyState === aptosWalletAdapter_1.WalletReadyState.Installed)) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                if (this.connecting)\n                    return;\n                if (this.connected) {\n                    yield this.initNetWork();\n                    return;\n                }\n                this._connecting = true;\n                const provider = this._provider || window.martian;\n                const isConnected = yield (provider === null || provider === void 0 ? void 0 : provider.isConnected());\n                if (isConnected) {\n                    yield (provider === null || provider === void 0 ? void 0 : provider.disconnect());\n                }\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.connect());\n                if (!response) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                }\n                yield this.initNetWork();\n                // this.emit('connect', this._wallet?.address || '');\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    initNetWork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this._provider || window.martian;\n            const walletAccount = yield (provider === null || provider === void 0 ? void 0 : provider.account());\n            if (walletAccount) {\n                this._wallet = Object.assign(Object.assign({}, walletAccount), { isConnected: true });\n                const name = yield (provider === null || provider === void 0 ? void 0 : provider.network());\n                const { chainId } = yield provider.getChainId();\n                this._network = name;\n                this._chainId = chainId.toString();\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            const provider = this._provider || window.martian;\n            if (wallet) {\n                this._wallet = null;\n                try {\n                    yield (provider === null || provider === void 0 ? void 0 : provider.disconnect());\n                }\n                catch (error) {\n                }\n            }\n        });\n    }\n    signAndSubmitTransaction(payload, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const transaction = yield provider.generateTransaction(wallet.address || '', payload, options);\n                if (!transaction)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, 'generate transaction error');\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signAndSubmitTransaction(transaction));\n                if (!response) {\n                    throw new Error('No response');\n                }\n                return { hash: response };\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signTransaction(payload, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const transaction = yield provider.generateTransaction(wallet.address || '', payload, options);\n                if (!transaction)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, 'generate transaction error');\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signTransaction(transaction));\n                if (!response) {\n                    throw new Error('No response');\n                }\n                return response;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                if (typeof message !== 'object' || !message.nonce) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"Invalid signMessage Payload\");\n                }\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signMessage(message));\n                if (response) {\n                    return response;\n                }\n                else {\n                    throw new Error('Sign Message failed');\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n}\nexports.MartainWalletAdapter = MartainWalletAdapter;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiStandardProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nclass SuiStandardProvider {\n    constructor(wallet) {\n        this.wallet = wallet;\n    }\n    getVersion() {\n        return this.wallet.version;\n    }\n    supportChains(chains) {\n        if (chains.length === 1 && chains[0] === protocol_1.SUI_CHAINS.MAINNET) {\n            return true;\n        }\n        return false;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // await this.restoreConnect()\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.wallet) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            let injectSignResult;\n                            if (this.wallet.features['sui:signTransaction']) {\n                                injectSignResult = yield this.wallet.features['sui:signTransaction'].signTransaction(originalRarams);\n                            }\n                            else if (this.wallet.features['sui:signTransactionBlock']) {\n                                injectSignResult = yield this.wallet.features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult === null || injectSignResult === void 0 ? void 0 : injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            let injectSendResult;\n                            if (this.wallet.features['sui:signAndExecuteTransaction']) {\n                                injectSendResult = yield this.wallet.features['sui:signAndExecuteTransaction'].signAndExecuteTransaction(originalRarams);\n                            }\n                            else if (this.wallet.features['sui:signAndExecuteTransactionBlock']) {\n                                injectSendResult = yield this.wallet.features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.wallet.features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.wallet.features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    addAccountChangedListener() {\n    }\n    removeListener() {\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.wallet.features['standard:connect'].connect();\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let firstAccount = yield this.connect();\n            if (!firstAccount) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n            let address = (_a = firstAccount === null || firstAccount === void 0 ? void 0 : firstAccount.address) !== null && _a !== void 0 ? _a : \"\";\n            let publicKey = (_b = firstAccount === null || firstAccount === void 0 ? void 0 : firstAccount.publicKey) !== null && _b !== void 0 ? _b : \"\";\n            if (publicKey instanceof Uint8Array) {\n                publicKey = this.normalizeUint8Array(publicKey);\n                publicKey = btoa(String.fromCharCode(...publicKey));\n            }\n            let extra = {};\n            extra[protocol_1.SUI_CHAINS.MAINNET] = { publicKey: publicKey };\n            return {\n                namespace: protocol_1.NameSpaceKeySui,\n                addresses: [`${protocol_1.SUI_CHAINS.MAINNET}:${firstAccount.address}`],\n                methods: firstAccount.features,\n                extra: extra\n            };\n        });\n    }\n    normalizeUint8Array(data) {\n        if (data.length === 33 && data[0] === 0) {\n            return data.slice(1);\n        }\n        return data;\n    }\n}\nexports.SuiStandardProvider = SuiStandardProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst wsConnector_1 = require(\"./wsConnector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends wsConnector_1.WsConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.WS.OKX_APP_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addAccountChangedListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.icon = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: Date.now().toString(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        return true;\n        // const allReady = namespaceKeys!.every(namespaceKey =>\n        //     this.getInjectProvider(namespaceKey)?.connectReady()\n        // );\n        // return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getSupportNameSpaces() {\n        return Array.from(this.providerMap.keys());\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./aptosStandardProvider\"), exports);\n__exportStar(require(\"./aptosThirdpartInjectProvider\"), exports);\n__exportStar(require(\"./walletAdapter\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (args.injectParams) {\n                if (\"chain\" in args && core_1.SUI_CHAINS.MAINNET != args[\"chain\"]) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                args.injectParams[\"chain\"] = core_1.SUI_CHAINS.MAINNET;\n                if (\"account\" in args && args[\"account\"].address != this.getAccounts[0]) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n                args.injectParams[\"account\"] = {\n                    address: this.getAccounts()[0]\n                };\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./aptosWalletAdapter\"), exports);\n__exportStar(require(\"./martainWalletAdapter\"), exports);\n__exportStar(require(\"./petraWalletAdapter\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.icon = '';\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PetraWalletAdapter = void 0;\nconst baseAptosWalletAdapter_1 = require(\"./baseAptosWalletAdapter\");\nconst aptosWalletAdapter_1 = require(\"./aptosWalletAdapter\");\nconst utils_1 = require(\"../../../../utils/utils\");\nconst protocol_1 = require(\"../../../../protocol\");\nclass PetraWalletAdapter extends baseAptosWalletAdapter_1.BaseAptosWalletAdapter {\n    get readyState() {\n        return this._readyState;\n    }\n    getPerta() {\n        var _a;\n        if (this._provider) {\n            return this._provider;\n        }\n        if (!window.petra) {\n            return undefined;\n        }\n        let perta = window.petra;\n        if (perta && (perta.isOKExWallet || perta.isOkxWallet || ((_a = window.okxwallet) === null || _a === void 0 ? void 0 : _a.aptos) === perta)) {\n            return undefined;\n        }\n        this._provider = perta;\n        return perta;\n    }\n    constructor() {\n        super();\n        this.name = 'Petra';\n        this.icon = 'https://raw.githubusercontent.com/hippospace/aptos-wallet-adapter/main/logos/petra.png';\n        this.url = '';\n        this._version = \"unknown\";\n        this._readyState = typeof window === 'undefined' || typeof document === 'undefined'\n            ? aptosWalletAdapter_1.WalletReadyState.Unsupported\n            : aptosWalletAdapter_1.WalletReadyState.NotDetected;\n        this._network = undefined;\n        this._connecting = false;\n        this._wallet = null;\n        if (typeof window !== 'undefined' && this._readyState !== aptosWalletAdapter_1.WalletReadyState.Unsupported) {\n            (0, utils_1.scopePollingDetectionStrategy)(() => {\n                if (this.getPerta()) {\n                    this._readyState = aptosWalletAdapter_1.WalletReadyState.Installed;\n                    // this.emit('readyStateChange', this._readyState);\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n    get publicAccount() {\n        var _a, _b, _c;\n        return {\n            publicKey: ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null,\n            address: ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.address) || null,\n            authKey: ((_c = this._wallet) === null || _c === void 0 ? void 0 : _c.authKey) || null\n        };\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get version() {\n        return this._version;\n    }\n    get network() {\n        return {\n            name: this._network,\n        };\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!(this._readyState === aptosWalletAdapter_1.WalletReadyState.Loadable ||\n                    this._readyState === aptosWalletAdapter_1.WalletReadyState.Installed)) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                // if (this.connecting) return;\n                if (this.connected) {\n                    yield this.initNetWork();\n                    return;\n                }\n                this._connecting = true;\n                const provider = this.getPerta();\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.connect());\n                this._wallet = {\n                    address: response === null || response === void 0 ? void 0 : response.address,\n                    publicKey: response === null || response === void 0 ? void 0 : response.publicKey,\n                    isConnected: true\n                };\n                yield this.initNetWork();\n                // this.emit('connect', this._wallet?.address || '');\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    initNetWork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.getPerta();\n            const name = yield (provider === null || provider === void 0 ? void 0 : provider.network());\n            const chainId = null;\n            const api = null;\n            this._network = name;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            const provider = this.getPerta();\n            if (wallet) {\n                this._wallet = null;\n                try {\n                    yield (provider === null || provider === void 0 ? void 0 : provider.disconnect());\n                }\n                catch (error) {\n                }\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const response = yield provider.signAndSubmitTransaction(transaction, options);\n                if (response.code) {\n                    throw new Error(response.message);\n                }\n                return response;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signTransaction(transaction));\n                if (response.code) {\n                    throw new Error(response.message);\n                }\n                return response;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signMessage(message));\n                if (response) {\n                    return response;\n                }\n                else {\n                    throw new Error('Sign Message failed');\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    onAccountChange(listener) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                const handleAccountChange = (newAccount) => __awaiter(this, void 0, void 0, function* () {\n                    var _a, _b, _c, _d, _e, _f;\n                    if (newAccount === null || newAccount === void 0 ? void 0 : newAccount.publicKey) {\n                        this._wallet = Object.assign(Object.assign({}, this._wallet), { publicKey: newAccount.publicKey || ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey), authKey: newAccount.authKey || ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.authKey), address: newAccount.address || ((_c = this._wallet) === null || _c === void 0 ? void 0 : _c.address) });\n                    }\n                    else {\n                        const response = yield (provider === null || provider === void 0 ? void 0 : provider.connect());\n                        this._wallet = Object.assign(Object.assign({}, this._wallet), { authKey: (response === null || response === void 0 ? void 0 : response.authKey) || ((_d = this._wallet) === null || _d === void 0 ? void 0 : _d.authKey), address: (response === null || response === void 0 ? void 0 : response.address) || ((_e = this._wallet) === null || _e === void 0 ? void 0 : _e.address), publicKey: (response === null || response === void 0 ? void 0 : response.publicKey) || ((_f = this._wallet) === null || _f === void 0 ? void 0 : _f.publicKey) });\n                    }\n                    // this.emit('accountChange', newAccount.publicKey);\n                    listener === null || listener === void 0 ? void 0 : listener(this._wallet);\n                });\n                provider === null || provider === void 0 ? void 0 : provider.onAccountChange(handleAccountChange);\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    onNetworkChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                const handleNetworkChange = (newNetwork) => __awaiter(this, void 0, void 0, function* () {\n                    if (newNetwork) {\n                        this._network = newNetwork.networkName;\n                    }\n                });\n                // provider?.onNetworkChange(handleNetworkChange);\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n}\nexports.PetraWalletAdapter = PetraWalletAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addAccountChangedListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst InjectConnector_1 = require(\"./InjectConnector\");\nconst protocol_1 = require(\"../protocol\");\nconst inject_1 = require(\"../inject\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nconst utils_1 = require(\"../utils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst media_1 = require(\"../utils/media\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst iconnector_1 = require(\"./iconnector\");\nclass OkxwalletInjectConnector extends InjectConnector_1.InjectConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.INJECT.OKX_INJECT_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result, this);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    }, this);\n                }\n            }\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_1.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_1.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addAccountChangedListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache instanceof Object) {\n            try {\n                let topicExpireMap = new Map(Object.entries(topicExpireCache));\n                let lastTimestamp = topicExpireMap.get(topic);\n                if (lastTimestamp) {\n                    if (Date.now() > lastTimestamp) {\n                        (0, log_1.logDebug)('checkExpire: connection is Expired');\n                        isExpired = true;\n                    }\n                }\n                else {\n                    (0, log_1.logDebug)('checkExpire: not same connection');\n                    isExpired = false;\n                }\n            }\n            catch (error) {\n                (0, log_1.logDebug)('checkExpire: cache error');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        try {\n            let cacheMapCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n            let cacheMap = new Map();\n            if (cacheMapCache) {\n                cacheMap = new Map(Object.entries(cacheMapCache));\n            }\n            let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n            cacheMap.set(topic, expireTimestamp);\n            this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, Object.fromEntries(cacheMap));\n        }\n        catch (error) {\n            (0, log_1.logDebug)(\"update cache failed\");\n        }\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nexports.scopePollingDetectionStrategy = scopePollingDetectionStrategy;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\nfunction scopePollingDetectionStrategy(detect) {\n    // Early return when server-side rendering\n    if (typeof window === 'undefined' || typeof document === 'undefined')\n        return;\n    const disposers = [];\n    function detectAndDispose() {\n        const detected = detect();\n        if (detected) {\n            for (const dispose of disposers) {\n                dispose();\n            }\n        }\n    }\n    // Strategy #1: Try detecting every second.\n    const interval = \n    // TODO: #334 Replace with idle callback strategy.\n    setInterval(detectAndDispose, 1000);\n    disposers.push(() => clearInterval(interval));\n    // Strategy #2: Detect as soon as the DOM becomes 'ready'/'interactive'.\n    if (\n    // Implies that `DOMContentLoaded` has not yet fired.\n    document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', detectAndDispose, { once: true });\n        disposers.push(() => document.removeEventListener('DOMContentLoaded', detectAndDispose));\n    }\n    // Strategy #3: Detect after the `window` has fully loaded.\n    if (\n    // If the `complete` state has been reached, we're too late.\n    document.readyState !== 'complete') {\n        window.addEventListener('load', detectAndDispose, { once: true });\n        disposers.push(() => window.removeEventListener('load', detectAndDispose));\n    }\n    // Strategy #4: Detect synchronously, now.\n    detectAndDispose();\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addAccountChangedListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./thirdpartprovider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosStandardProvider = void 0;\nconst protocol_1 = require(\"../../../protocol\");\nconst utils_1 = require(\"../../../utils\");\nconst misc_1 = require(\"./misc\");\nclass AptosStandardProvider {\n    constructor(wallet) {\n        this.wallet = wallet;\n        this.mainNetWorkInfo = {\n            chainId: \"1\",\n            name: misc_1.AptosNetwork.MAINNET\n        };\n    }\n    getVersion() {\n        return this.wallet.version;\n    }\n    supportChains(chains) {\n        if (chains.length === 1 && chains[0] === protocol_1.APTOS_CHAINS.MAINNET) {\n            return true;\n        }\n        return false;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                try {\n                    (0, utils_1.logDebug)(\"AptosStandardProvider send request:\", JSON.stringify(request));\n                }\n                catch (error) {\n                }\n                yield this.confirmNetwrok(request.chainId);\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.wallet) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"aptos_signTransaction\":\n                            let injectSignResult;\n                            if (this.wallet.features['aptos:signTransaction']) {\n                                let result = yield this.wallet.features['aptos:signTransaction'].signTransaction(originalRarams);\n                                injectSignResult = (0, misc_1.getArgs)(result);\n                                if (injectSignResult instanceof Uint8Array) {\n                                    injectSignResult = this.normalizeUint8Array(injectSignResult);\n                                    injectSignResult = btoa(String.fromCharCode(...injectSignResult));\n                                }\n                                else if (injectSignResult.signature) {\n                                    injectSignResult = injectSignResult.signature.toString();\n                                }\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"aptos_signTransaction\",\n                                result: injectSignResult\n                            };\n                            break;\n                        case \"aptos_signMessage\":\n                            let signMessageResult;\n                            if (this.wallet.features['aptos:signMessage']) {\n                                let result = yield this.wallet.features['aptos:signMessage'].signMessage(originalRarams);\n                                signMessageResult = (0, misc_1.getArgs)(result);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"aptos_signMessage\",\n                                result: signMessageResult === null || signMessageResult === void 0 ? void 0 : signMessageResult.signature.toString()\n                            };\n                            break;\n                        case \"aptos_signAndSubmitTransaction\":\n                            let transactionResult;\n                            if (this.wallet.features['aptos:signAndSubmitTransaction']) {\n                                if (this.wallet.features['aptos:signAndSubmitTransaction'].version !== '1.1.0') {\n                                    let result = yield this.wallet.features['aptos:signAndSubmitTransaction'].signAndSubmitTransaction(originalRarams);\n                                    transactionResult = (0, misc_1.getArgs)(result);\n                                }\n                                else {\n                                    let params = request.params;\n                                    let realParams = { payload: {} };\n                                    if (request.params && typeof request.params === \"object\" && \"type_arguments\" in request.params) {\n                                        realParams.payload.typeArguments = request.params.type_arguments;\n                                    }\n                                    if (request.params && typeof request.params === \"object\" && \"arguments\" in request.params) {\n                                        realParams.payload.functionArguments = request.params.arguments;\n                                    }\n                                    if (request.params && typeof request.params === \"object\" && \"function\" in request.params) {\n                                        realParams.payload.function = request.params.function;\n                                    }\n                                    let result = yield this.wallet.features['aptos:signAndSubmitTransaction'].signAndSubmitTransaction(realParams);\n                                    transactionResult = (0, misc_1.getArgs)(result);\n                                }\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"aptos_signAndSubmitTransaction\",\n                                result: transactionResult.hash.toString()\n                            };\n                            break;\n                        case \"aptos_changeNetwork\":\n                            const injectPersonalResult = yield this.wallet.features['aptos:changeNetwork'].changeNetwork(originalRarams);\n                            result = {\n                                method: \"aptos_signPersonalMessage\",\n                                result: injectPersonalResult.signature.toString()\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"aptosProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    removeListener() {\n        if (this.wallet.features['aptos:onAccountChange']) {\n            this.wallet.features['aptos:onAccountChange'].onAccountChange((accountInfo) => { });\n        }\n    }\n    addAccountChangedListener(accountChangedListener) {\n        if (this.wallet.features['aptos:onAccountChange']) {\n            this.wallet.features['aptos:onAccountChange'].onAccountChange((accountInfo) => {\n                var _a, _b;\n                accountChangedListener((_b = (_a = (0, misc_1.getArgs)(accountInfo)) === null || _a === void 0 ? void 0 : _a.address) === null || _b === void 0 ? void 0 : _b.toString());\n            });\n        }\n        if (this.wallet.features['aptos:onNetworkChange']) {\n            this.wallet.features['aptos:onNetworkChange'].onNetworkChange((networkInfo) => {\n            });\n        }\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.wallet.features[\"aptos:connect\"].connect();\n        });\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let account = (0, misc_1.getArgs)(yield this.connect());\n            let address = account.address;\n            if (address instanceof Uint8Array) {\n                address = this.normalizeUint8Array(address);\n                address = btoa(String.fromCharCode(...address));\n            }\n            let publicKey = account.publicKey.toString();\n            let extra = {};\n            extra[protocol_1.APTOS_CHAINS.MAINNET] = { publicKey: publicKey };\n            return {\n                namespace: protocol_1.NameSpaceKeyAptos,\n                addresses: [`${protocol_1.APTOS_CHAINS.MAINNET}:${address}`],\n                methods: [],\n                extra: extra\n            };\n        });\n    }\n    normalizeUint8Array(data) {\n        if (data.length === 33 && data[0] === 0) {\n            return data.slice(1);\n        }\n        return data;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wallet.features['aptos:disconnect']) {\n                return this.wallet.features[\"aptos:disconnect\"].disconnect();\n            }\n        });\n    }\n    confirmNetwrok(chainid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (chainid !== utils_1.chainName2IdMap.get(protocol_1.APTOS_CHAINS.MAINNET)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n            }\n            if (this.wallet.features['aptos:network']) {\n                let walletNetwork = yield this.wallet.features['aptos:network'].network();\n                if (walletNetwork.chainId == 1 && walletNetwork.name.toLowerCase() == misc_1.AptosNetwork.MAINNET) {\n                    return Promise.resolve();\n                }\n                yield this.changeMainNetwork();\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    changeMainNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wallet.features['aptos:changeNetwork']) {\n                let result = yield (this.wallet.features['aptos:changeNetwork'].changeNetwork(this.mainNetWorkInfo));\n                let changeNetworkResult = (0, misc_1.getArgs)(result);\n                if (changeNetworkResult.success) {\n                    return Promise.resolve();\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n}\nexports.AptosStandardProvider = AptosStandardProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addAccountChangedListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nexports.versionStr = '1.8.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        // this.currentUUID = toHexString(nacl.randomBytes(16))\n        this.currentUUID = \"fjdkakfjsadkfklasdkfsdjkljfklsdjklfioruer3239084dkskfsa\";\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThirdpartInjectConnector = void 0;\nconst InjectConnector_1 = require(\"./InjectConnector\");\nconst protocol_1 = require(\"../protocol\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst wallet_adapter_plugin_1 = require(\"@aptos-connect/wallet-adapter-plugin\");\nclass ThirdpartInjectConnector extends InjectConnector_1.InjectConnector {\n    getType() {\n        var _a, _b, _c, _d;\n        if (this.walletName === ((_b = ((_a = wallet_adapter_plugin_1.walletMetadata === null || wallet_adapter_plugin_1.walletMetadata === void 0 ? void 0 : wallet_adapter_plugin_1.walletMetadata.google) === null || _a === void 0 ? void 0 : _a.name)) !== null && _b !== void 0 ? _b : 'Continue with Google')) {\n            return iconnector_1.CONNECTOR_TYPE.KEYLESS.GOOGLE_WALLET;\n        }\n        else if (this.walletName === ((_d = ((_c = wallet_adapter_plugin_1.walletMetadata === null || wallet_adapter_plugin_1.walletMetadata === void 0 ? void 0 : wallet_adapter_plugin_1.walletMetadata.apple) === null || _c === void 0 ? void 0 : _c.name)) !== null && _d !== void 0 ? _d : 'Continue with Apple')) {\n            return iconnector_1.CONNECTOR_TYPE.KEYLESS.APPLE_WALLET;\n        }\n        else {\n            return iconnector_1.CONNECTOR_TYPE.INJECT.STANDARD_INJECT_WALLET;\n        }\n    }\n    constructor(thirdpartInjectWallet) {\n        super();\n        this.walletName = thirdpartInjectWallet.walletName;\n        thirdpartInjectWallet.wallets.forEach((value, key) => {\n            this.providerMap.set(key, value);\n        });\n        this.icon = thirdpartInjectWallet.icon;\n    }\n    registerWallet(nameSpace, wallet) {\n        this.providerMap.set(nameSpace, wallet);\n    }\n    getTag() {\n        var _a;\n        return iconnector_1.STANDARD_INJECT_WALLET + ((_a = this.walletName) !== null && _a !== void 0 ? _a : \"\");\n    }\n    getWalletVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const firstWallet = this.providerMap.values().next().value;\n            if (!firstWallet) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n            return firstWallet.getVersion();\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (universalConnectRequest.requests) {\n                    let requestAccounts = universalConnectRequest.requests\n                        .find(item => item.name === \"requestAccounts\");\n                    const required = (_a = requestAccounts.requiredNamespaces) !== null && _a !== void 0 ? _a : [];\n                    const optional = (_b = requestAccounts.optionalNamespaces) !== null && _b !== void 0 ? _b : [];\n                    let result = undefined;\n                    if (required.length + optional.length === 1) {\n                        const singleItem = required.length === 1 ? required[0] : optional[0];\n                        const singleProvider = this.providerMap.get(singleItem.namespace);\n                        this.addListener(singleItem.namespace);\n                        // await this.disconnect()\n                        if (singleProvider) {\n                            result = yield this.getResponseByConnect(singleProvider);\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"openWallet: provider not found\");\n                        }\n                    }\n                    if (this.connectResultListener && result) {\n                        this.connectResultListener(result, this);\n                    }\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    getResponseByConnect(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let result = {\n                method: \"connect\",\n                requestId: Date.now().toString(),\n                payload: {\n                    wallet: {\n                        platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                        appName: iconnector_1.STANDARD_INJECT_WALLET + this.walletName,\n                        appVersion: (_b = this.getWalletVersion()) !== null && _b !== void 0 ? _b : \"1.0.0\",\n                        maxProtocolVersion: 1,\n                    },\n                    responses: []\n                },\n            };\n            let responseItem = {\n                name: \"requestAccounts\",\n                accounts: [],\n            };\n            result.payload.responses.push(responseItem);\n            responseItem.accounts.push(yield this.getAccount(provider));\n            return result;\n        });\n    }\n    getAccount(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return provider.getAccount();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield Promise.all([...this.providerMap.values()].map(provider => provider.disconnect()));\n        });\n    }\n    onDisconnect() {\n        this.disconnectListener.forEach(listener => listener());\n        this.disconnectListener = [];\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        const keys = Object.keys(sessionInfo.namespaces);\n        const isSingleChain = keys.length === 1;\n        if (!isSingleChain) {\n            onConnectResult(null);\n            return;\n        }\n        const provider = this.getInjectProvider(keys[0]);\n        if (!provider)\n            return onConnectResult(null);\n        provider.getAccount().then(account => {\n            var _a;\n            let address = (_a = account === null || account === void 0 ? void 0 : account.addresses) !== null && _a !== void 0 ? _a : [\"\"];\n            if (sessionInfo.namespaces[keys[0]].accounts[0].includes(address[0])) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                onConnectResult(null);\n            }\n        }).catch(error => {\n            onConnectResult(null);\n        });\n    }\n    checkAccountChanged(nameSpace, newAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (newAddress) {\n                    if (sessionLocal.namespaces[nameSpace].accounts.includes(newAddress)) {\n                        return;\n                    }\n                }\n                let provider = this.getInjectProvider(nameSpace);\n                if (provider) {\n                    let sessionNew = yield this.getResponseByConnect(provider);\n                    if (!!sessionNew && sessionLocal) {\n                        let universalResponses = sessionNew.payload.responses;\n                        let universalAccountItem = universalResponses[0].accounts[0];\n                        sessionLocal.namespaces[nameSpace].accounts = universalAccountItem.addresses;\n                        sessionLocal.namespaces[nameSpace].extra = universalAccountItem.extra;\n                        sessionLocal.namespaces[nameSpace].rpcMap = undefined;\n                        sessionLocal.namespaces[nameSpace].methods = universalAccountItem.methods;\n                        (_b = this.accountChangeListener) === null || _b === void 0 ? void 0 : _b.call(this, sessionLocal);\n                    }\n                }\n            }\n            catch (error) {\n                yield this.disconnect();\n            }\n        });\n    }\n    addListener(nameSpace) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(nameSpace)) === null || _b === void 0 ? void 0 : _b.addAccountChangedListener((newAddress) => {\n            if (newAddress) {\n                this.checkAccountChanged(nameSpace, newAddress).catch(e => {\n                });\n            }\n            else {\n                this.onDisconnect();\n            }\n        });\n    }\n    supportNamespaceAndChains(nameSpace, chains) {\n        let provider = this.providerMap.get(nameSpace);\n        if (!provider) {\n            return false;\n        }\n        return provider.supportChains(chains);\n    }\n}\nexports.ThirdpartInjectConnector = ThirdpartInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor(wallet = window.okxwallet.sui) {\n        // const chainName = \"sui:mainnet\";\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         console.log('suiGlobalWallet',wallet)\n        //         if (wallet.chains.includes(chainName)) {\n        //             console.log('suiGlobalWallet', wallet.name)\n        //         }\n        //         GlobalWallet[wallet.chainName] = wallet;\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n        this.wallet = wallet;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return this.wallet;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            let injectSignResult;\n                            if (this.getSuiWallet().features['sui:signTransaction']) {\n                                injectSignResult = yield this.getSuiWallet().features['sui:signTransaction'].signTransaction(originalRarams);\n                            }\n                            else if (this.getSuiWallet().features['sui:signTransactionBlock']) {\n                                injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult === null || injectSignResult === void 0 ? void 0 : injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            let injectSendResult;\n                            if (this.getSuiWallet().features['sui:signAndExecuteTransaction']) {\n                                injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransaction'].signAndExecuteTransaction(originalRarams);\n                            }\n                            else if (this.getSuiWallet().features['sui:signAndExecuteTransactionBlock']) {\n                                injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addStandardEventListener(standardEventListener) {\n        var _a, _b;\n        if ((_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:events']) {\n            (0, utils_1.logDebug)(\"sui-provider standard:events change\");\n            (_b = this.getSuiWallet()) === null || _b === void 0 ? void 0 : _b.features['standard:events'].on('change', (event) => {\n                standardEventListener(event);\n            });\n        }\n        else {\n            (0, utils_1.logDebug)(\"sui-provider standard:events null\");\n        }\n    }\n    addAccountChangedListener(accountChangeListener) {\n        var _a;\n        console.log(\"configEventWithKey:\", 'sui');\n        if (this.getSuiWallet().on) {\n            this.accountChangedHandler = (publicKey) => {\n                console.log(\"configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n                if (publicKey) {\n                    accountChangeListener();\n                }\n            };\n            (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.on('accountChanged', this.accountChangedHandler);\n        }\n    }\n    removeListener() {\n        var _a;\n        if (this.accountChangedHandler) {\n            (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst wsConnector_1 = require(\"./wsConnector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends wsConnector_1.WsConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.WS.OKX_TG_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nconst okxwalletInjectConnector_1 = require(\"./okxwalletInjectConnector\");\nconst iconnector_1 = require(\"./iconnector\");\nclass OkxwalletInjectTonsdkConnector extends okxwalletInjectConnector_1.OkxwalletInjectConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.INJECT.OKX_INJECT_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./suiStandardProvider\"), exports);\n__exportStar(require(\"./aptos\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !Object.values(core_1.CONNECTOR_TYPE.INJECT).includes(this.engine.getConnector().getType())\n                && !Object.values(core_1.CONNECTOR_TYPE.KEYLESS).includes(this.engine.getConnector().getType());\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                console.error(error.message);\n              }, 0.5);\n            } else if (error.message) {\n              console.error(error.message);\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        // const transaction = await aptos.transaction.build.simple({\n        //   sender: provider.getAccount(this.selectedChain).address,\n        //   data: {\n        //     // The Move entry-function\n        //     function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n        //     // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n        //     typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n        //     functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        //   },\n        // });\n        // console.log(\"获取地址aptos 222222：\");\n\n        const recipient = '0x0b6c915bb78c6a98d094661a1fccdffb16f73b48a003aa860feae1684bab8cb3'\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address, // 发送者的地址\n          data: {\n            function: \"0x1::aptos_account::transfer\", // Aptos 的转账函数\n            typeArguments: [], // 转账不需要 type 参数\n            functionArguments: [recipient, '1000000'], // 参数：[接收地址，金额]\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transaction.build.simple({\n      //   sender: provider.getAccount(this.selectedChain).address,\n      //   data: {\n      //     // The Move entry-function\n      //     function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //     // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n      //     typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n      //     functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n      //   },\n      // });\n\n// 转账\n      const recipient = '0x0b6c915bb78c6a98d094661a1fccdffb16f73b48a003aa860feae1684bab8cb3'\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address, // 发送者的地址\n        data: {\n          function: \"0x1::aptos_account::transfer\", // Aptos 的转账函数\n          typeArguments: [], // 转账不需要 type 参数\n          functionArguments: [recipient, '1000000'], // 参数：[接收地址，金额]\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    // this.initBtnClicked()\n    // setTimeout(()=>{\n      this.initBtnClicked()\n    // },2000)\n\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=0906ef16&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0906ef16&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0906ef16\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n// if (!window.okxGlobalWallet) {\n//     window.okxGlobalWallet = {\n//         suiWallets: [],\n//         register: (wallet: StandardWallet) => {\n//             if (wallet.chains.includes(SUI_CHAINS.MAINNET)){\n//                 const exists = window.okxGlobalWallet.suiWallets.some(w => w.name === wallet.name);\n//                 if (!exists && !wallet.name.toLowerCase().includes('okx')){\n//                     window.okxGlobalWallet.suiWallets.push(wallet);\n//                 }\n//             }\n//             // return window.GlobalWallet.wallets;\n//         },\n//         // getWallets: () => {\n//         //     return window.okxGlobalWallet.wallets\n//         // },\n//     };\n// }\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addAccountChangedListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(87634); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","log_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","appName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","stackDeepLink","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","downloadUrl","shortUniversalLink","standardUniversalLink","okxDeeplink","location","hostname","includes","AptosNetwork","UserResponseStatus","getArgs","protocol_1","response","status","REJECTED","OKXConnectError","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","args","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","ThirdpartInjectConnector","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","AppwalletConnector","appwalletConnector_1","InjectConnector_1","tgwalletConnector_1","wsConnector_1","okxwalletInjectConnector_1","okxwalletInjectTonsdkConnector_1","thirdpartInjectConnector_1","checkMetaData","dappMetaData","BAD_REQUEST_ERROR","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","values","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","core_1","constructor","provider","STARKNET_CHAIN_ID","getChain","chainId","CHAIN_NOT_SUPPORTED","getAccount","_d","_e","account","session","namespaces","NameSpaceKeyStarknet","startsWith","accountArray","publicKey","pubKey","signMessage","signerAddress","typedData","signData","ret","request","parse","errorData","error","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","i","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","constants_1","eventemitter3_1","storage_1","utils_1","crypto_1","jwt_1","safejson_1","log","report_1","url_1","connectionSplitPackages_1","appname","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","reportEvent","OKXReportType","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","Date","now","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","safeJsonStringify","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","arguments","input","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","id","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","params","messageId","method","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","message","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","toString","restoreConnect","Error","disconnect","saveContent","connect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","code","timeF","sendFetchAndConsumeMessages","init","sendRaw","bind","checkExpired","checkExpire","activateDisconnect","timeTh","send","catch","err","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","event","rawMsg","replace","parsedMessage","CONNECT_METHOD_RECEIVE","sendDisconnect","CONNECT_METHOD_DISCONNECT","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","msg","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","OKXWalletName","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","wallet_info_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","getDefaultReporter","configVersionAndSide","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","isSpecial","getOpenAppLinkType","connected","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","UNKNOWN_ERROR","keyArr","keys","realChain","replaceChainNameToChainId","assign","redirect","sessionConfig","enable","client","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","connectAndSign","signRequest","updatedOpts","openUniversalUrl","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","wallet","syncAllAddress","METHOD_NOT_SUPPORTED","on","listener","removeListener","off","setDefaultChain","rpcUrl","tryToReconnect","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","console","cleanSession","sessionProperties","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","getEngine","BaseAptosWalletAdapter","publicAccount","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","parseInt","isNaN","Number","CAIP_DELIMITER","b","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","AptosThirdpartInjectProvider","walletAdapter_1","walletAdapter","getVersion","supportChains","readyState","WalletReadyState","Installed","confirmNetwrok","originalRarams","injectSignResult","signTransaction","signMessageResult","signature","transactionResult","signAndSubmitTransaction","hash","addAccountChangedListener","onAccountChange","chainid","chainName2IdMap","walletNetwork","CONNECTOR_TYPE","STANDARD_INJECT_WALLET","OTHER_INJECT_WALLET","OKX_TG_WALLET","OKX_APP_WALLET","OKX_INJECT_WALLET","getTagByappName","tag","OKXMiniWalletName","OKXInjectWalletName","WS","INJECT","KEYLESS","APPLE_WALLET","GOOGLE_WALLET","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","charCodeAt","padStart","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signAndSendTransaction","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","from","boc","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","type_1","action_1","content_1","type","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","BtcProvider","Engine","iconnector_1","connectionManager_1","sessionUtils_1","useConnector","connectionManager","addConnectionListener","getConnector","accountChangeListener","setConnectionManager","getAllConnectors","hasWsConnector","isWsConnector","getType","isInjectedConnector","universalConnect","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","walletName","realConector","getTag","methodsResponse","connectRequestMethods","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","title","document","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","restoreconnectFromTopic","namespaceKeys","CONNECT_PROTOCOL_VER","jsonResponse","OKXCONNECTOR_JWT_WALLET_SIDE","TronProvider","MartainWalletAdapter","baseAptosWalletAdapter_1","aptosWalletAdapter_1","utils_2","super","_version","_readyState","Unsupported","NotDetected","_provider","martian","_network","_connecting","_wallet","scopePollingDetectionStrategy","authKey","connecting","_chainId","WALLET_NOT_SUPPORTED","handleChangeAccount","newAccount","onNetworkChange","Loadable","initNetWork","isConnected","walletAccount","options","generateTransaction","SuiStandardProvider","media_1","features","signTransactionBlock","injectSendResult","signAndExecuteTransaction","signAndExecuteTransactionBlock","digest","injectResult","injectPersonalResult","signPersonalMessage","isDevice","firstAccount","Uint8Array","normalizeUint8Array","btoa","fromCharCode","getNamespaceKeyByChain","useShortLink","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","callForSuccess","call_for_success_1","web_api_1","request_1","walletNameKey","lineType","localConnectRequest","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","okxTonWallet","tonconnect","parseConnectResponse","needPop","accountChange","signalChain","connectWalletNameSpace","connectRequestWalletResponse","connectChain","chainStr","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","items","needProof","restoreConnection","nameSpaceResponse","TONMethods","singleConnect","NameSpaceKeyEip155","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","prefix","setPrototypeOf","toJSON","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","disconnectListener","providerMap","Map","disconnectHandler","getInjectProvider","mapKey","entries","newRequest","checkWalletMatch","injectProvider","errorResponse","sessionLocal","_","getSupportNameSpaces","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","setItem","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","getPubkey","getWalletAddress","components","_1","caip","getAddressForChainId","ns","checkChainId","signStr","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","inscribeTransfer","ticker","suffix","unexistKeys","namespaceKey","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","pendingRequests","beginReport","handleResponse","bindRequestForPromise","set","getRequestId","delete","clear","PetraWalletAdapter","getPerta","petra","perta","isOKExWallet","isOkxWallet","okxwallet","aptos","handleAccountChange","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","res","json","onError","parseError","SolProvider","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","TextEncoder","encode","signedMessage","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","SOLANAMethods","StarknetProvider","inject_1","SolProvider_1","AptosProvider_1","TONProvider_1","sui_provider_1","btc_provider_1","AptosProvider","responseItem","required","requiredNamespaces","optional","singleItem","singleProvider","singleConnectResult","getAccountByRequestWallets","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","sort","allEqual","namespacesKey","accountsItem","sessionAccounts","newSessionAccounts","areEqual","every","aptosAdd","aptosChains","aptosChain","ton_proof_result_Item","proofItem","proof","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","size","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","topicExpireMap","lastTimestamp","cacheMapCache","expireTimestamp","fromEntries","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","array","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","detect","disposers","detectAndDispose","detected","dispose","interval","setInterval","clearInterval","removeEventListener","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","AptosStandardProvider","mainNetWorkInfo","realParams","typeArguments","type_arguments","functionArguments","function","changeNetwork","accountInfo","accountChangedListener","networkInfo","changeMainNetwork","changeNetworkResult","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","path","language","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","add","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","wallet_adapter_plugin_1","walletMetadata","google","apple","thirdpartInjectWallet","wallets","registerWallet","getWalletVersion","firstWallet","getResponseByConnect","onDisconnect","isSingleChain","newAddress","sessionNew","universalResponses","universalAccountItem","supportNamespaceAndChains","sui","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","addStandardEventListener","standardEventListener","encodeTGParams","tgUrl","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","signArbitrary","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","stored","localAddress","localItem","connectEvent","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","fn","attempts","delayMs","lastError","delay","aborted","timeoutId","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","state","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","onerror","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","currentStatus","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","utf8Array","binary","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","recipient","simple","sender","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","IJSONRpcConnection","opt","connectSupportMethods","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","hidden","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","buf","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}