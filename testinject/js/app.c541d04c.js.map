{"version":3,"file":"js/app.c541d04c.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst packages_2 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            if ((0, packages_1.isMobileDiscover)()) {\n                opts.connector = [new core_1.OkxwalletInjectConnector()];\n            }\n            else {\n                opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n            }\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            // if (!this.session) {\n            //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            // }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_2.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.sessionRetryTimer = null;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.stopSendSessionRetry();\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        yield this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                if (!this.getConnector()) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n                }\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a, _b;\n            if (this.getConnector()) {\n                (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore);\n            }\n            else {\n                yield ((_b = this.connectors.find(connector => this.isWsConnector(connector))) === null || _b === void 0 ? void 0 : _b.connectManagerDisconnect(fromRestore));\n            }\n            this.stopSendSessionRetry();\n            this.setUseConnector(undefined);\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            if (this.sessionRetryTimer) {\n                clearInterval(this.sessionRetryTimer);\n            }\n            // connect msg retry\n            this.sessionRetryTimer = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n                const retryRequestId = Date.now().toString();\n                (0, utils_1.logDebug)('[Connect] Retrying sendSession...');\n                yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: retryRequestId })));\n            }), constants_1.OKXCONNECTOR_MESSAGE_TTL * 2);\n        });\n    }\n    stopSendSessionRetry() {\n        if (this.sessionRetryTimer) {\n            clearInterval(this.sessionRetryTimer);\n            this.sessionRetryTimer = null;\n            (0, utils_1.logDebug)('[Connect] Stopped retry for session');\n        }\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n                if (jsonResponse.method === 'connect_error') {\n                    this.connectManagerDisconnect(false);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5f6ba2cc&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5f6ba2cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f6ba2cc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        // walletNameKey:string = 'walletModal.mobileConnectionModal.connectMini'\n        this.walletNameKey = '';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileDiscover = exports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\nObject.defineProperty(exports, \"isMobileDiscover\", { enumerable: true, get: function () { return ConnectMethodUtils_1.isMobileDiscover; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache instanceof Object) {\n            try {\n                let topicExpireMap = new Map(Object.entries(topicExpireCache));\n                let lastTimestamp = topicExpireMap.get(topic);\n                if (lastTimestamp) {\n                    if (Date.now() > lastTimestamp) {\n                        (0, log_1.logDebug)('checkExpire: connection is Expired');\n                        isExpired = true;\n                    }\n                }\n                else {\n                    (0, log_1.logDebug)('checkExpire: not same connection');\n                    isExpired = false;\n                }\n            }\n            catch (error) {\n                (0, log_1.logDebug)('checkExpire: cache error');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        try {\n            let cacheMapCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n            let cacheMap = new Map();\n            if (cacheMapCache) {\n                cacheMap = new Map(Object.entries(cacheMapCache));\n            }\n            let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n            cacheMap.set(topic, expireTimestamp);\n            this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, Object.fromEntries(cacheMap));\n        }\n        catch (error) {\n            (0, log_1.logDebug)(\"update cache failed\");\n        }\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 30000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.8.3';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        // walletNameKey: string = 'walletModal.mobileConnectionModal.connectApp';\n        this.walletNameKey = '';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.isMobileDiscover = isMobileDiscover;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction isMobileDiscover() {\n    return !!(window.okxwallet) && window.okxwallet.mobileDiscoverWallet;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(38768); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","log_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","appName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","stackDeepLink","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","downloadUrl","shortUniversalLink","standardUniversalLink","okxDeeplink","location","hostname","includes","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","getTagByappName","OKX_INJECT_WALLET","OKX_APP_WALLET","OKX_TG_WALLET","AppwalletConnector","appwallet_connector_1","enumerable","get","iconnector_1","inject_connector_1","tgwallet_connector_1","ws_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","checkMetaData","protocol_1","dappMetaData","OKXConnectError","OKX_CONNECT_ERROR_CODES","BAD_REQUEST_ERROR","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","__exportStar","p","prototype","hasOwnProperty","call","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","values","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","core_1","constructor","provider","STARKNET_CHAIN_ID","getChain","chainId","CHAIN_NOT_SUPPORTED","getAccount","_d","_e","account","session","namespaces","NameSpaceKeyStarknet","startsWith","accountArray","publicKey","pubKey","signMessage","signerAddress","typedData","signData","ret","request","parse","errorData","error","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__setModuleDefault","v","__importStar","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","constants_1","eventemitter3_1","storage_1","utils_1","crypto_1","jwt_1","safejson_1","log","report_1","url_1","connectionSplitPackages_1","appname","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","reportEvent","OKXReportType","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","Date","now","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","safeJsonStringify","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","arguments","input","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","id","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","params","messageId","method","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","message","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","toString","restoreConnect","Error","disconnect","saveContent","connect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","code","timeF","sendFetchAndConsumeMessages","init","sendRaw","bind","checkExpired","checkExpire","activateDisconnect","timeTh","send","catch","err","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","event","rawMsg","replace","parsedMessage","CONNECT_METHOD_RECEIVE","sendDisconnect","CONNECT_METHOD_DISCONNECT","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","msg","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","i","topicInfo","disconnectPayload","requestId","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","OKXWalletName","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","wallet_info_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","packages_2","provider_1","starknet_1","opts","setGlobal","getDefaultReporter","configVersionAndSide","okxConnectUniversalinwindow","initialize","rpcProviders","isMobileDiscover","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","isSpecial","getOpenAppLinkType","args","connected","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","UNKNOWN_ERROR","keyArr","keys","realChain","replaceChainNameToChainId","assign","redirect","sessionConfig","enable","client","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","connectAndSign","signRequest","updatedOpts","openUniversalUrl","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","wallet","syncAllAddress","METHOD_NOT_SUPPORTED","on","listener","removeListener","off","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","console","sessionProperties","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","parseInt","isNaN","Number","CAIP_DELIMITER","b","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","response","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","tag","OKXMiniWalletName","OKXInjectWalletName","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","charCodeAt","padStart","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signature","signAndSendTransaction","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","from","boc","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","type_1","action_1","content_1","type","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","BtcProvider","Engine","connectionManager_1","sessionUtils_1","useConnector","sessionRetryTimer","connectionManager","addConnectionListener","getConnector","accountChangeListener","setConnectionManager","hasWsConnector","isWsConnector","getTag","isInjectedConnector","universalConnect","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","stopSendSessionRetry","walletName","methodsResponse","connectRequestMethods","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","title","document","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","restoreconnectFromTopic","namespaceKeys","CONNECT_PROTOCOL_VER","clearInterval","setInterval","retryRequestId","jsonResponse","AptosUtils","getTransaction","rawTransaction","entryFunction","typeArgs","type_args","typeArguments","typeTag","realArguments","getTypeArguments","function","module_name","identifier","function_name","type_arguments","getArguments","array","j","y","subArray","dealArrayElements","Uint8Array","r","n","OKXCONNECTOR_JWT_WALLET_SIDE","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","utils_2","btc_provider_1","disconnectListener","providerMap","Map","disconnectHandler","walletNameKey","set","NameSpaceKeyEip155","SolProvider","AptosProvider","getInjectProvider","mapKey","entries","okxwallet","getVersion","responseItem","required","requiredNamespaces","optional","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","sort","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","TronProvider","chainName2IdMap","useShortLink","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","callForSuccess","call_for_success_1","web_api_1","request_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","connection","super","connecting","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","okxTonWallet","tonconnect","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","items","needProof","restoreConnection","nameSpaceResponse","TONMethods","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","runeid","amount","ticker","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","res","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onStatusChange","onModalStateChange","state","substring","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","sendRunes","inscribeTransfer","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","bytes","substr","buffer","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","publicKeyStr","issuer","multicodec","encoded","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","encodeTGParams","tgUrl","utils_3","crypto_js_1","subKey","beforeKey","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","getPubkey","_1","caip","getAddressForChainId","ns","checkChainId","txhash","checkParameters","psbtResults","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","suffix","unexistKeys","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","pendingRequests","beginReport","handleResponse","bindRequestForPromise","clear","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","onError","parseError","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","signedMessage","bufferResult","injectResult","allResult","signAndSendResult","SOLANAMethods","StarknetProvider","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","topicExpireMap","lastTimestamp","cacheMapCache","expireTimestamp","fromEntries","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","hash","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","path","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","lineType","localConnectRequest","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","chain_id","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","stored","localAddress","localItem","connectEvent","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","fn","attempts","delayMs","lastError","delay","aborted","timeoutId","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","WS","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","readyState","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","removeEventListener","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","IJSONRpcConnection","opt","OKXAptosProvider_1","connectSupportMethods","notSupportError","errorItem","mobileDiscoverWallet","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","buffer_1","AptosUtils_1","chainsSet","getConnectedNamespace","defaultNetwork","currentChainId","getRealChainId","successData","buf","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","interval","hidden","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","_provider","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","onAccountChange","newAccount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}