{"version":3,"file":"js/app.62741dfe.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/wallets.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileDiscover = isMobileDiscover;\nfunction isMobileDiscover() {\n    return !!(window.okxwallet) && window.okxwallet.mobileDiscoverWallet;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nconst wallets_1 = require(\"./provider/utils/wallets\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            if ((0, wallets_1.isMobileDiscover)()) {\n                opts.connector = [new core_1.OkxwalletInjectConnector()];\n            }\n            else {\n                opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n            }\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = `8ca026b3db3ced89237cf22382d6cde25ba63c27f057186c30caa01903097b8914ad53495f2477f9a934d840ee69bc26ac86fe50c872d87b83b968e523dfdd72cbff132bfbef8be1fc454b5b146f5a04c16f886c0b767d329d8df776f7352abc6a203eef3b3118d5f4531c09f18f1b69a4e03377bcab24ac79f79041787468cda6a001c73f1614dfe369f22308457fb122b742b5e64dcb4145e110727738471e253f430dfa9859ee13dcf6c71acf8289ff18c7282b9df58eaa669ec24952ffb8f193d2249b1bb8106a6c265b7fc0751bbb8f7ca77d740fcbedf6788b3818ca9523f4959b5f72c90996880f4feb41eeebb83efdce53a3d57da347574e1408299bdca9b0e26e3bc9cca1234a855e13a00f76198779ba586797416f0f27abcc4a3629b03a62469191d65ac1e151c3c79d38149a28a588ac250e0a9b0594fcf96f5041b46b57a51a10c52e1a0be24cb0a1dd5597990560bdc6191233228e9ce85c121f725ed4ba14d6230b1b44c56663d0051b7a51e8de9ba39dbfc38c6e4f999197edba89613f7d249e48da2ffc71b25dddf1b87c79b9e4f64d74ab8a278ec4138b4731dcba4b40e14cb3c4f52bfb7e165a9f3a0f9e2bec290cfdab034b7fbb3680b8c0f9229830a7223501c3701020c4103826f3f0a5085d348701d74a61284af9e4fa9a685ec14470943855cc54eca2a8165f08f7fad5cc7bc6e8b485595305670c83adacdc29b284623672f70cf900f44de842b5573a543ff5951ea3da2a2cecd1fff99d308a48da7ea1da1c9c9aae7ceeeaa7781cbf9da26c3d4ffaa9ceaf0df81644d42128d4a837a9505b180fed61073e741c93529293529ed785db888a15cbcabb947e9f2a0eb43cbd575c1b50de498169349428e2e1c0956bea620ba9b6b78d9eccef37578bc4f1399dbe287f99731e89c09beddb6a80189f71df4d0864d733ea906c7957737d84b7ffb295e5f1f2f1779dfabeb6c517be4b0f8646aab336e89ec48e4eacf2b0d9aa81aeff4f74e5a3e41d0adb9ed94ed747552cff4d412a5eabb8b30b616f4fb40f93a6b8a9119a66f1a163e4d7aa265f73260e8de3efab91c2f8fbcd6d4042caf5ba375d3788be2885fd20276460a6a36c9dc1d820396dd80cbb4e47bd08fc2af8fb47cd63eb589c4fffd0fe1709c0d3950feaa65e593d715c8235c4d26f08fbc09130552e56287ed5b348bdc60f51e1cbb153b825a62573740a7420b0c35638a0cb1a6de56deb38e0b3d0108f3917626c3d477bef9b21e5cfae5005196a91152ed0cf4d83de0a9d26e0193775a244c60a651208ae9943455d9169984dc313ebeb587566d30bb0506fa0348a7f192ca1ea14d341aefc70742b1e34486838b4c37decb7bda9bfd8392bbd34b2a6df5f50c44dd91323688522a6eed7df491207c5344b69379369d56aedeb496fabd0d122cb55638f8f4f3200761a47199b39241176aae62d9d735ae4f76c6e8ed9c31e2056f80534972f5cd8dddaeceea8d686a6820c4fbc4f2f0f732ee125089c119b136e48cd772ea562f4900ee4bdca9c076cd06e5ce6981bca5eeb6a3c1fd155f39cd4fc864237290f22ca2a76db4001b37616031f9083e10e2aae2a391d7613d08239cf5f29852be73c05d825873db42494da11ce9979ecec38b4c6fecd2f0c4052cb107b4696ffcacbd7994361030f299ee195540024407bc5bc5d292d04f83f695156f8273936ec700cfba227543851222764f2183cc16d37b5a222dd8caadba4906dc5d5b8fd01cfe01c0e7d215606e6f26aa6cf97193b86893fcd01703e43a39468eeba5431505c92248998cb882f27860bbb7e2c855cd5378820c6f4cfbda79df63d6b8138ac88184069b2bc71de6352a8686b0b6647e9fa4d8031efc30f35dffda31efb8127045cdc828c9e886acc38ed9bfa98b484fd43841e9bfcd05e879dd51a3e10598fefc73aa8416a38f35903557707cdac1b084664e468be5d8398ed6aaf2f43ee4fb716ca9bf07766916d97c1d1e0093eae09ee1f6353cb18a2ce86d23ae02f7b9feb4df626dea596899aa7388d175ebbb22d664c1800718dedb8e781f3d8c3f2e92ea92e603542bccab3b47bed55b56c2269e6afea933e1010ed50ab890f0b72fdb6c16917b611b111b6612c5e2a4cfc0b9301550228a56b9daf31af2712806f43aac7f6c989f6b0a3aa3a3b440942054aca3ab9e8072a66a29dd227870644b9cbc1fe1203707cde7a4ded3185f806a6aded733e64ce8630d4515c554b0b0bd7af6bf8639f82795ff20150e1c5180dafe617573aa8fec9f2c4043c84088e1f494d1a500049275dc3040fb9dec69b18f374b0c749f6475267ff9bbbe266ecd21dac67624c81d47484f744622b8e4a032214a0957930a8842825084f9075e1fbc5ef63506239da371c1e67553adf03bff235c281e672717954b7c8849652e2a3fd37facc71142317b16c4318b61ff338682ac191a4ad87b751587ff7e3dcc56360219f7dca27c0346018dd6637a8700f18efc4d36d63c72fde58ae177f76937245cedb15b59711062ed8c4d933cbb6e40b8a08d0cf7ad27225309bae202af35f1dd9ec6f005816deaf0f6b0de51c3efa42eded664b121e4c795638d25cf1232ae5843f7c3f6d980d3404a6e61eeaaeeedcc23457c3a3a2f5487e76a340c0dde6c1758cf80ad10cc6477052bf56dce2a84ad221bcde1d6d34b74595e46c84774d8085539558999204b98019b258303c7d89b83115ae6c12e7bfe2ca09108b707eb98c9e8f411e8015a070cbbdbcd5602514525c52563baabf9487431ba18d3e8f79bb7851f9c09079079a843adac8c952cd0192e20a53d4a1e2d1ce6dc4e2c4921add5fa00edcd63ee5ae87850dce63afd3ba6fe359f89fd6219945184cef971c36b65e1247c5c953adc580d67fbe02a4fb5dd547162429740cdd21d368a4fe985f80f9978698b8dfe8b1ff8a7b58c4f61e92d351668c2c091ca37446ab48e9d0418acb18cd068063b03021818f6691b2561d44812b58b102901e7c25a1456f9247cd4f0330a6e5c9c71287b106fad4e135bc9c3627f03e12c22dc854186a5eb21c6bd82b5f849c375c34c83d6aefa2b26d66a5b93cd364886cd2b5957ca02e967e7065ea943ee4498364c0e8c3b4251e4b5aa20b7543c9c1cab0ceb7c9a31f3c85c7b1bff2e68b2b6603d35b0f2296be30fc1a9eefbea06474b61a75092a289ef5b4a6d47a7866f04bd05b55e0492e09b841280afc4abd52e3fc9f81a4256d54684b624c1a6f333bcc69f95e3f9ab060bea2a04a5ab702b6e59fa0229cdcb2c3d10a15c35ea4fab5670fd364a9d77d784490fce37c0de0967d6b32012581e63dfc19e60ccf5efa48fa5e7d7c897c03781e78d45a38c63913203fc0399a245721511d84d06196499b8af5b542f04573378107667a44161d58ac6f2beb0edf8ab029f99ce04fd3d971b2bd1386adaa0e28a9d1547b67b47179fe66fd49e8e5fab3a943b6deb41f6476aa0d1e5931c2842ef6302991b3109223de277f08c2355803e5423576e78de4f928df84ace2f0c4fa5b0d0a37664fa61502e79c6158332a969c517652417c05c37bb4f56c1936b66d54dd80bee849a9c4d83cf790a41afde457cdc31e10f6ea8df1dc466adc935153d4492e952743e8d7bfa10d5c3e365ca1aa6d52c23fc7ff8f18a569d1e5347b300104e236806f1e6eefb22320cc709455f53a4143822443e30f1f640162c40e6ef78173fadbd7a428310ad9209ed58215ac1a038b74dd354a7ba9ff94e3cd83a97896e097c88a4aa00e9dc7ba96ce6de2f0e93ee59af6542c4ec54adc23bfcedd0ab068cc97febaa79864bf7c9e63ed6b7066ddd3e908f912fc20c1becfe5f7e2ca3108764eb368585fc69eacf418a177779764a338cf3fed89b2c668e232ef03c094336f96fa9eda25fc21e0b001e773874e0e20f43a206bdb56f91723354576de2e7e7beb8224508898d091494e7ba5ef249d8209cc46609cd5f51d1e212c9b01ec736811ce655f002c3617fcc891b1489d94402430613d968226d99d0f81b39c8765fc9731e9de2dcd4d94b619ff734e00b261912aa035c1e60b3932efc59234366df65b283bf7535eab973ffcff216110bc5796f8accc1d762181bf2fc4653407a3110ad5462abc386b3d4af2dca2998026893cccd4a7e3bf72396d51e68d9fd58ff6d10d916285888614f3cc9719bea01d2d8ed615377376dd910d954fe9e5e3a7638a89b1c90786e34139f4f692602021a9c41fbaf838b39ba2e3e0a5268dec812fb93c682d8e46a76dbe41f9b6391a263521fb914cd7e561aced8fd58344c3974f5b40dd3548e9cef868c68b12fb981f5584882902f38c6e6715020be5e5ed89c15ae89a6405e976e4b29c7e6d050c4c8dd32a5e8467c2bf2281b33c68e1b26f815eabda53fc08650615dfac26d25e940d2e5d026ae45b4664fd5c9e7b247bfe8d2f2d9da9c19b8563e981e9719e5989fee83383264f3fab05c61d9e2698c6ca2a5fa69a3ee62ea035f612d3d29e8758562acf162b16ebd48ddc4465724fdb5040aeabe16f7276b0c55fb9026b78d1427dd7031fa9d1a161625b2db2c4c846ec298b89d1ef881678e32da0786751cde10031786320986e966ce2f279c6cef24f8c4f5574d5815bdfb3b4f2659524fee022ab9c8357b7be4d88b1cb51b30b5282183465e3c7c190015a9c040343663e3f1a30a3d87d36c220e8be18fb49f97176a20fae6ecf4dad77879004179a99903e24d68b3ec15fc01a51e3f73dcc8545eccf9c7c741b9c3ccba478435d478d2a836d45bf570fe171c3d3b9cd1126582578b07c2fbd3487412420467fa2d5d578a4d6ec2627ef74a8849ffde25735e3694c49765f78e747de80ddb0e49c6c39cf774e38e656e1ca8b049108fc3add2495c9f54a1bcd7e67e543120c74ce986cc794f60f674f57095b6d48783821fdd09146db5b67a69b07536ba6fc8bd2b0b5451c6b2680e554ed109283640a748ee8bb99dcab5998761599f75275620bc9c6898061876d5ea860aacc1f45743182429e5fa7fa7e6e7691800f0b16d4b64e11751de26194e6a7d46994ff4a5498a26e230f305baad5957c2870e2f42bc5094e2ecb4e4bd809d5a2e933fd96b4405366b0cb1037dcb05c357c61588c6a63d8ed8cec48468f46f75982c234a163da41b111517ba469401a1a19239da39f77a210bb66e11fd26e9350b1840449e9ef515b5136e64d618f4790387e149ff595b79d3745824fd3594886ea718cacd5f5633f2ea8e867701d4f0450444e1fea772625c723a65e4c9d13011bda53999300e2855cf51edda9ad85786de80899885adee632fe2ea6ec6c2709682805ea3029869e9852b84cc538d7f6a49ca13c0689060a06f76a4ba957bf7d2dee6afe164ae6be4a125a2035a22c7db677ab01573aa2cd5235acb26c89610362036cf31f2de1d4aa606de0f20ebc6a76689fe81e2f9beb5c93f8d1b1a75026feb980c5f72325192b656bf3f9a03d6df4ba78fbdf6a9dc49bc53d30e193aaaf3dd3aabd99d0dd425ddbbbd5b2e1f7da2d171eb8fdd5047f219ea18bd0c6b4761ae4e4b4d241a19ddfc5d4a24a3b1fee68b45b07d5dcbce1b0f3e446b5c00316da1d2d1f4f3aa9fbf6b28873bb0f6ce1900f831b1e5c171d5125afd4823be8432a439385e8caada0a4996944236ff90ed0918fedee054060a3a8bd748bda506ad8415ec64590ac96ca47664da5b120f53a2e425042ba274bc8771ed667b4c3a3ba36c09054629551204a6bd12ab23033b9d637d270eced043b06afd4f5e005bfa00acbc090439a0b648ab05da6bffad5d1ef4690773614b2fdb2d4c32e0157a3de8531e667d1114910bec8f17d467525d7b6710b4804e1b70beb3bd6bb38e9781bb3c1e47792ebcd9e222d1d3b76d7e696e1a42a095bea3166c28908cd5fc6e82c62b8151df65e9d22d259bc2ee13f1ca4291c20e318ed6293650798f9b3eefaa6cbc76e524fc1ff1154c85706020917c98b8616aa274e3c03979258d3667e175ef1891faeb2f62e3faeb705ee5f76398da277b52729619a9b8ab15107472158fd6e479c1db9299d54e7505a3f3c87ff120f2629eab5539f9aac431ab2eec9814eee9be67fba36f187e8273d4cb7de7cfa45adec9e75a0fee3e0d1b257ae9060bdca4b93b3c5b242e9189ab281b354cee4b0d68713efd50c87ef9b73fbba4c34e50d8cee9400eb68c4bd33a6863e99233153a2435d1901160122130d386ef63cf6b734d5abfa42d8f5c44b110fa244d0dea1a4a7a5a634732d5594f1d37734533b9466aa56cf37affa692ea48b84009a68040b90b4eb6700490e4892144c0539f0fc63d6c465fcbc0fe0f30bb5df409cd93ec0b96707cbf336d7a2695b38f3291cafaac6db66b3ca312c4757f09b81c10789e774afa05337fd26260864cb16432452a72829b5ae9b05d9ea47846adadf6433dacfd813bce00617be78e2b6cef0a43d5c2cd7f15f86ec6a6bdfa93d424b541b38f9a578f0a5d5b21df13fcaf2f990629d532b4912bf0a009eceef32b3456bfd6b01aaaece720d2aa51b9ce3958cea4466505fc7a20631f4debd154b3a89a6057a88d3188e4ab0fb5ec393a6a315df62a9954467aedd3fa9d8cc82f69831e58f9698332a7162ba7797cc6595b559d9bea53277f8cd79910c01b01c76f4757ab91e0b29c8081b5bd472cf82730976b1e843fb37ce6b6d53500f16fad5b6867cda40c7b22971121bbc37dabef6caa88d809936a7e560107206678288c072534462e50b7d27c58a3a603ff6633ada1c61249f7e3fcc1f53309846df44e533415c377a7becea014df5ad5fecc7ccc3e29b8235543f5fecd4e565d0a3b56bf304dadad11654a32536d6cf4e9b5a2fb4ebdc014aea6afafab5e999f2b57e7cf0f35361919ca88cf210e9700ebafe09f2ebfbd313fcdca119486565b3da66927105cead6a9c04861541412cfd2425f7c2a9b9c10e0fa7a9fd2a1b9590f393e1990c6da3072c9f48d3770efc0f6f97f19ad8e07722e6c68208cb6786931d009c2f87b6cc70ed80dea7e19333a1ed11409268e50f5680412389607c0733ddf5f79a5d502ecb947445a45c9297b0dc7c08c068cb638e664c44d59f7b1396b57b64f7d37e38095198affd8ba56fb1b60feff790aab3abdeb34fd962184c8200374b03279c85568f635b7cffbe2f5018c581caba09a025705c82373febeeff2f189540c3fe9eaf98c94f0bcbfb74f05d3b4b4339c3b11562b6b7e8eb28ea77c0f52f8098ce26036a0238c2f141d83361102fd789380c0a458f607f821508eb708da216746eabdb4a11ee16aaba67d8dd2a4d26403dc242068db89f502cf7b89c760f44d82e6a39cc7f88d6d782db93c19f45b14bc8397b173aa2c3afd85c1a2b2581902e3b64657237223cd3f679e848954dbf921adff8291dfc86a0b295855300862c9bae1d8bd0ad09ef22cdaf24ee998aa2bc8ddf8eb6f4bbfe7cd31e2033d1c0663e58fe87a8e0bb86029ce9c619245ae2dbdebe417782ed10cff81cbc70aa466745f65d5477d7c977d68975589fbb7d54e8609dcd9496830b8ec07df9f9dbfd125b6353f45a97f12b26154f81862b4b75e0c7b94be2c107d4e6f1e76a8085536772c81813eec117780ea024648bce0b29e86f5575cfb2358c6d23b0317aa332dc13d95cc48634cf1f302660def602a3928682ece26d9a21afcb56399092b635cd9f82ede46746688df7b148dc1a218663e088f62b3e60c7c4d83ed386ebd4f016a1e6db8bdb85e1867ad41a7b9ab33e0f552fb73a51a72fde953ec8825e0ea11488425b261ec3d3b1d09f41ea626a1c5b81bad0ad89b19939bc9fff55a23119c5c25911d4029558e29645b04352d775eb6c1c9f92b86b7515bce2db89bc338ba686abb71f50d1898f66938c3454c792e5c131418996bd5704e5380f1bda174f5365a7d0bab549f21486939c426fd14527940b3c468c983d4190011c992086f177372aeb6dd76f57be9bf91f586be91a081fdfde4c132bddde8366ff265f590152c9a805ba3384aacc233ab3465480de5cd972ca75f1bc8beee7e6b89d778c53d1f917282b15b417e4d87ae4203422c7802db7cf1364b356348457351290dc72a2bd219643df7b2e45851608d2df4ba4b50e510ba9f323163f0ef1ce860d31446bb3d768aa8f9d040e0a165975cc503ceaff4216119384668174833f74a0010e2caf583d0639027ec5ce1cb1ac751ab4a3e5576896b3eec6b902f7388c060dbd4cda18571e75bf1c9d77eae2b422c2a07c5e0a8bc9dfc45dac0e442a691bd1381c92ee8f00903defb494c4d54e4e6e4dbea795eabce5b5e810981629a3ab59a807ce74f669d315fd6e617906c861e9eaf186fd56e86c82b44ffed8d04a2484172d49d2bc3a267af94a63cf98c961a66847c40e2ddeecc4a6dfa077ad9c9b848b3b9c881ce814bbf6a07211af25ff569dc2faf9320a442d2496359934817459c9f27be55eace6cc37519781ea7560cd1eab2a472087319a65c631113dbdc9d22c2a197d35bfd340ead5986bf9e49f1d415b5abbbfe1413b52a247b279639bad472bc91892cad4079657cf5c91edb9802e854da200a43ca0add9fd0fba095f007f1c55f0003cc80db832e2f34600a1f831a76434a8e4dc98dd70be20438d9923cc534747f5ec84edc9fde874fb8678d0963a27645ec300d19901fc78e980314481a783ce0a25f3639fade20d290bbff7ae2a3e970b45c13c6f02f5336af404ceec3bfa17913dc509b44123c0da528f3527fbf9931ee365c9fa30cae9096b117a362934d87b9a73081d66f83b0f17dc558fc3f56b9877f882ed40842255ad026093406f16932b174717036c085cef942689b16ed6ccc8936ae3c4182b326650f02593b31c14b11240e64c5f2652c08c9527fdf9b019e36d891dadd7fe498ef951c4f19bc2c4bf5448b39206b0392b45a89926c41fd269d941295c248bd1c94cce16f8843dc5f3c28d37f39c6732c5b4aeb6651e1dbbc0fb259269288efbdacb3b1332bd68deba9c6a6ab1254546e0d60ff31d23d50a4dcef49a212f06633c9253ee91f2afcb970b971124cfd9da86aca29e08dbde2292d043a2ba8e7f6cb03c404ce3a605fbbb62807c4db903dfa2bb3cd7170f6845286ce22e12c9d4731c0bfbb0fd929fe4775d0a5e57fbbbb4a9d2794550048b594daa3b1c82ffc0d155ab0286821526a20afa45c943460fd7cbbffbfaeb1eb5702b5bb0aa3dc911d1516e3102359fa393c079e7ebba2b5b51a09f81488a91618c5d415102b132f52670f8938d71c043979d645acfece4e3671e4e2e20dff1b65b688c56162a2934867d6203508ca13e528e802956e5cea6b3300e8bb95c046747b2514a23b27158efcfef721a0af1f5492d6494a2c961d9c58ec4a3ee0c0c28fea6feb4baab1007086139b917d749838d3b636c3593df9d788094633e859c047e908856c1e87b6ad61e4929808e7f4612e854d1f18d900923b69a0199478470e2296fe158ebe421fcd63584dc0a4403bf2ff312de14484d0e7a0472b7a4b08164d0a9d1af005574d702f4223675cde0d08ccef4ad1c03735ad6472efd091788e53e18b1fc54496a627e240018cd3f857ce24265c67414749e279197187ad9368d6afc3ed9069ca5317fa8c436535f5e3afe7c5c579bd62d226ada2d5d5cc19fe8d04c6bb131a02e4a1328e55cea1b68e903ea92acbda9f5117ceafb7256ff335e46d2fd8a1e79f895c40a0c8291988f68480521e5338f06a28cfd3d3a2a78a488986c8daba3d01e9f26617ff949143527170f5f01e7b501099899353d01ac9ad8c5d6dfc90aa41e072d3880bec7859faf66026b8b2b37621c4e893706adbfec175dc111fc340bb8c4dc8f6312a36043866f830e24c5a6db64bf4ef7ec737fe3215bd631dda98921ccb09cc91755a99c9c3ae953d6485b7c84d5366b2a67ef8ceafc68a3e32e8cb1c946f9404f0e614e6371543111dc4487109d19bf8f6c2ec311d8cc759a1a43332522226d73f0a84b9eda1794bbff9cd42574f5ae08d76f8842ab0214865fbb80025b7b09b81e9005a5221519b72d3e941a90f7e90514b7c07459805afc45ff9c94a880ad01e20c73375778f779a15becd9ede47bb97bbb7fee922e6059380cea7790eeca5da9fef90db71b43f1463f95e3739794448eeaac9bc92f0842f6d5102497b2540c49a6c0996483d43a68a3b908b91899ce8529de52ccd70b648f39f1ecec50e05b03a13a36b86bbedb7dbfa367cb864a60069aea18c847bec0c52d6303df61e8395bbaf7e924d296990f6a4d0d3965e1b29aab03ba60e165fa647d7582cc77f6ca1735b8b48e69fc0401c711676b656d2271d072a5cd0eb0039c702db98d1de87f87b654a8a3a9ac414fe06d873bd2d687c4f4e1fce6bb412356d27c9c99f383d7038dc019bb8bede908cfc95f0df9fb99c62cf62fb28c5da7050a33c2933276113967c424add0da8ca82b0f6fbdca8699348eba212c17f7e1e04020b55ecbd7b7e6e159a72c050547e18d7f99cfc86c972b71ccd19ad46e44746a6326494a5b2fbcf5eefb8fe32a81380a6bf34f33eb4c5c561ff4c6f73b850cbb163269c3e644d938aef598db13aa9fa7b7e4e22d1fb4aba799cda195a102158e5d5a92cc24cba591bb1af83c0a729ff8ce6641b3f2e0f2e3ec6ea9b79c79267a5e17abc753c4f5190ac7b9fe6887581131a374cdf53a46178e0bae20c141d13e6d5eb1defe36d9a631241d2057318e0a998730eafa6e3ffebbbd666b27425f7fe8c3064b87e7de7b498155db3e0de508507db2ec84a1c1dc06fc740594d150b7c1c2929f674339bb370190f2fe9b21b2ed3aa877728361d58fcb4c612c19faa1cfa1cb93f6c60e29183e689dc7d139c316d5ea3a21e9d3a15aea66f7c33276e3303baf7dacc1b098c3d550ed50e00a77907feb926a575425a5d5cc45f4843d3bfd18ad02653756739330104471a73e4e047328b439c2ded9ff13b61adadfc9e2149a9dd6f9fd2e52d42ddd9ab833c17a71f67916f35fd3d7cb19ec187a72ff4154f9b724031b1d5795365abab8b6da3a03580694f3faf59850e184a8379e2b143b0caaeb6266fe5c36051be78ab70f62547c31df125a9c2ed7f2605d90c4b5f0b03ca7b1d18ed4a9c77398072749549bdb5b36c7560e2940887a43a6049aed71ccfc81f7526db87d0bb790b0ca9a4b3da9c20f41c0ca93c67fd7cafafe37829191b18cafbcf74f5201accd1eb547a18b6c311306bdc4f0aae47093d0966267b7dd19786cb81f135f4aa6acaae68a4a24578aac296b1c01211dfa229fbd098b48a806f52989631f7238ba39593d41da4b04a3000355a6eb737152ae906f0e450cf46bc87b554012fa11b09792886c4d5d8f5e2742034eb78fec7ef274e7586ad32966ddfb1fb41e604c2fab40bc1892799ed0f0bf824844bb01b18f77347bcff211cc9054a5246ee8b57931668e0ef3eee115d63f2760066d32ffe01427bff0bfe2bad50a36ba5455af8d7bab3581cff30977f26bd1aa0ba7040d443f1f5a7d02a3e6373864e5754e4a097574aab5e2f2f2503445a3923a19ee47007dcf9b3f6627b5966870e25e7d00c580de73af16887ee73b908cb4f8f06bd492f4946235d91816131430f74735f0a8253ce2b319fae7734066c87434077abcd8e062840870688f817fe420ab766acd938e564c24c063c8fdb678faf9453c8f41999ce6653defb54967eaa15fe98261c101c34edc0c60a77d44b8b86efe16891d99db2ce206060f537c6a6c70200a6790e892e6995f2b0fd668f2c4e8536fd212215f9fb8f932359156845a4c26ef703d789986f0dca4095784b2e3e938674e88b08016948aa1f60b97eb57fb1c18aa068d8b3868b7b73e07b1db215c29368aa7414b24b5476224f3bd6a0f18e319814917201d6d87ed0e9b70ba8f6f58d3d39bb43839c8afcb559ed7f91cc2da8040750ef1b7e562742be7add00be7077e95a4cebac60819b969c19c1d129f6470e0b4b54e513a1a130b360b8da763d14c4c987c22c222c44d2f1f2123916d757cd91351177b927632a5627366d73476a699fc9166e71fb00424f7aa518cf8198bc1efe64885dc7711d131873b917532fdaa2d621e46fdcf3b79dd313adc7b8879ab2bf3a36ba3cc9c257db7db101df59079fde6b096b0f2cb69722779f106c2460270577d6fca6e1bdfeeebbec3964fbc29b05ce6f9c1b3fb2b237ac1e19ae01f9021f05d7be815cbda6c9f2e93cde1d75de13043aed863386de14acba735f32af50f76a3fc7c3aaeb89ee06aae8ae61c1cec806e820eda00d3a6e3f0a725aa2267e22d317a7332ef14c9e0973a109131def5b1f8d331f6dab273b3673be4d6f4733b8d6af6dc2b3a385d8499190a8ebcb8b7946a65c332c32c8b0c5ca56fc62c81cd7e5672925609bec2e5b5065cc2cc1d32d8ce6e332b711f6de98910c0ba43ddce9966cb92cbe3ef45e82abcc96e15bf612d37e008918b25b4cfb303d4d2a322cc3b8fe6505022eeb7ce22344a3902e285cd0078d7af51d899c465c3c7e883331bb9e61347082b4687138355da1c24cc646d92c6ccdba8832537fce9e10c7b808d19ea4ba372bf18eba6d95c337c84c0446a6e3c8965e62f09663abbb339dae3c19dc2b293bb749e6e1905fcb7fc4221077bf54fc777dcb274068b1dda9ae282b7e92ddcce105054aaae3e2d16edbf2aa56a19bd7ea0cec43106817872936544f5c8c88dda187b1429046201c3036a86c6955c106494c46467e53a335b6ee9e75887253943698cf7b38918ee15c0861276edb644cd92b1fbbc16eb49cce3067581334a7a2291bf97d0c8906d34945a5e40269b90d800e45691afd5eedce7c6da1ead7f5390f0146e7c9ec20fb512184bd7085fe216b41111d054dcbfd7047e9c21cb2d6a30e4c1382a002520118d9ba2d9f9bafc3ce5f6fc4fb0c6e955b1613fed9bf6e3d7996a9e930dc4434bdaabc6520783b4a99bc040b1ec6acc542def34eff6f7c57a936094ab04c83cd89eee66e20992e9ee82d3ba967164f493dc1d0e4402ec1cc4ae903360093a7ab158ff4e20129add9d9d51296ee32461f3eeee5fb8ab0a59334dc35f0cd4b4390e2ff6a387bc98dd6c85fe4d917c2f9aedd3e6fc1980b8bbc125d8d3ca55d2cf2695637f1ff9e4ef06ae970ab126a5b23710b50bc8af65d37e1fb302411a316c16f9ff1c3e87b8bd5170006b43285c96345c463e4e2a822d5ae2baaf9f95fe7d7fc1a63d53ca076f517f3ba1e89b2e7fc634b99feb5e8033566a0a3c1c07af3a2e8900ca01eef2690b993f3c16b001e6ba6a920a2b45de3a0ae70cdb783c92dd987fbe29fbafee54b5c8800ac1dca44ad7cbaf3970de7138e8437770f13ba09cfead5702b8d85c93a1ea55677a165a79ccd50bf018cb5c1595f2a59c06fc953137c9392db616f79272752c22b70d38ad559ab7a59dd8462e5898e6b16dd6d421ed4c1a466ff8cc1bf461f29bdafd92dd6e29fce9cfe42a4a19621d1d803f3f1b90075ab6fd137e39ddca0497a584f95c72c45601e944e1b25f4a42719a884a11838738f80ff82aef6f54db7e4a216125fd3b88f2c750f84a0f64f2161ef673ba6d4c890abac33737155a05ed0a46dfa8c4df3fb4a87053540e16068c0e8b8c5ff7d0cc47c0ac47bb07bcee9bf9f75626c560686ec26516e203259e7f2891263cfd9454b10020b44c79b6654140e63a461b083cd71d12c6695c524f89106c5851b3a05f725d55e87535a14a89a7203587d4498fed042ff0d2a454f43c9f30d4986fe5d5d9b3f014b9d18e10ec96f2f32195b537aa8f8003bc408834c600dfe3dd192b58627df9fc7d78d126f27e80be29b41acef7ff5e73ea205f720d79136ed5e8334c88ab7ca2789c581fcd61a2bb78659f9ea279df5962c34b96867de311f210716406931ed4780ba5f3ef225a4839e5505cbade048f4e442fae1664d39eae72112db201f280b61e6036d6ad4b785130b36e2b8ba53e0be69027f007fc55581898e8eb61e40e142e3400a76164eac2d749fc459f59817c36b230612f414b2b7a0bc2a134f11a0a257ae06a48ee11e807cfb0071f36d2504d006654442f88d4bfd3aee5760f97fbc10b69eea6b0dcafc5e8b196fe43af880c81941a420ea7669804710584ca16b6a276d180a63834a0b8826fbb01afd62a8c0b9691931e79f3310c7520a6d61bb82e3b3ee47cd15a9ecc9b7a60bb3690343ee371ef1f24a86f1d95ac57cb58a44d600e5fd0e30ebd0b70b7716fdb73baabf9ab39f4188af93567fd5acaf8b2c639b0f33d464b65b85275e1f507058a4682a7be7cd50851a40bd4dbc8fa6612e16e78961c51f5fa2b20b266bfefd70a210db0bdd5ddb7f7a380da5fe218a07b87c3a17600c72107d5d9f0772d7b17eba134d4acb976864d7c7b55b8af57101f2d5bba4de9d28a47b7ece84691599527710f3c5de4d10f8249f664c78d4a9392784e1823e7810c51e7332865eb36fc836324bcebc46371fe19c02da2d12d0a2bb684b8ad76538a594cc7ef94c87451ac58f105e3b63b80d78878571831650666f3a1bf6467fa725043db67eb612622d24ea9f61a8bf58bbbfd6bbd60fa017f6fa8a005824ad4c30738a4214470de0a7611895d501edc17fc1e0f21d04f2c54177148e6a3e78e4b7a41a87332737d414a9ff758b117bcebbfeeb1ed5601caa7b59c4d76585f8b92ee2fb59893b4adb991d98f3925823a4b90fc00ee2158cedd71f9be80587e470b010a4c9f085959d9e5e1b49474f4432dc4ecb7b2f22ea7b2b556e64afbba5fe3884f3da090dca44d02a7ca41895ec9aba669dc8b66e5a5f9a8728028f368492fdbd5667b40148ca0ce3e23f08a3413ac1b799f59d408b7164029bc79e00da1152c7195e34cd789658c2991d70d90341cbcc1a5a10bb7b0805340aceb402a2cc127d1432fd5eaec3b001164e840246331a6d2a27a777a6e6a3f051fb5acfa24927ceb1ad14e41f2d2bf085c60c38e6c81363bb77bdd277985d090d6cedd5c26dd90905a9b77591ec679ff5d5a8f18e0006c47e736e6689cab7081079d632a144620ad5758f1c05bebca3b05c60cfc71190def70262b2b2a401d5834ebc6741f25f7018c39b6530a439acf53d4eea679a35fca85f8a717a131dbb8eedae55f29a9b1d29d619626f5a9a332153f9566b662dc6778813d8c124738d7286a3692a5a11b4681dc47cc412de51deae966a292f9ac5c7c664b012369e49ec8813bc895409e5f24a671d6241dce8098c27bb43256765e16fb49f65f6eb20b196bf2168cbbdb7d4266562b9057ecf793530ff4e1807e9d3cccdc7c6181841e758c61cbbe0fcb6fb5cfc3d1b53dce6e08ca741be58c34a4653ce62c60edb584c487acb3cf9cf716b8c77a684b4eb0cf71c8f3cd2721eaf66af3e58205ed9223bd8780b1264b39f368cc98968b01bdd14192b03ec141c9de66ae14c0ad5eaa6ce0dee8a6b4d9d725e69ee6082d2b9e35b4712f328201ebf2b48e2d48c502c3ac844449b4d78b219f43849a7978cd5e670a8286cfe67098590298a51edf811a01fc55ff9f235dc8d61c5c113da00b71685705df59134ad9b722bcaadb998259024247db00aafafd4297f9ee5266940163d5c45f2529e1bbe1f40d554b1662579fc85856eec7ecd7dfb1bc34f535d7c1d652c1dc97b784f33ffa65ce8a15dd122b46869a8d9266a503666fd77fbf6a4a189f477ae10dfe49b8098a5e08f41a7300df9d86978f173a65e60752a0d8f163f61f5c5d2bdad1ac350a07e8eaefbb6256b2ed9f98aa7078c28c2e1af4f5fb3f29bacf88aa94f449f611c9faa343abe549bab992412becafb199a54249fa9d7a8424fe8e29a75cf3af00918dd213e711ca1c5358fb675e7baa8135f16da6bbad5c1037586d802075956286029608d8e8cefbccb7d508e556f2713814896f49fabca0905fd0789c45ec6c417a240007891beb4a157eb87bf0814a866436906293224f2c1a82743fa28d9fd7fbd746ecec5c3bd8acce747a84342ca78df5f904bc08b3278bf3e866b3079596f771ed9d711cfecd0f4d9e67fc22d4e2e924492e5c7267b0af8b9d12a05130a1673b3004679618dc710728ce48b8d2b871eda13ca9e374460e02e8e674a08aa292fe12a09b49e76f65c7d1e87fc473b6c4f62b16f3f73ef1e3436bcab1ead49b9558a7bf09a6985c33185a17145dfd69871291a0d0aedd22ced17acb3e619fea26e508d08fe54fbe500f42c98cab6f0207f721095895c47095ad4e6b6edcbf1ca00f74661a09db8e031eeef705f8035dbb8f0448829cb68ba08e1fc59574a63f348a3c7094588d057aa8bd73e132387b19eef06ff6d91477feb090db14d4b1f72ea4f51aaf3928c86596b59fcd0076906ff9f47b10e6ff17b2844bbf2e48a1390aeb262c21b85ca3de09150e18bce0b7f7e68320c674eee18decc13a5a3f6710e1159227853958d9f967e8693a74e07d5fa6c304aab410374e8d46d4031c014dac41f7bca03fb0a70a36d480d25aca8c64cd14d820ffe1d99994805dfa3e047a91237c84a7fc492e78beddc898b7bb13f9560ff40c9d28b04374f71882280b80f468b1af464d0d5ec9535e232e7276525352e87b10abf5db1a53d8eb3f0081b13a3989e2bed47900bc74e89340a402edb72d8a501a3f117b97f43e44e098453f31a7f777a3c68ca56513efa84c8632b0a484ff71e2d01314415a68ee17717fbcbecc95db32c838d581ea78a11c9c4c9dd84c38f92b18e2bd7681093430d5be29c4b1bfb440872966b764c44ad723d61dad41537fcaa11f72d8928221d1419a10ef6293158e76af2f0498c60fe78c016e70b0be5d2f162cdadd9341981383b9a8a49e4e488419c9882620f7cf7f50bd962b12329ab313266e5fb25923ff54912e2903444893c1a475646b995516cad92af8de20b6fd6b123788e877d9b9f0074ecc65f3633908f7165bd044689fccf738d821f5e14ce8a98b8ad207feb9c2919474dc8061ca6a3f9fae23d526c85780f9cc1af2089e0e3b5eb0ca9e437f469654b26942e2a664c023d71cdb5a813f5f5932fe1380c440f51e1c1cbfea47a021fc5fbdc5c7fbe28604ed866e5ce596e6b7bc3d4b24d2979ba7195d0802a57948c9e16a779eae89c7540e4408f46b5db9296b281855cdaee85ab1323fa4cab5b7118468369e0f55557ade5f7e361409e8cdea765ae5510e74c4a62d8b56c2c0174fa2601c5d76766165195efe71294efc17e52ca05ff0074c5513868694e0fbbf183564c26ce949a585378bade9ddd39c66eac1b904bcc9a7026d77eb972de3db39e69f1e7866c93ee77e40a14a957827a41a4828dda3f2521fa02694adc5d678f07a3184a03c048a73f791e9b89868bd6f2b2f510fc914042c9608836762b81388dd19c5de7f000345d8b8d0151d3e07b98bc8a11b736c794f5449c36f149026f2b2eeed2b87064d7aebf35879ed2683971b2243ea1fb53cc7a0aecc6c8b70d4d931b7916e68375b6dcaa77fff6c976a884ad097b23583f3e634346c89b69fd1e0832eb026187cd69232d532fc14f493990923b42f8f177082fb6c9f8b51bb75008bc939005548771798e4c2815357fd74b44c7af5b3cb4ad1f1ad86a1e4a692f113f1b199c838ad41851411d6b848fc90daddfc8acf2ad06b7d3a3c967e485b675c5eed553999df84081f4d345fbbbab405ec252e87a1128589db23bfcb7a10a34bfab96707de00e68dded492d1b3eac88d7d05c3fc5df03337e0d19c5eba1f0970e7a1edb4259f431bc4ae266178acb5382ffdfdff91ba6a9d882eb3e4fa712aa5ef64f56a1a1d7788f143668365a75d14d5d3c506cdea26a2a8fdff7f1640ae96adb691cc21a2a622e2f7ba6a8edd87b5112cb729f4548e6c9793dc20da8ff96823170f463aa8a397fcf6b0f6952f4b7419b38102c09cd97363f6b45491ca3cfa703baf4790b13fc575fec2790c6d30a5714bcf3c6dabacf6a7eb23849e07d358dae59dfb920bfe85569b12cf6cbb5508d157b92bcb4c91395affde1c63b34dd325c54d9c69e066a26bd4778ea66109374c564c798a8c4ceac2082bb16dc4e9f3b89bb64a0ddac6cbb1922b62fdb2edbaa2d4ce0506051d88abc062f4f5fef5492b15f8814b8a96bdfeebf4ab2a803c7b259f30e4eabd3ab5298b5fc30ef4cb90042f5704b36cade9ed4396a32085313a01c2012007b88b3fa20d547260bda978c3e000d7023dbd9eb9b451391ce5e3d77392bcf41b6b97a1e51686fbefd537550bda8915c5cafee740a0af6c719741411f57aad9c86068b20a256c9fb2ed38aa238cd533d9367f2c7654326652375aadc81e7a1549fe008b7e314c87039d7224cbcb6549faa9182a590511eae2b7bd2790f2beec23116eb2ed6d45a8d007dff211039f0fb48c239e4b80c0033012e86dbea30d7aa279dc52ea72b012f08d4ea0c8acd0118c273ad3c2632d14036b5459d0dea1cd0fbe881a046abc712ae4b02ff0bf952f13e7f610045246f84ea0090396d9f1cce6eaf36f24989798373116256edeb5fc3c4dece5ab2c12fb6288a0c622a3f2885387a82d2f8c8b0d115761573ca96364ad67483d5fffa1cdf77981f842170ff78c5000f5dcd9b7383831cc768b3a2d142ced4a91ffe85acf980103f248bf161758a0e56685e77ca086a0a627279b37c98b7d63cd9e7e6e09c5d43a0c1561359e37286a9bd27e4b6aca28974378147d4f201338a2e2793ed0d1c299582d8bd60909540f41b01e7eeabea7ef911b93800ec77f23c9da83bf83c57daeb930009aaa8fea837f31ac63ece67fe9bb5ee35f1cdb05367586bed3b44006eb3e8fe55207d105d5db8d8aa010aa2f5b8ec268531cd0df2e68f81c8d925d5415997b8c60c6db343a3791d080196aadeeb677a54bc1eb41733efaeed723e7a328a0e56abb496633db6a2f993d41ab17be4083c3ace4d08bcffd361e24d897dbe6d5d1bee7a10da7f56d45c0122b30a2719a9007497bb6fb2884f5b551b4dc37bc61f02161f5b5f1c2381ccc1e09c59936e0a20c2bc86a73bae3e22a3e94774b9a2f5ee67b857ed2dfe9639c73ccdb69c558010138e901869ee41a1f9f2542414078cc9c81258747a8013543ea79e48a0a159f69fd045e68fca2be5926a84bb33ee694eaa31dfe943545518f2728eb5fca10da4195367836b59778bf55d524eff5a178a21a0eea96c9cb59f956b5a9a0d94a679d292215e78261e8661d9ea7d2697c40ccf781bc1470a8738023edf23ae3e4adb4584be7a65cc74835fc0e901f27c09e3e64c42548e642b83eacb5ce23ee3e6ce0a426ce8b0e521fb687bf4d659307fba5babe715a40c6f282b5021976e70d5aa1e9dd4287c016ad617d8a34ce5864d56b5d5f906d4494f36179a149a6e7a89f012c9fb2ca7b128a13bbf5a2a5bb59c29f61732c9b1fdb055500b1bb2c27eda1d23cb505c7efb5e75e421df23bc4b5d1176026cf1909be3ff064aca115eb7ae4286aeab97dc35e135f2a45d6dca753bf012be3905e30d9f714adceb59a54d55e01c92f10c8540ca321ef13c493693257ddf2d823ba640734fbb7ab3e59e82347017890659e57bb542a77930891d27154504554d182c30adb94292409c0c95117dbd873bc120477c8371bc6c9f0b425a14ff81a296bfd9ee636162dd9579e7c7994985dd5dcec0dd9105753a15c851bd7276bcb9e65f9eb761a61bffc7c2b670fe865ee0a968cd31e34552b66ce68b4977f5490e33cfd4c8ffd821557309cc8a04db7fb26d0899f4c7782cfd18e371b1af024e5c4921bdedd6913be3d019f1cfd5e0d5133dece58b5219166323fd7c736fe1482f683bb9d7ab64667f5740ce41efe4eae3c70afb419e748e2cfbab4657ebef8341df2ce042f1e3db01ce79783d2f9fa88d596395b9f1e52facd9551f43f33a4a48286ed0a121727f1eda4fde87fdb1ffb84528e44d4b609e7622290ba3d7479246da49d4ea73c8cdb088744ae508d8b2034c21138f64fbd00896008aed594a0517f5a6f04177b488718f6f8b1990b1c4466b09e381a584d853f47da394956060cdcdd848c6ab6063c96a9248ec1ca0b5d73ab10669bb94ee868dc889e0d55172e9decd54df7f88e2d785d863d498f094bee8213a2fd8d755f24b07428de29d5edc162c76e4893682fa3448ab23d2e8f9faae44eb14586177f01639292352fe1d53fe60c77a24f5d487dfa1673658939f034b8cd106192b89cf3f85de02d38ed6015592b9bab91a59b8645daac840feec1e68cd82570f282c73cdf2ad1cf2e2d979c930ce58372ba00d7fbaf7430fe3c01778991495bd3b8e117b632005d9b780d2dd6f22fbcd24c40ff53f4c07149aea81dfcf7f41ba9cafc56d3004ac823a0e833d8bfd9fc7c5ee526e35158961dd1167129f1e7c6f4f829f61d9774d440c4ae8ba93aa7db4f89dab9220051033450566050b2756aa7bdad02ca8d780e0fcc4bfe2aa15be92a9350fc0bd7f50b10f6e6d55b80977e792c9438aa67f39e086928c7ad2cf479de934c5cefa6c87dd5c12f01556a89c34a3f2a485255c08c36cd440d4ab6e24605aac7c1c009fce2215b0bbd90ac24846b1eac3fe22580e36fcece0332871c452136ff74d1814ba80ba1ca8f0c66c999d44744c0a389f548acfdbae98635189829a811d9b24fd11c7dcf2771dc778e4aba015561642b7f002c03cd4c862e1212011fcb7fabd969ac4fe4d25d38dd4a6dc4135dc644452c1e806bba5df18451259cd67ea3e0d6711776ccace403df54c43f64f4a0fe8520a6b1ac910e95bf434ad17e451dc223f9e7545e78e162a2622a3d7d15d03dbc5b944ffa6168b4daf3dd54c7d9dafd14ff2c188368b1181047b6e4594f37686fd75d05835e51a7bcccc1b9b9a6784f75e85b9e7c8c7e935e66e0d405b475540a5330e6da873a04707083a6378c1eb645111889ddcbc27dfda79d26d55a0985d1dc0789491746e169adc946f744fc24efb46c31b8eca076a08d113899cb929d75f12ec23e2dcb034fb8357ee5d719d96d9c8dccd3b6be5484722b50c02757dca37a1f301d203f24e4cc6c7411518b7b78a68a7c3be45ac349ae0a4ef228ab81248f3a48c9f65b9830629b946b9c000019a1604e4ba02d36932c11f502722c4fe144fe982a92922801c4b1069b92aeeada610a9dca0da3a0c8dc27f940d29ba9dbc6`\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5f6ba2cc&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5f6ba2cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f6ba2cc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(38768); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","require","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","isMobileDiscover","window","okxwallet","mobileDiscoverWallet","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","core_1","constructor","provider","STARKNET_CHAIN_ID","getChain","chainId","OKXConnectError","OKX_CONNECT_ERROR_CODES","CHAIN_NOT_SUPPORTED","getAccount","_a","_b","_c","_d","_e","account","session","namespaces","NameSpaceKeyStarknet","accounts","filter","startsWith","accountArray","split","address","extra","publicKey","pubKey","signMessage","signerAddress","typedData","length","signData","ret","request","results","JSON","parse","errorData","error","sendTransaction","transaction","transactionData","data","stringify","transaction_hash","signMessageDeclareContractPayload","payload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__importDefault","mod","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","utils_1","packages_1","provider_1","starknet_1","wallets_1","init","opts","logDebug","checkMetaData","dappMetaData","setGlobal","getDefaultReporter","configVersionAndSide","name","okxConnectUniversalinwindow","initialize","rpcProviders","events","default","connector","OkxwalletInjectConnector","AppwalletConnector","TgwalletConnector","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","location","isSpecial","includes","getOpenAppLinkType","args","chain","reportLog","connected","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","safeJsonStringify","validateChain","UNKNOWN_ERROR","keyArr","keys","realChain","replaceChainNameToChainId","assign","redirect","sessionConfig","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","emit","topic","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","forEach","key","index","values","disconnectInner","getCurrentConnectionReady","connectAndSign","signRequest","updatedOpts","openUniversalUrl","isMobileUserAgent","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","push","creatNotSupportMethodItemReplay","setTimeout","syncAllAddresses","syncAddressAvailable","wallet","syncAllAddress","METHOD_NOT_SUPPORTED","on","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","message","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","url","hostname","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","params","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","console","log","Date","now","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","addressArr","slice","join","logError","parseInt","isNaN","Number","CAIP_DELIMITER","a","b","appName","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","method","switchChainId","decimalNumber","toString","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","toLowerCase","messages","typedDataJson","err","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","methods","getHttpProvider","input","trim","response","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","Error","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","i","charCodeAt","padStart","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","timestamp","raw_data_hex","signature","signAndSendTransaction","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","NameSpaceKeyTON","validUntil","newParams","fromAddress","ton_addr","from","boc","BtcProvider","NameSpaceKeyBtc","TronProvider","types_1","core_2","IJSONRpcProvider","connection","super","EventEmitter","connecting","hasRegisteredEventListeners","setConnection","arguments","open","close","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","id","isJsonRpcError","send","onPayload","isJsonRpcResponse","type","onClose","code","reason","_error","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","msg","setup","$emit","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","runeid","amount","ticker","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","Uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","res","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","catch","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","okxLogDebug","OKXTonConnectUI","actionsConfiguration","tmaReturnUrl","uiPreferences","OKXUniversalConnectUI","onStatusChange","walletInfo","onModalStateChange","state","entries","substring","uri","useShortLink","isPC","items","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","sendRunes","inscribeTransfer","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","substr","buffer","blob","Blob","reader","FileReader","onload","base64Data","target","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton_proof","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","useMini","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","NameSpaceKeySui","getPubkey","_1","caip","getAddressForChainId","ns","checkChainId","txhash","checkParameters","psbtResults","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","suffix","unexistKeys","namespaceKey","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","platform","maxProtocolVersion","features","device","connectItems","tonProof","TONCHAIN","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","isHttpUrl","register","body","onError","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","StarknetProvider","_f","NameSpaceKeyCosmos","algo","bech32Address","hexToUint8Array","base64Encoded","chain_id","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","hexString","arrayBuffer","byteValue","SESSION_CONNECTING","ISignClient","metaData","openAppLineType","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","setSessionConnectingListener","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","getOKXLink","universalLink","getAppWalletShortDeepLink","clientId","fillParamsToSession","connectMethodsResponseUpdate","isIos","openOKXWallet","requestId","onAck","Engine","accountChangeListener","allAddressStr","syncResoonseToRequire","getConnector","InjectConnector","IJSONRpcConnection","opt","connectSupportMethods","bs58_1","notSupportError","errorItem","callBackParams","solAccount","NameSpaceKeySOL","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","NameSpaceKeyAptos","account3","aptosAddress","protocol","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","walletName","deriveName","addresses","addr","ci","evmAddress","freeze","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","OKXWalletName","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","AptosProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}