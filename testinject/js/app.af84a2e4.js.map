{"version":3,"file":"js/app.af84a2e4.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/wallets.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\n// export const downloadUrl = \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://web3.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileDiscover = isMobileDiscover;\nfunction isMobileDiscover() {\n    return !!(window.okxwallet) && window.okxwallet.mobileDiscoverWallet;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nconst wallets_1 = require(\"./provider/utils/wallets\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            if ((0, wallets_1.isMobileDiscover)()) {\n                opts.connector = [new core_1.OkxwalletInjectConnector()];\n            }\n            else {\n                opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n            }\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5f6ba2cc&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5f6ba2cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f6ba2cc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        // walletNameKey:string = 'walletModal.mobileConnectionModal.connectMini'\n        this.walletNameKey = '';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache instanceof Object) {\n            try {\n                let topicExpireMap = new Map(Object.entries(topicExpireCache));\n                let lastTimestamp = topicExpireMap.get(topic);\n                if (lastTimestamp) {\n                    if (Date.now() > lastTimestamp) {\n                        (0, log_1.logDebug)('checkExpire: connection is Expired');\n                        isExpired = true;\n                    }\n                }\n                else {\n                    (0, log_1.logDebug)('checkExpire: not same connection');\n                    isExpired = false;\n                }\n            }\n            catch (error) {\n                (0, log_1.logDebug)('checkExpire: cache error');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        try {\n            let cacheMapCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n            let cacheMap = new Map();\n            if (cacheMapCache) {\n                cacheMap = new Map(Object.entries(cacheMapCache));\n            }\n            let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n            cacheMap.set(topic, expireTimestamp);\n            this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, Object.fromEntries(cacheMap));\n        }\n        catch (error) {\n            (0, log_1.logDebug)(\"update cache failed\");\n        }\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.8.2';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(38768); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","log_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","appName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","stackDeepLink","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","downloadUrl","shortUniversalLink","standardUniversalLink","okxDeeplink","location","hostname","includes","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","getTagByappName","OKX_INJECT_WALLET","OKX_APP_WALLET","OKX_TG_WALLET","AppwalletConnector","appwallet_connector_1","enumerable","get","iconnector_1","inject_connector_1","tgwallet_connector_1","ws_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","checkMetaData","protocol_1","dappMetaData","OKXConnectError","OKX_CONNECT_ERROR_CODES","BAD_REQUEST_ERROR","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","__exportStar","p","prototype","hasOwnProperty","call","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","isMobileDiscover","okxwallet","mobileDiscoverWallet","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","values","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","core_1","constructor","provider","STARKNET_CHAIN_ID","getChain","chainId","CHAIN_NOT_SUPPORTED","getAccount","_d","_e","account","session","namespaces","NameSpaceKeyStarknet","startsWith","accountArray","publicKey","pubKey","signMessage","signerAddress","typedData","signData","ret","request","parse","errorData","error","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","i","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","constants_1","eventemitter3_1","storage_1","utils_1","crypto_1","jwt_1","safejson_1","log","report_1","url_1","connectionSplitPackages_1","appname","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","reportEvent","OKXReportType","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","Date","now","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","safeJsonStringify","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","arguments","input","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","id","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","params","messageId","method","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","message","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","toString","restoreConnect","Error","disconnect","saveContent","connect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","code","timeF","sendFetchAndConsumeMessages","init","sendRaw","bind","checkExpired","checkExpire","activateDisconnect","timeTh","send","catch","err","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","event","rawMsg","replace","parsedMessage","CONNECT_METHOD_RECEIVE","sendDisconnect","CONNECT_METHOD_DISCONNECT","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","msg","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","OKXWalletName","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","wallet_info_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","wallets_1","opts","setGlobal","getDefaultReporter","configVersionAndSide","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","isSpecial","getOpenAppLinkType","args","connected","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","UNKNOWN_ERROR","keyArr","keys","realChain","replaceChainNameToChainId","assign","redirect","sessionConfig","enable","client","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","connectAndSign","signRequest","updatedOpts","openUniversalUrl","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","wallet","syncAllAddress","METHOD_NOT_SUPPORTED","on","listener","removeListener","off","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","console","sessionProperties","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","parseInt","isNaN","Number","CAIP_DELIMITER","b","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","response","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","tag","OKXMiniWalletName","OKXInjectWalletName","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","charCodeAt","padStart","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signature","signAndSendTransaction","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","from","boc","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","type_1","action_1","content_1","type","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","BtcProvider","Engine","connectionManager_1","sessionUtils_1","useConnector","connectionManager","addConnectionListener","getConnector","accountChangeListener","setConnectionManager","hasWsConnector","isWsConnector","getTag","isInjectedConnector","universalConnect","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","walletName","methodsResponse","connectRequestMethods","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","title","document","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","restoreconnectFromTopic","namespaceKeys","CONNECT_PROTOCOL_VER","jsonResponse","OKXCONNECTOR_JWT_WALLET_SIDE","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","utils_2","btc_provider_1","disconnectListener","providerMap","Map","disconnectHandler","walletNameKey","set","NameSpaceKeyEip155","SolProvider","AptosProvider","getInjectProvider","mapKey","entries","getVersion","responseItem","required","requiredNamespaces","optional","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","sort","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","TronProvider","chainName2IdMap","useShortLink","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","callForSuccess","call_for_success_1","web_api_1","request_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","connection","super","connecting","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","okxTonWallet","tonconnect","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","items","needProof","restoreConnection","nameSpaceResponse","TONMethods","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","runeid","amount","ticker","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","res","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onStatusChange","onModalStateChange","state","substring","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","sendRunes","inscribeTransfer","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","bytes","substr","buffer","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","publicKeyStr","issuer","multicodec","encoded","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","encodeTGParams","tgUrl","utils_3","crypto_js_1","subKey","beforeKey","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","getPubkey","_1","caip","getAddressForChainId","ns","checkChainId","txhash","checkParameters","psbtResults","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","suffix","unexistKeys","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","pendingRequests","beginReport","handleResponse","bindRequestForPromise","clear","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","onError","parseError","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","signedMessage","bufferResult","injectResult","allResult","signAndSendResult","SOLANAMethods","StarknetProvider","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","topicExpireMap","lastTimestamp","cacheMapCache","expireTimestamp","fromEntries","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","buffer1","buffer2","mergedArray","array","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","hash","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","path","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","lineType","localConnectRequest","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","chain_id","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","stored","localAddress","localItem","connectEvent","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","fn","attempts","delayMs","lastError","delay","aborted","timeoutId","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","WS","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","readyState","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","removeEventListener","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","IJSONRpcConnection","opt","connectSupportMethods","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","_provider","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","buf","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","onAccountChange","newAccount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}