{"version":3,"file":"js/app.94efc2fe.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/bridge-provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/send-transaction-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/models/bridge-connection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/tonsdk/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/browser-event-dispatcher.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton-inner.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/rpc-parser.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/constants.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/index.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge-connection-storage.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/url.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/tracker-constants.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/types.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/address.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/ton-connect-tracker.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/feature-support.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\n// export const stackDeepLink:string = 'okx://web3?stack=true'\nexports.stackDeepLink = 'okx://web3/dapp/open';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeProvider = void 0;\nconst bridge_connection_1 = require(\"./models/bridge-connection\");\nconst core_1 = require(\"@okxconnect/core\");\nconst bridge_connection_storage_1 = require(\"../bridge-connection-storage\");\nconst constants_1 = require(\"../../utils/constants\");\nconst ton_connect_tracker_1 = require(\"../../tracker/ton-connect-tracker\");\nclass BridgeProvider {\n    constructor(storage, appname = undefined, connectors) {\n        this.storage = storage;\n        this.type = 'http';\n        this.listeners = [];\n        this.walletConnectionSource = { \"universalLink\": core_1.standardUniversalLink };\n        this.openUniversalLink = false;\n        this.engine = new core_1.Engine(appname + constants_1.OKXTON_STORAGE_PREFIX);\n        this.engine.registerConnector(connectors);\n        this.connectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        (0, core_1.getDefaultReporter)().configVersionAndSide('tonsdk-1.5.2', 'dapp', appname);\n    }\n    static fromStorage(storage_1) {\n        return __awaiter(this, arguments, void 0, function* (storage, appname = undefined, connectors) {\n            (0, core_1.logDebug)('bridge-provider ==>> fromStorage ==>>storage:', storage);\n            (0, core_1.reportLog)('bridge-provider ==>> fromStorage');\n            const bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(connection)) {\n                return null;\n            }\n            const provider = new BridgeProvider(storage, appname, connectors);\n            provider.openUniversalLink = connection.openUniversalLink;\n            return provider;\n        });\n    }\n    isCryptoEnable() {\n        const cryptoEnable = this.engine.connectionManager.getCryptoKeyEnable();\n        return cryptoEnable;\n    }\n    connect(message, redirect, openUniversalLink, tmaReturnUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>message:', message);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>redirect:', redirect);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>openUniversalLink:', openUniversalLink);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>tmaReturnUrl:', tmaReturnUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> connect');\n            return new Promise((resolve, reject) => {\n                try {\n                    this.openUniversalLink = openUniversalLink;\n                    if (this.openUniversalLink === undefined) {\n                        this.openUniversalLink = (0, core_1.isMobileUserAgent)();\n                    }\n                    let tonNameSpace = {\n                        namespace: \"ton\",\n                        chains: [\"ton:-239\"],\n                        params: message.params,\n                    };\n                    let tonRequest = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: [tonNameSpace]\n                    };\n                    let engineRequest = [];\n                    // Easy to identify tonsdk\n                    if (message.params.ton_addr) {\n                        engineRequest.push(message.params.ton_addr);\n                    }\n                    if (message.params.ton_proof) {\n                        engineRequest.push(message.params.ton_proof);\n                    }\n                    engineRequest.push(tonRequest); //Universal data\n                    let config = {\n                        dappInfo: message.dappInfo,\n                        openUniversalUrl: this.openUniversalLink,\n                        redirect: redirect,\n                        tmaReturnUrl: tmaReturnUrl,\n                    };\n                    this.engine.universalConnect(engineRequest, config, (info) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: info>>>> ${JSON.stringify(info)}`);\n                        try {\n                            // const base64Encoded = encodeConnectParams(info.connectRequest)\n                            // const deepLink = getAppWalletDeepLink(base64Encoded)\n                            // const universalUrl = getUniversalLink(deepLink)\n                            const { universalLink, deepLink } = (0, core_1.getOKXLink)(info.connectRequest);\n                            this.tracker.trackConnectionInfoBeforeJump(info);\n                            resolve(universalLink);\n                        }\n                        catch (error) {\n                            reject(error);\n                        }\n                    }).then((session) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: success>>>> ${JSON.stringify(session)}`);\n                        this.connectSuccessHandle(session);\n                    }).catch((e) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: catch>>>> ${JSON.stringify(e)}`);\n                        const errorMessage = {\n                            event: 'connect_error',\n                            requestId: Number(Date.now()),\n                            payload: {\n                                code: e.code,\n                                message: e.message,\n                            },\n                        };\n                        (0, core_1.logDebug)('bridge-provider ==>> connectListener_4 ==>>connect_error:', errorMessage);\n                        this.listeners.forEach(listener => listener(errorMessage));\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    console.error('bridge-provider connect try catch error:>>>', JSON.stringify(error));\n                    reject(error);\n                }\n            });\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    disconnectListener() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnectListener');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnectListener');\n            const disconnectMessage = {\n                event: 'disconnect',\n                requestId: Number(1),\n                payload: {},\n            };\n            this.listeners.forEach(listener => listener(disconnectMessage));\n            yield this.closeConnection();\n        });\n    }\n    connectSuccessHandle(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                const namespaces = (_a = response.namespaces) === null || _a === void 0 ? void 0 : _a[\"ton\"];\n                const payload = namespaces.payload;\n                const wallet = response.wallet;\n                if (!namespaces || !payload || !wallet || !payload.ton_addr) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                }\n                const ton_addr = payload.ton_addr;\n                const sessionConfig = response.sessionConfig;\n                let itemArr = [];\n                if (payload.ton_addr) {\n                    itemArr.push(payload.ton_addr);\n                }\n                if (payload.ton_proof) {\n                    itemArr.push(payload.ton_proof);\n                }\n                const tonDeviceInfo = {\n                    platform: wallet.platform,\n                    appName: wallet.appName,\n                    appVersion: wallet.appVersion,\n                    maxProtocolVersion: wallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const tonConnectInfo = {\n                    type: 'http',\n                    lastWalletEventId: Number(Date.now()),\n                    connectEvent: {\n                        event: 'connect',\n                        payload: {\n                            items: itemArr,\n                            device: tonDeviceInfo,\n                        },\n                    },\n                    connectionSource: this.walletConnectionSource,\n                    channelId: response.topic,\n                    openUniversalLink: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n                    dappInfo: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.dappInfo\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_2 ==>>storeConnection:', tonConnectInfo);\n                yield this.connectionStorage.storeConnection(tonConnectInfo);\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.addDisconnectListener(this.disconnectListener.bind(this));\n                const successMessage = {\n                    event: 'connect',\n                    requestId: tonConnectInfo.lastWalletEventId,\n                    payload: tonConnectInfo.connectEvent.payload,\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_3 ==>>listeners.forEach:', successMessage);\n                this.listeners.forEach(listener => listener(successMessage));\n            }\n            catch (error) {\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>error:', error);\n                const errorMessage = {\n                    event: 'connect_error',\n                    requestId: Number(Date.now()),\n                    payload: {\n                        code: core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                        message: \"Connect success  connectSuccessHandle response error\",\n                    },\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>connect_error:', errorMessage);\n                this.listeners.forEach(listener => listener(errorMessage));\n            }\n        });\n    }\n    closeConnection() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false, needOpenUrl = false) {\n            var _a, _b;\n            (0, core_1.logDebug)('bridge-provider ==>> closeConnection ==>>fromRestore:', fromRestore, ' needOpenUrl:', needOpenUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> closeConnection');\n            this.listeners = [];\n            if (!needOpenUrl) {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n            }\n            if (!fromRestore) {\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.clearData();\n                yield this.connectionStorage.removeConnection();\n            }\n        });\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_1');\n            (0, core_1.reportLog)('bridge-provider ==>> restoreConnection');\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(storedConnection)) {\n                return;\n            }\n            const storedWalletName = storedConnection.connectEvent.payload.device.appName;\n            const storedWalletTag = (0, core_1.getTagByappName)(storedWalletName);\n            const isInjectWallet = storedWalletTag === core_1.OKX_INJECT_WALLET;\n            const cryptoEnable = this.engine.connectionManager.getCryptoKeyEnable();\n            if (!storedConnection || (!cryptoEnable && !isInjectWallet)) {\n                return;\n            }\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_2 ==>>storedConnection.channelId:', storedConnection.channelId);\n            if (storedConnection.channelId) {\n                try {\n                    const successMessage = {\n                        event: 'connect',\n                        requestId: Number(0),\n                        payload: storedConnection.connectEvent.payload,\n                    };\n                    this.listeners.forEach(listener => listener(successMessage));\n                    this.engine.setConnectConnector(storedConnection.connectEvent.payload.device);\n                    const channelId = storedConnection.channelId;\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_3 ==>>this.engine.restoreConnect:', channelId);\n                    (_a = this.engine) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(this.disconnectListener.bind(this));\n                    yield this.engine.restoreconnectFromTopic(channelId);\n                    this.engine.deviceInfo = storedConnection.connectEvent.payload.device;\n                    (0, core_1.reportEvent)(core_1.OKXReportType.PAGE_IN, core_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_c = (_b = this.engine.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '');\n                }\n                catch (e) {\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_1');\n                    yield this.closeConnection();\n                }\n            }\n            else {\n                (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_2');\n                yield this.closeConnection();\n            }\n        });\n    }\n    openOKXWallet() {\n        (0, core_1.logDebug)('bridge-provider ==>> openOKXWallet', this.openUniversalLink);\n        (0, core_1.reportLog)('bridge-provider ==>> openOKXWallet');\n        if (this.openUniversalLink) {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink, core_1.shortUniversalLink, core_1.OpenAppLinkType.UniversalLink);\n        }\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnect_1');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnect');\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.closeConnection().then(resolve);\n                    }\n                };\n                try {\n                    yield this.sendRequest({ method: 'disconnect' }, { onRequestSent: onRequestSent, attempts: 1 });\n                }\n                catch (e) {\n                    if (!called) {\n                        this.closeConnection().then(resolve);\n                    }\n                }\n                finally {\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    sendRequest(request, options, ttl) {\n        (0, core_1.logDebug)('bridge-provider ==>> sendRequest');\n        (0, core_1.reportLog)('bridge-provider ==>> sendRequest');\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.send(Object.assign(Object.assign({}, request), { chainId: core_1.TON_CHAINS.MAINNET }), {\n                    resolve: function (response) {\n                        resolve(response);\n                    },\n                    onAck: function () {\n                        var _a;\n                        (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                    }\n                }, ttl));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    connectorOpenWallet() {\n        this.engine.openWallet();\n    }\n}\nexports.BridgeProvider = BridgeProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"UniversalLink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"DeepLink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendTransactionParser = void 0;\nconst rpc_parser_1 = require(\"./rpc-parser\");\nclass SendTransactionParser extends rpc_parser_1.RpcParser {\n    convertToRpcRequest(request) {\n        const { redirect } = request, params = __rest(request, [\"redirect\"]);\n        return {\n            method: \"ton_sendTransaction\",\n            redirect: redirect,\n            params: params,\n        };\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result.toString()\n        };\n    }\n}\nexports.sendTransactionParser = new SendTransactionParser();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPendingConnectionHttp = isPendingConnectionHttp;\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"DeepLink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n          openAppLinkType:\"DeepLink\",\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=2320bc3c&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2320bc3c&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2320bc3c\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, this.getEventContent(request));\n                (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, {\n                    resolve: (response) => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, this.getEventContent(request));\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, this.getEventContent(request));\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, this.getEventContent(request));\n                throw error;\n            }\n        });\n    }\n    getEventContent(request) {\n        var _a, _b, _c, _d;\n        return btoa(JSON.stringify({\n            Report_WalletType_Key: (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '',\n            'method': request.method,\n            'wallet_platform': (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\"\n        }));\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = exports.createVersionInfo = exports.BrowserEventDispatcher = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = exports.OKXTonConnect = void 0;\nvar okx_connect_ton_1 = require(\"./okx-connect-ton\");\nObject.defineProperty(exports, \"OKXTonConnect\", { enumerable: true, get: function () { return okx_connect_ton_1.OKXTonConnect; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\nvar tracker_1 = require(\"./tracker\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return tracker_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return tracker_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return tracker_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return tracker_1.BrowserEventDispatcher; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return tracker_1.createVersionInfo; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return utils_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return utils_1.removeUrlLastSlash; } });\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return utils_1.toUserFriendlyAddress; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = void 0;\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = window;\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\nexports.BrowserEventDispatcher = BrowserEventDispatcher;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnectInner = void 0;\nconst bridge_provider_1 = require(\"./provider/bridge/bridge-provider\");\nconst core_1 = require(\"@okxconnect/core\");\nconst feature_support_1 = require(\"./utils/feature-support\");\nconst ton_connect_tracker_1 = require(\"./tracker/ton-connect-tracker\");\nconst send_transaction_parser_1 = require(\"./parsers/send-transaction-parser\");\nconst bridge_connection_storage_1 = require(\"./provider/bridge-connection-storage\");\nconst constants_1 = require(\"./utils/constants\");\nclass OKXTonConnectInner {\n    constructor(options) {\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.openUniversalLink = this.provider ? this.provider.openUniversalLink : false;\n        (0, core_1.checkMetaData)(options.metaData);\n        if (!options.metaData) {\n            (0, core_1.logDebug)(\"OKXTonConnect constructor error: options.metaData is nil\");\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'dapp metaData can not be null');\n        }\n        (0, core_1.logDebug)(\"OKXTonConnect constructor options:\", JSON.stringify(options));\n        this.dappSettings = {\n            metaData: Object.assign(Object.assign({}, options.metaData), { url: window.location.hostname, origin: window.location.origin }),\n        };\n        if (!options.connectors || options.connectors.length == 0) {\n            options.connectors = [new core_1.AppwalletConnector()];\n        }\n        this.connectors = options.connectors;\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        this.storage = new core_1.Storage(constants_1.OKXCONNECTOR_TON_KEY + this.dappSettings.metaData.name + constants_1.OKXTON_STORAGE_PREFIX, constants_1.OKXCONNECTOR_TON_KEY);\n        this.bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(this.storage);\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> connect_1 >> request:', request);\n            if (this.connected) {\n                (0, core_1.logError)(\"It's already connected to OKX Wallet, please call disconnect() first\");\n            }\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(false, true));\n            if (!this.provider) {\n                this.provider = new bridge_provider_1.BridgeProvider(this.storage, this.dappSettings.metaData.name, this.connectors);\n            }\n            this.provider.listen(this.walletEventsListener.bind(this));\n            this.tracker.trackConnectionStarted();\n            return yield this.provider.connect(this.createConnectRequest(request), request === null || request === void 0 ? void 0 : request.redirect, request === null || request === void 0 ? void 0 : request.openUniversalLink, request === null || request === void 0 ? void 0 : request.tmaReturnUrl);\n        });\n    }\n    walletEventsListener(e) {\n        (0, core_1.logDebug)('ton-Connect ==>> walletEventsListener_1 >> e:', e);\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.onWalletConnectError(e.payload);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_1 >> connectEvent:', connectEvent);\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'ton_addr connection item was not found');\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            wallet.connectItems = {\n                tonProof: tonProofItem\n            };\n        }\n        this.wallet = wallet;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_2 >> wallet:', wallet);\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(connectEventError) {\n        var _a;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> connectEventError:', connectEventError);\n        const error = new core_1.OKXConnectError(connectEventError.code, connectEventError.message);\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> error:', error);\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        this.tracker.trackConnectionError((_a = connectEventError.message) !== null && _a !== void 0 ? _a : \"\", connectEventError.code);\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_1');\n            if (!this.connected) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, 'wallet is not connected');\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_222');\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect());\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_1');\n            this.tracker.trackConnectionRestoringStarted();\n            let provider = null;\n            try {\n                provider = yield bridge_provider_1.BridgeProvider.fromStorage(this.storage, this.dappSettings.metaData.name, this.connectors);\n                // let isProviderValid = provider?.isCryptoEnable()\n                // if (!isProviderValid) {\n                //     this.tracker.trackConnectionRestoringError('Provider is not restored');\n                //     await this.bridgeConnectionStorage.removeConnection();\n                //     provider?.closeConnection();\n                //     provider = null;\n                //     return;\n                // }\n            }\n            catch (_b) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (!provider) {\n                (0, core_1.logError)('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_2 ==>> Provider is restored ');\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(true, false);\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            yield this.provider.restoreConnection();\n            if (this.connected) {\n                this.tracker.trackConnectionRestoringCompleted(this.wallet);\n            }\n            else {\n                this.tracker.trackConnectionRestoringError('Connection restoring failed');\n            }\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_1', transaction);\n            this.checkConnection();\n            (0, feature_support_1.checkSendTransactionSupport)(this.wallet.device.features, {\n                requiredMessagesNumber: transaction.messages.length\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> check params');\n            const { validUntil } = transaction, tx = __rest(transaction, [\"validUntil\"]);\n            const from = transaction.from || this.account.address;\n            let network = this.account.chain;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> await sendRequest', network);\n            if ((0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n            }\n            const response = yield this.provider.sendRequest(send_transaction_parser_1.sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { valid_until: validUntil, from,\n                network })), {\n                onRequestSent: () => {\n                    var _a, _b;\n                    if (!(0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                        (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n                    }\n                    (_b = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _b === void 0 ? void 0 : _b.call(options);\n                }\n            });\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_3 ==>>sendRequest response:', response);\n            if (send_transaction_parser_1.sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                throw new core_1.OKXConnectError(response.error.code, response.error.message);\n            }\n            const result = send_transaction_parser_1.sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    checkConnection() {\n        (0, core_1.logDebug)('ton-Connect ==>> checkConnection');\n        if (!this.connected) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, \"Wallet not connected\");\n        }\n    }\n    createConnectRequest(request) {\n        (0, core_1.logDebug)('ton-Connect ==>> createConnectRequest');\n        const params = {\n            ton_addr: {\n                name: 'ton_addr'\n            }\n        };\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            params.ton_proof = {\n                name: 'ton_proof',\n                payload: request.tonProof\n            };\n        }\n        return {\n            dappInfo: this.dappSettings.metaData,\n            params: params\n        };\n    }\n    static getWallets() {\n        return this.walletsList;\n    }\n}\nexports.OKXTonConnectInner = OKXTonConnectInner;\nOKXTonConnectInner.walletsList = [(0, core_1.creatOKXWalletInfo)()];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcParser = void 0;\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\nexports.RpcParser = RpcParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"UniversalLink\";\n    OpenAppLinkType[\"DeepLink\"] = \"DeepLink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTON_STORAGE_PREFIX = exports.OKXCONNECTOR_TON_KEY = exports.OKXtonConnectSdkVersion = void 0;\nexports.OKXtonConnectSdkVersion = '1';\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXTON_STORAGE_PREFIX = \"_okxton\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.get(topic)) {\n            let lastTimestamp = topicExpireCache.get(topic);\n            if (lastTimestamp) {\n                if (Date.now() > lastTimestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let cacheMap = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (!cacheMap) {\n            cacheMap = new Map();\n        }\n        let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n        cacheMap.set(topic, expireTimestamp);\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, cacheMap);\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = exports.createVersionInfo = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar tracker_constants_1 = require(\"./tracker-constants\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_constants_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return types_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return types_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return types_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return types_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return types_1.createVersionInfo; } });\nvar browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return browser_event_dispatcher_1.BrowserEventDispatcher; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeConnectionStorage = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton_connect_info_adapter_universal';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> storeConnection ==>> connection:\", connection);\n            return this.storage.saveContent(JSON.stringify(connection), this.storeKey);\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> removeConnection\");\n            return this.storage.clearCache(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.getItem(this.storeKey);\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>this.storage: \", this.storage);\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                return null;\n            }\n            try {\n                const content = stored === null || stored === void 0 ? void 0 : stored.content;\n                if (content) {\n                    let connection;\n                    connection = JSON.parse(content);\n                    (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>connection: \", connection);\n                    return connection;\n                }\n                else {\n                    return null;\n                }\n            }\n            catch (error) {\n                return null;\n            }\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'Trying to read HTTP connection source while nothing is stored');\n            }\n            return connection;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && ('connectEvent' in connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n}\nexports.BridgeConnectionStorage = BridgeConnectionStorage;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnect = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst okx_connect_ton_inner_1 = require(\"./okx-connect-ton-inner\");\nclass OKXTonConnect {\n    constructor(options) {\n        try {\n            (0, core_1.logDebug)('OKXTonConnect constructor called');\n            if (window && window.okxConnectTonsdkinwindow && window.okxConnectTonsdkinwindow instanceof okx_connect_ton_inner_1.OKXTonConnectInner) {\n                this.tonInner = window.okxConnectTonsdkinwindow;\n                (0, core_1.logDebug)('OKXTonConnect constructor old called');\n            }\n            else {\n                this.tonInner = new okx_connect_ton_inner_1.OKXTonConnectInner(options);\n                (0, core_1.logDebug)('OKXTonConnect constructor new called');\n                if (window) {\n                    window.okxConnectTonsdkinwindow = this.tonInner;\n                }\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this.tonInner.connected;\n    }\n    get openUniversalLink() {\n        return this.tonInner.openUniversalLink;\n    }\n    get provider() {\n        return this.tonInner.provider;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        return this.tonInner.account;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this.tonInner.wallet;\n    }\n    set wallet(value) {\n        this.tonInner.wallet = value;\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.connect(request);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.disconnect();\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        return this.tonInner.onStatusChange(callback, errorsHandler);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.restoreConnection();\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.sendTransaction(transaction, options);\n        });\n    }\n    static getWallets() {\n        return okx_connect_ton_inner_1.OKXTonConnectInner.getWallets();\n    }\n}\nexports.OKXTonConnect = OKXTonConnect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar OKX_TON_CONNECTION_AND_TRANSACTION_EVENT;\n(function (OKX_TON_CONNECTION_AND_TRANSACTION_EVENT) {\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_STARTED\"] = \"okx-ton-connect-connection-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_COMPLETED\"] = \"okx-ton-connect-connection-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_ERROR\"] = \"okx-ton-connect-connection-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_STARTED\"] = \"okx-ton-connect-connection-restoring-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_COMPLETED\"] = \"okx-ton-connect-connection-restoring-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_ERROR\"] = \"okx-ton-connect-connection-restoring-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_DISCONNECTION\"] = \"okx-ton-connect-disconnection\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SENT_FOR_SIGNATURE\"] = \"okx-ton-connect-transaction-sent-for-signature\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNED\"] = \"okx-ton-connect-transaction-signed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNING_FAILED\"] = \"okx-ton-connect-transaction-signing-failed\";\n})(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT || (exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = void 0;\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return url_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return url_1.removeUrlLastSlash; } });\nvar address_1 = require(\"./address\");\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return address_1.toUserFriendlyAddress; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.8';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestVersionEvent = createRequestVersionEvent;\nexports.createResponseVersionEvent = createResponseVersionEvent;\nexports.createVersionInfo = createVersionInfo;\nexports.createConnectionStartedEvent = createConnectionStartedEvent;\nexports.createConnectionDeepLinkEvent = createConnectionDeepLinkEvent;\nexports.createConnectionInfoBeforeJumpEvent = createConnectionInfoBeforeJumpEvent;\nexports.createConnectionCompletedEvent = createConnectionCompletedEvent;\nexports.createConnectionErrorEvent = createConnectionErrorEvent;\nexports.createConnectionRestoringStartedEvent = createConnectionRestoringStartedEvent;\nexports.createConnectionRestoringCompletedEvent = createConnectionRestoringCompletedEvent;\nexports.createConnectionRestoringErrorEvent = createConnectionRestoringErrorEvent;\nexports.createTransactionSentForSignatureEvent = createTransactionSentForSignatureEvent;\nexports.createTransactionSignedEvent = createTransactionSignedEvent;\nexports.createTransactionSigningFailedEvent = createTransactionSigningFailedEvent;\nexports.createDisconnectionEvent = createDisconnectionEvent;\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        okx_ton_connect_sdk_lib: version.okx_ton_connect_sdk_lib,\n        okx_connect_ui_lib: version.okx_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionDeepLinkEvent(deeplinkUrl) {\n    return {\n        type: 'connection-get-deeplink',\n        deeplinkUrl: deeplinkUrl,\n    };\n}\n// okx-ton-connect-connection-info-before-jump\nfunction createConnectionInfoBeforeJumpEvent(connectInfo) {\n    return {\n        type: 'connection-info-before-jump',\n        connectInfo: connectInfo,\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = toUserFriendlyAddress;\nconst core_1 = require(\"@okxconnect/core\");\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    // let addressBase64 = Base64.encode(addressWithChecksum);\n    let addressBase64 = (0, core_1.base64encode)(addressWithChecksum, false);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new Error(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new Error(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new Error('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new Error('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonConnectTracker = void 0;\nconst types_1 = require(\"./types\");\nconst browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *\n\n *\n * @internal\n */\nclass TonConnectTracker {\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return (0, types_1.createVersionInfo)({\n            okx_ton_connect_sdk_lib: this.OKXtonConnectSdkVersion,\n            okx_connect_ui_lib: this.OKXConnectUiVersion,\n        });\n    }\n    constructor(options) {\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'okx-ton-connect-';\n        this.OKXConnectUiVersion = null;\n        this.eventDispatcher = new browser_event_dispatcher_1.BrowserEventDispatcher();\n        this.OKXtonConnectSdkVersion = options.OKXtonConnectSdkVersion;\n        this.init().catch();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.OKXConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('okx-ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('okx-ton-connect-response-version', (0, types_1.createResponseVersionEvent)(this.OKXtonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('okx-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('okx-connect-ui-request-version', (0, types_1.createRequestVersionEvent)());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection connecting event.\n     * @param args\n     */\n    trackConnectionDeepLink(...args) {\n        try {\n            const event = (0, types_1.createConnectionDeepLinkEvent)(...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    trackConnectionInfoBeforeJump(args) {\n        try {\n            const event = (0, types_1.createConnectionInfoBeforeJumpEvent)(args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = (0, types_1.createConnectionErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = (0, types_1.createDisconnectionEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = (0, types_1.createTransactionSentForSignatureEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = (0, types_1.createTransactionSignedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = (0, types_1.createTransactionSigningFailedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\nexports.TonConnectTracker = TonConnectTracker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkSendTransactionSupport = checkSendTransactionSupport;\nconst core_1 = require(\"@okxconnect/core\");\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('ton_sendTransaction');\n    if (!supportsDeprecatedSendTransactionFeature) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support SendTransaction feature.\");\n    }\n    if (4 < options.requiredMessagesNumber) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `Wallet is not able to handle such SendTransaction request. Max support messages number is ${4}, but ${options.requiredMessagesNumber} is required.`);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(23007); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","log_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","appName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","stackDeepLink","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","downloadUrl","shortUniversalLink","standardUniversalLink","okxDeeplink","location","hostname","includes","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","getTagByappName","OKX_INJECT_WALLET","OKX_APP_WALLET","OKX_TG_WALLET","AppwalletConnector","appwallet_connector_1","enumerable","get","iconnector_1","inject_connector_1","tgwallet_connector_1","ws_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","checkMetaData","protocol_1","dappMetaData","OKXConnectError","OKX_CONNECT_ERROR_CODES","BAD_REQUEST_ERROR","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","BridgeProvider","bridge_connection_1","core_1","bridge_connection_storage_1","constants_1","ton_connect_tracker_1","constructor","storage","appname","undefined","connectors","type","listeners","walletConnectionSource","openUniversalLink","engine","Engine","OKXTON_STORAGE_PREFIX","registerConnector","connectionStorage","BridgeConnectionStorage","tracker","TonConnectTracker","OKXtonConnectSdkVersion","getDefaultReporter","configVersionAndSide","fromStorage","storage_1","arguments","reportLog","bridgeConnectionStorage","connection","getHttpConnection","isPendingConnectionHttp","provider","isCryptoEnable","cryptoEnable","connectionManager","getCryptoKeyEnable","connect","message","redirect","tmaReturnUrl","tonNameSpace","params","tonRequest","requiredNamespaces","engineRequest","config","dappInfo","openUniversalUrl","universalConnect","info","universalLink","deepLink","getOKXLink","connectRequest","trackConnectionInfoBeforeJump","error","session","connectSuccessHandle","catch","errorMessage","event","requestId","Number","Date","now","code","listener","console","listen","callback","disconnectListener","disconnectMessage","closeConnection","response","namespaces","wallet","UNKNOWN_ERROR","sessionConfig","itemArr","tonDeviceInfo","platform","appVersion","maxProtocolVersion","features","tonConnectInfo","lastWalletEventId","connectEvent","items","connectionSource","channelId","topic","storeConnection","addDisconnectListener","bind","successMessage","fromRestore","needOpenUrl","connectManagerDisconnect","clearData","removeConnection","restoreConnection","storedConnection","storedWalletName","storedWalletTag","isInjectWallet","setConnectConnector","restoreconnectFromTopic","deviceInfo","reportEvent","OKXReportType","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","getConnector","getTag","openOKXWallet","openOKXDeeplink","OpenAppLinkType","UniversalLink","disconnect","called","onRequestSent","sendRequest","method","attempts","request","options","ttl","send","assign","chainId","TON_CHAINS","MAINNET","onAck","call","connectorOpenWallet","openWallet","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","__exportStar","p","prototype","hasOwnProperty","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","values","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","STARKNET_CHAIN_ID","getChain","CHAIN_NOT_SUPPORTED","getAccount","_d","_e","account","NameSpaceKeyStarknet","startsWith","accountArray","publicKey","pubKey","signMessage","signerAddress","typedData","signData","ret","parse","errorData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","i","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","eventemitter3_1","utils_1","crypto_1","jwt_1","safejson_1","log","report_1","url_1","connectionSplitPackages_1","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","keyPairInfo","getCachedCryptoKeyPair","clearCache","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","safeJsonStringify","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","id","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","toString","restoreConnect","Error","saveContent","getConnectInfo","generateTopic","clientId","stringifyKeypair","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","timeF","sendFetchAndConsumeMessages","init","sendRaw","checkExpired","checkExpire","activateDisconnect","timeTh","err","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","rawMsg","replace","parsedMessage","CONNECT_METHOD_RECEIVE","sendDisconnect","CONNECT_METHOD_DISCONNECT","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","msg","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","OKXWalletName","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","wallet_info_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","linkType","openAppLinkType","DeepLink","getOpenAppLinkType","args","connected","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","keys","realChain","replaceChainNameToChainId","enable","client","connectOpts","requestAccounts","disconnectAndEmit","cleanup","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","METHOD_NOT_SUPPORTED","on","removeListener","off","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","origin","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","engineConnectInfo","setAccountChangeListener","listenerCount","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","sendTransactionParser","rpc_parser_1","SendTransactionParser","RpcParser","convertToRpcRequest","convertFromRpcResponse","rpcResponse","boc","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","parseInt","isNaN","CAIP_DELIMITER","b","versionCompare","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","tag","OKXMiniWalletName","OKXInjectWalletName","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","charCodeAt","padStart","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signature","signAndSendTransaction","TONProvider","validUntil","newParams","fromAddress","from","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","signStr","alert","toAddress","satoshis","feeRate","autoFinalized","inscriptionId","runeid","amount","ticker","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","Uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","res","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","okxLogDebug","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onStatusChange","walletInfo","onModalStateChange","state","entries","substring","uri","useShortLink","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","sendRunes","inscribeTransfer","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","substr","buffer","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","useMini","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","reduce","sendRecordContent","warn","action","content_1","BtcProvider","connectionManager_1","sessionUtils_1","useConnector","addConnectionListener","accountChangeListener","setConnectionManager","hasWsConnector","isWsConnector","isInjectedConnector","connectInfoAndUrl","universalRequest","connectInfo","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","linkInfo","openMethod","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","walletName","methodsResponse","connectRequestMethods","setUseConnector","sendSession","getOGSiteName","metas","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","getEventContent","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","Report_WalletType_Key","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","namespaceKeys","CONNECT_PROTOCOL_VER","jsonResponse","toUserFriendlyAddress","removeUrlLastSlash","addPathToUrl","createVersionInfo","BrowserEventDispatcher","createTransactionSigningFailedEvent","createTransactionSignedEvent","createTransactionSentForSignatureEvent","createDisconnectionEvent","createConnectionStartedEvent","createConnectionRestoringStartedEvent","createConnectionRestoringErrorEvent","createConnectionRestoringCompletedEvent","createConnectionErrorEvent","createConnectionCompletedEvent","createResponseVersionEvent","createRequestVersionEvent","OKX_TON_CONNECTION_AND_TRANSACTION_EVENT","OKXTonConnect","okx_connect_ton_1","tracker_1","OKXCONNECTOR_JWT_WALLET_SIDE","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","utils_2","btc_provider_1","providerMap","Map","disconnectHandler","walletNameKey","set","NameSpaceKeyEip155","SolProvider","AptosProvider","getInjectProvider","mapKey","okxwallet","getVersion","responseItem","required","optional","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","errorResponse","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","sort","allReady","every","namespaceKey","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","TronProvider","chainName2IdMap","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","encodeTelegramUrlParameters","isTelegramUrl","callForSuccess","call_for_success_1","web_api_1","request_1","dispatchEvent","eventName","eventDetails","CustomEvent","detail","removeEventListener","OKXTonConnectInner","bridge_provider_1","feature_support_1","send_transaction_parser_1","_wallet","statusChangeSubscriptions","statusChangeErrorSubscriptions","metaData","dappSettings","walletEventsListener","trackConnectionStarted","createConnectRequest","onWalletConnected","onWalletConnectError","onWalletDisconnected","tonAccountItem","tonProofItem","walletStateInit","connectItems","trackConnectionCompleted","connectEventError","errorsHandler","trackConnectionError","scope","trackDisconnection","trackConnectionRestoringStarted","trackConnectionRestoringError","trackConnectionRestoringCompleted","checkConnection","checkSendTransactionSupport","requiredMessagesNumber","trackTransactionSentForSignature","doNotOpenWallet","valid_until","isError","trackTransactionSigningFailed","trackTransactionSigned","getWallets","walletsList","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","super","connecting","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","resultMe","okxTonWallet","tonconnect","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","needProof","nameSpaceResponse","TONMethods","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","publicKeyStr","issuer","multicodec","encoded","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","encodeTGParams","tgUrl","utils_3","crypto_js_1","subKey","beforeKey","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","getPubkey","_1","caip","getAddressForChainId","ns","checkChainId","txhash","checkParameters","psbtResults","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","suffix","unexistKeys","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","pendingRequests","beginReport","handleResponse","bindRequestForPromise","clear","tonWallet","sessionWallet","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","onError","parseError","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","signedMessage","bufferResult","injectResult","allResult","signAndSendResult","SOLANAMethods","StarknetProvider","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","lastTimestamp","expireTimestamp","tracker_constants_1","browser_event_dispatcher_1","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","buffer1","buffer2","mergedArray","array","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","hash","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","getConnection","stored","storeLastWalletEventId","getLastWalletEventId","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","path","okx_connect_ton_inner_1","okxConnectTonsdkinwindow","tonInner","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","address_1","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","markRecord","lineType","localConnectRequest","okx_ton_connect_sdk_lib","okx_connect_ui_lib","createConnectionInfo","isTonProof","authType","wallet_address","wallet_type","wallet_version","auth_type","custom_data","chain_id","createConnectionDeepLinkEvent","deeplinkUrl","createConnectionInfoBeforeJumpEvent","is_success","error_message","errorCode","error_code","createTransactionInfo","signedTransaction","signed_transaction","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","noBounceableTag","testOnlyTag","hexAddress","testOnly","wc","parseHexAddress","addr","Int8Array","addressWithChecksum","crc16","addressBase64","parts","hexToBytes","poly","reg","mask","toByteMap","ord","length2","doubled","hexSubstring","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","allAddressStr","syncResoonseToRequire","localAddress","localItem","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","fn","delayMs","lastError","delay","aborted","timeoutId","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","WS","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","readyState","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","IJSONRpcConnection","opt","connectSupportMethods","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","ci","evmAddress","freeze","OKXConnectUiVersion","eventPrefix","eventDispatcher","setRequestVersionHandler","requestTonConnectUiVersion","dispatchUserActionEvent","trackConnectionDeepLink","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","constants_2","useStandardUniversalLink","deeplinkEncodeUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","_provider","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","buf","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","onAccountChange","newAccount","supportsDeprecatedSendTransactionFeature","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}