{"version":3,"file":"js/app.4766ec35.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/inject/types/index.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/wallets.js","webpack://okxconnectdemo/../packages/core/src/inject/types/StandardWallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./StandardWallet\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\n__exportStar(require(\"./iconnector\"), exports);\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileDiscover = isMobileDiscover;\nfunction isMobileDiscover() {\n    return !!(window.okxwallet) && window.okxwallet.mobileDiscoverWallet;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nconst wallets_1 = require(\"./provider/utils/wallets\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            if ((0, wallets_1.isMobileDiscover)()) {\n                opts.connector = [new core_1.OkxwalletInjectConnector()];\n            }\n            else {\n                opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n            }\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OTHER_INJECT_WALLET = exports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nexports.OTHER_INJECT_WALLET = \"other_inject_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return appName !== null && appName !== void 0 ? appName : \"\";\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        var _a;\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET ||\n            ((_a = connector.getTag()) === null || _a === void 0 ? void 0 : _a.includes(iconnector_1.OTHER_INJECT_WALLET)) ||\n            connector instanceof connector_1.InjectConnector;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.isInjectedConnector(this.connectors[0])) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response, connector) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    //for ws connector;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                    }\n                                    var realConector;\n                                    if (connector) {\n                                        realConector = connector;\n                                    }\n                                    else if (tag) {\n                                        realConector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    }\n                                    if (!realConector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(realConector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(realConector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (connector instanceof connector_1.InjectConnector) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: Date.now().toString(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        return true;\n        // const allReady = namespaceKeys!.every(namespaceKey =>\n        //     this.getInjectProvider(namespaceKey)?.connectReady()\n        // );\n        // return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getSupportNameSpaces() {\n        return Array.from(this.providerMap.keys());\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5f6ba2cc&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5f6ba2cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f6ba2cc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.get(topic)) {\n            let lastTimestamp = topicExpireCache.get(topic);\n            if (lastTimestamp) {\n                if (Date.now() > lastTimestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let cacheMap = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (!cacheMap) {\n            cacheMap = new Map();\n        }\n        let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n        cacheMap.set(topic, expireTimestamp);\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, cacheMap);\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nexports.versionStr = '1.7.9';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        // this.currentUUID = toHexString(nacl.randomBytes(16))\n        this.currentUUID = \"fjdkakfjsadkfklasdkfsdjkljfklsdjklfioruer3239084dkskfsa\";\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor(wallet = window.okxwallet.sui) {\n        // const chainName = \"sui:mainnet\";\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         console.log('suiGlobalWallet',wallet)\n        //         if (wallet.chains.includes(chainName)) {\n        //             console.log('suiGlobalWallet', wallet.name)\n        //         }\n        //         GlobalWallet[wallet.chainName] = wallet;\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n        this.wallet = wallet;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return this.wallet;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            let injectSignResult;\n                            if (this.getSuiWallet().features['sui:signTransaction']) {\n                                injectSignResult = yield this.getSuiWallet().features['sui:signTransaction'].signTransaction(originalRarams);\n                            }\n                            else if (this.getSuiWallet().features['sui:signTransactionBlock']) {\n                                injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult === null || injectSignResult === void 0 ? void 0 : injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            let injectSendResult;\n                            if (this.getSuiWallet().features['sui:signAndExecuteTransaction']) {\n                                injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransaction'].signAndExecuteTransaction(originalRarams);\n                            }\n                            else if (this.getSuiWallet().features['sui:signAndExecuteTransactionBlock']) {\n                                injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addStandardEventListener(standardEventListener) {\n        var _a, _b;\n        if ((_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:events']) {\n            (0, utils_1.logDebug)(\"sui-provider standard:events change\");\n            (_b = this.getSuiWallet()) === null || _b === void 0 ? void 0 : _b.features['standard:events'].on('change', (event) => {\n                standardEventListener(event);\n            });\n        }\n        else {\n            (0, utils_1.logDebug)(\"sui-provider standard:events null\");\n        }\n    }\n    addListener(accountChangeListener) {\n        var _a;\n        console.log(\"configEventWithKey:\", 'sui');\n        if (this.getSuiWallet().on) {\n            this.accountChangedHandler = (publicKey) => {\n                console.log(\"configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n                if (publicKey) {\n                    accountChangeListener();\n                }\n            };\n            (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.on('accountChanged', this.accountChangedHandler);\n        }\n    }\n    removeListener() {\n        var _a;\n        if (this.accountChangedHandler) {\n            (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst inject_1 = require(\"../inject\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nconst utils_1 = require(\"../utils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst media_1 = require(\"../utils/media\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result, this);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    }, this);\n                }\n            }\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_1.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_1.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nconst okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nclass OkxwalletInjectTonsdkConnector extends okxwallet_inject_connector_1.OkxwalletInjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    try {\n                        let publicKey = (_b = this.getAccount(realChain)) === null || _b === void 0 ? void 0 : _b.publicKey;\n                        if (publicKey != undefined) {\n                            console.log(\"apt_signMessage\", buffer_1.Buffer.from(successData, 'hex'));\n                            console.log(\"apt_signMessage\", successData);\n                            const verified = tweetnacl_1.default.sign.detached.verify(buffer_1.Buffer.from(fullMessage), buffer_1.Buffer.from(signStr, 'hex'), buffer_1.Buffer.from(publicKey, 'hex'));\n                            console.log(\"aptosProvider signMessage verified:\", verified);\n                        }\n                    }\n                    catch (_) {\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n// if (!window.okxGlobalWallet) {\n//     window.okxGlobalWallet = {\n//         suiWallets: [],\n//         register: (wallet: StandardWallet) => {\n//             if (wallet.chains.includes(SUI_CHAINS.MAINNET)){\n//                 const exists = window.okxGlobalWallet.suiWallets.some(w => w.name === wallet.name);\n//                 if (!exists && !wallet.name.toLowerCase().includes('okx')){\n//                     window.okxGlobalWallet.suiWallets.push(wallet);\n//                 }\n//             }\n//             // return window.GlobalWallet.wallets;\n//         },\n//         // getWallets: () => {\n//         //     return window.okxGlobalWallet.wallets\n//         // },\n//     };\n// }\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(38768); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","log_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","appName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","stackDeepLink","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","downloadUrl","shortUniversalLink","standardUniversalLink","okxDeeplink","location","hostname","includes","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","AppwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","ws_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","checkMetaData","protocol_1","dappMetaData","OKXConnectError","OKX_CONNECT_ERROR_CODES","BAD_REQUEST_ERROR","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","isMobileDiscover","okxwallet","mobileDiscoverWallet","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","values","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","core_1","constructor","provider","STARKNET_CHAIN_ID","getChain","chainId","CHAIN_NOT_SUPPORTED","getAccount","_d","_e","account","session","namespaces","NameSpaceKeyStarknet","startsWith","accountArray","publicKey","pubKey","signMessage","signerAddress","typedData","signData","ret","request","parse","errorData","error","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__setModuleDefault","v","__importStar","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","constants_1","eventemitter3_1","storage_1","utils_1","crypto_1","jwt_1","safejson_1","log","report_1","url_1","connectionSplitPackages_1","appname","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","reportEvent","OKXReportType","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","Date","now","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","safeJsonStringify","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","arguments","input","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","id","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","params","messageId","method","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","message","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","toString","restoreConnect","Error","disconnect","saveContent","connect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","code","timeF","sendFetchAndConsumeMessages","init","sendRaw","bind","checkExpired","checkExpire","activateDisconnect","timeTh","send","catch","err","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","event","rawMsg","replace","parsedMessage","CONNECT_METHOD_RECEIVE","sendDisconnect","CONNECT_METHOD_DISCONNECT","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","msg","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","i","topicInfo","disconnectPayload","requestId","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","OKXWalletName","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","wallet_info_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","wallets_1","opts","setGlobal","getDefaultReporter","configVersionAndSide","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","isSpecial","getOpenAppLinkType","args","connected","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","UNKNOWN_ERROR","keyArr","keys","realChain","replaceChainNameToChainId","assign","redirect","sessionConfig","enable","client","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","connectAndSign","signRequest","updatedOpts","openUniversalUrl","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","wallet","syncAllAddress","METHOD_NOT_SUPPORTED","on","listener","removeListener","off","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","console","sessionProperties","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","parseInt","isNaN","Number","CAIP_DELIMITER","b","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","response","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","OTHER_INJECT_WALLET","OKX_TG_WALLET","OKX_APP_WALLET","OKX_INJECT_WALLET","getTagByappName","OKXMiniWalletName","OKXInjectWalletName","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","charCodeAt","padStart","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signature","signAndSendTransaction","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","from","boc","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","type_1","action_1","content_1","type","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","BtcProvider","Engine","iconnector_1","connectionManager_1","sessionUtils_1","connector_1","useConnector","connectionManager","addConnectionListener","getConnector","accountChangeListener","setConnectionManager","hasWsConnector","isWsConnector","getTag","isInjectedConnector","universalConnect","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","walletName","realConector","tag","methodsResponse","connectRequestMethods","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","title","document","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","restoreconnectFromTopic","namespaceKeys","CONNECT_PROTOCOL_VER","jsonResponse","AptosUtils","getTransaction","rawTransaction","entryFunction","typeArgs","type_args","typeArguments","typeTag","realArguments","getTypeArguments","function","module_name","identifier","function_name","type_arguments","getArguments","array","j","y","subArray","dealArrayElements","Uint8Array","r","n","OKXCONNECTOR_JWT_WALLET_SIDE","disconnectListener","providerMap","Map","disconnectHandler","walletNameKey","getInjectProvider","mapKey","entries","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","sessionLocal","WALLET_NOT_SUPPORTED","_","toJSON","getSupportNameSpaces","TronProvider","chainName2IdMap","useShortLink","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","callForSuccess","call_for_success_1","web_api_1","request_1","utils_2","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","connection","super","connecting","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","media_1","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","okxTonWallet","tonconnect","parseConnectResponse","needPop","accountChange","signalChain","connectWalletNameSpace","connectRequestWalletResponse","connectChain","chainStr","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","items","needProof","isDevice","restoreConnection","nameSpaceResponse","TONMethods","singleConnect","NameSpaceKeyEip155","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","runeid","amount","ticker","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","res","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onStatusChange","walletInfo","onModalStateChange","state","substring","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","sendRunes","inscribeTransfer","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","bytes","substr","buffer","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","publicKeyStr","issuer","multicodec","encoded","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","encodeTGParams","tgUrl","utils_3","crypto_js_1","subKey","beforeKey","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","getPubkey","_1","caip","getAddressForChainId","ns","checkChainId","txhash","checkParameters","psbtResults","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","suffix","unexistKeys","namespaceKey","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","pendingRequests","beginReport","handleResponse","bindRequestForPromise","set","getRequestId","clear","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","onError","parseError","SolProvider","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","signedMessage","bufferResult","injectResult","allResult","signAndSendResult","SOLANAMethods","StarknetProvider","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","lastTimestamp","expireTimestamp","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","hash","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","path","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","lineType","localConnectRequest","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","sort","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","addStandardEventListener","standardEventListener","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","chain_id","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","inject_1","SolProvider_1","AptosProvider_1","TONProvider_1","sui_provider_1","btc_provider_1","AptosProvider","getVersion","responseItem","required","requiredNamespaces","optional","singleItem","singleProvider","singleConnectResult","getAccountByRequestWallets","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","allEqual","namespacesKey","accountsItem","sessionAccounts","newSessionAccounts","areEqual","every","aptosAdd","aptosChains","aptosChain","ton_proof_result_Item","proofItem","proof","isAccountChange","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","stored","localAddress","localItem","connectEvent","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","fn","attempts","delayMs","lastError","delay","aborted","timeoutId","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","WS","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","readyState","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","removeEventListener","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","IJSONRpcConnection","opt","OKXAptosProvider_1","connectSupportMethods","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","buffer_1","AptosUtils_1","chainsSet","getConnectedNamespace","defaultNetwork","currentChainId","getRealChainId","successData","verified","buf","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","_provider","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","onAccountChange","newAccount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}