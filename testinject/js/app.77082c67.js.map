{"version":3,"file":"js/app.77082c67.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\n// export const stackDeepLink:string = 'okx://web3?stack=true'\nexports.stackDeepLink = 'okx://web3/dapp/open';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"DeepLink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n          openAppLinkType:\"DeepLink\",\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=fa394a5a&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=fa394a5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fa394a5a\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"UniversalLink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"DeepLink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, this.getEventContent(request));\n                (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, {\n                    resolve: (response) => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, this.getEventContent(request));\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, this.getEventContent(request));\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, this.getEventContent(request));\n                throw error;\n            }\n        });\n    }\n    getEventContent(request) {\n        var _a, _b, _c, _d;\n        return btoa(JSON.stringify({\n            Report_WalletType_Key: (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '',\n            'method': request.method,\n            'wallet_platform': (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\"\n        }));\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"UniversalLink\";\n    OpenAppLinkType[\"DeepLink\"] = \"DeepLink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.get(topic)) {\n            let lastTimestamp = topicExpireCache.get(topic);\n            if (lastTimestamp) {\n                if (Date.now() > lastTimestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let cacheMap = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (!cacheMap) {\n            cacheMap = new Map();\n        }\n        let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n        cacheMap.set(topic, expireTimestamp);\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, cacheMap);\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.8';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5748); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","log_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","appName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","stackDeepLink","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","downloadUrl","shortUniversalLink","standardUniversalLink","okxDeeplink","location","hostname","includes","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","getTagByappName","OKX_INJECT_WALLET","OKX_APP_WALLET","OKX_TG_WALLET","AppwalletConnector","appwallet_connector_1","enumerable","get","iconnector_1","inject_connector_1","tgwallet_connector_1","ws_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","checkMetaData","protocol_1","dappMetaData","OKXConnectError","OKX_CONNECT_ERROR_CODES","BAD_REQUEST_ERROR","id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","keys","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","type","onClick","initBtnClicked","icon","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","args","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","redirect","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","sendTransaction","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","msg","String","setup","$emit","params","from","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","runeid","amount","ticker","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","Uint8Array","input","message","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","account","showEffects","provider","setDefaultChain","method","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","Promise","resolve","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","setSender","build","client","Buffer","toString","toJSON","error","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","signData","OKXStarknetProvider","res","signMessage","code","console","log","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","then","isValid","catch","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","calls","contract_address","entry_point","calldata","getAccount","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","tronWeb","TronWeb","verify","trx","signMessageV2","base58Address","verifyMessageV2","isOnlySign","transaction","transactionBuilder","sendTrx","signTransaction","signAndSendTransaction","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","Set","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","chainId","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","assign","tab","tabName","testTon","openModal","initCall","okxLogDebug","OKXTonConnectUI","actionsConfiguration","tmaReturnUrl","uiPreferences","OKXUniversalConnectUI","init","manifestUrl","openAppLinkType","OKXUniversalProvider","tonProvider","OKXTonProvider","onStatusChange","walletInfo","err","onModalStateChange","state","session","namespaces","entries","parseInt","substring","on","uri","useShortLink","isPC","items","topic","Date","now","testTonSdk","connected","syncAllAddresses","e","disconnect","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","fromAccountToAddress","evmNameSpace","map","dataETH","dataPolygon","request","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","str","image","tonUniversalLog","sendTransactionAlert","response","fetch","json","confirm","startsWith","sendData","parse","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","sendRunes","inscribeTransfer","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","i","substr","buffer","blob","Blob","reject","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","values","connectMethod","connectData","requireData","eip155","defaultChain","rpcMap","solana","cosmos","tron","starknet","tonParams","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","sessionConfig","useMini","openUniversalUrl","connectAndSign","connect","methodList","suiData","currentMethod","application","accountAddress","typedData","userAgentInfo","Agents","flag","v","indexOf","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","signature","PublicKey","publicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","safeJsonStringify","signAndSubmitTransaction","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","rpc","OKXCosmosProvider","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","fullMessage","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","__exportStar","p","prototype","hasOwnProperty","call","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","next","rejected","done","apply","core_1","constructor","STARKNET_CHAIN_ID","getChain","CHAIN_NOT_SUPPORTED","_d","_e","NameSpaceKeyStarknet","accountArray","signerAddress","errorData","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","abis","transactionsDetail","transactions","Array","isArray","executionRequest","__setModuleDefault","__importStar","ownKeys","getOwnPropertyNames","ar","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","constants_1","eventemitter3_1","storage_1","utils_1","crypto_1","jwt_1","safejson_1","report_1","url_1","connectionSplitPackages_1","appname","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","reportEvent","OKXReportType","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","arguments","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","sendACK","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","Error","saveContent","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","timeF","sendFetchAndConsumeMessages","sendRaw","bind","checkExpired","checkExpire","activateDisconnect","timeTh","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","event","rawMsg","parsedMessage","CONNECT_METHOD_RECEIVE","sendDisconnect","CONNECT_METHOD_DISCONNECT","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","OKXWalletName","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","wallet_info_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","getDefaultReporter","configVersionAndSide","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","linkType","OpenAppLinkType","UniversalLink","DeepLink","getOpenAppLinkType","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","UNKNOWN_ERROR","keyArr","realChain","replaceChainNameToChainId","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","signRequest","updatedOpts","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAddressAvailable","syncAllAddress","METHOD_NOT_SUPPORTED","listener","removeListener","off","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","origin","SignClient","registerConnector","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","moveProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","getRpcUrl","getChainId","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","projectId","reference","isNaN","Number","CAIP_DELIMITER","b","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","resultData","setHttpProvider","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","tag","OKXMiniWalletName","OKXInjectWalletName","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","hex","charCodeAt","padStart","signedTx","realSignTx","visible","txID","rawData","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","reduce","sendRecordContent","warn","action","content_1","BtcProvider","Engine","connectionManager_1","sessionUtils_1","useConnector","connectionManager","addConnectionListener","getConnector","accountChangeListener","setConnectionManager","hasWsConnector","isWsConnector","getTag","isInjectedConnector","universalConnect","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","openMethod","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","walletName","methodsResponse","connectRequestMethods","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","getOGSiteName","metas","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","getEventContent","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","Report_WalletType_Key","platform","clearData","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","restoreconnectFromTopic","namespaceKeys","CONNECT_PROTOCOL_VER","jsonResponse","OKXCONNECTOR_JWT_WALLET_SIDE","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","utils_2","btc_provider_1","disconnectListener","providerMap","Map","disconnectHandler","walletNameKey","set","NameSpaceKeyEip155","SolProvider","AptosProvider","getInjectProvider","mapKey","okxwallet","getVersion","responseItem","required","requiredNamespaces","optional","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","errorResponse","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","sort","allReady","every","namespaceKey","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","TronProvider","chainName2IdMap","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","callForSuccess","call_for_success_1","web_api_1","request_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","super","connecting","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","resultMe","okxTonWallet","tonconnect","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","needProof","restoreConnection","nameSpaceResponse","TONMethods","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","publicKeyStr","issuer","multicodec","encoded","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","encodeTGParams","tgUrl","utils_3","crypto_js_1","subKey","beforeKey","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","getPubkey","_1","caip","getAddressForChainId","ns","checkChainId","txhash","checkParameters","psbtResults","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","suffix","unexistKeys","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","pendingRequests","beginReport","handleResponse","bindRequestForPromise","clear","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","onError","parseError","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","signedMessage","bufferResult","injectResult","allResult","signAndSendResult","SOLANAMethods","StarknetProvider","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","lastTimestamp","expireTimestamp","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","buffer1","buffer2","mergedArray","array","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","hash","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","path","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","markRecord","lineType","localConnectRequest","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","chain_id","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","stored","localAddress","localItem","connectEvent","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","fn","attempts","delayMs","lastError","delay","aborted","timeoutId","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","WS","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","readyState","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","removeEventListener","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","IJSONRpcConnection","opt","connectSupportMethods","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","_provider","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","buf","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","onAccountChange","newAccount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}