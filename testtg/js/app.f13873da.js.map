{"version":3,"file":"js/app.f13873da.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/inject/types/index.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/types/StandardWallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/baseAptosWalletAdapter.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/aptosThirdpartInjectProvider.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/aptosWalletAdapter.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/martainWalletAdapter.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/suiStandardProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/session.js","webpack://okxconnectdemo/../packages/core/src/connector/InjectConnector.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/index.js","webpack://okxconnectdemo/../packages/core/src/connector/okx-app-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/connector/wsConnector.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/walletAdapter/petraWalletAdapter.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/components/Home.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/components/Home.vue?08c6","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwalletInjectConnector.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/aptos/aptosStandardProvider.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/connector/thirdpartInjectConnector.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwalletConnector.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/connector/okx-wallet-app-connector.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/core/src/inject/types/IInjectProvider.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwalletInjectTonsdkConnector.js","webpack://okxconnectdemo/../packages/core/src/inject/thirdpartprovider/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/ensure chunk","webpack://okxconnectdemo/webpack/runtime/get javascript chunk filename","webpack://okxconnectdemo/webpack/runtime/get mini-css chunk filename","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/load script","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/publicPath","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nexports.findConnectorBySession = findConnectorBySession;\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\nconst connector_1 = require(\"../connector\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\nfunction findConnectorBySession(connectors, wallet, sessionConfig) {\n    let connector;\n    if (sessionConfig && sessionConfig.connectWalletType) {\n        switch (sessionConfig.connectWalletType) {\n            case protocol_1.ConnectWalletType.OKX_WALLET:\n                connector = connectors.find(connector => connector.getType() === connector_1.CONNECTOR_TYPE.WS.OKX_WALLET_APP_WALLET);\n                break;\n            case protocol_1.ConnectWalletType.OKX_MINI:\n                connector = connectors.find(connector => connector.getType() === connector_1.CONNECTOR_TYPE.WS.OKX_TG_WALLET);\n                break;\n            case protocol_1.ConnectWalletType.OKX_APP:\n                connector = connectors.find(connector => connector.getType() === connector_1.CONNECTOR_TYPE.WS.OKX_APP_WALLET);\n                break;\n        }\n    }\n    if (!connector) {\n        let tag = wallet === null || wallet === void 0 ? void 0 : wallet.appName;\n        if (tag) {\n            connector = connectors.find((connector) => {\n                return connector.getTag() === tag;\n            });\n        }\n    }\n    return connector;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.okxWalletStackDeepLink = exports.okxAppStackDeepLink = exports.okxWalletDeepLink = exports.okxAppDeepLink = exports.downloadUrl = exports.okxWalletUniversalLink = exports.okxAppUniversalLink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\n// universalLink\nexports.okxAppUniversalLink = `https://web3link.okx.com/ul/connect`;\nexports.okxWalletUniversalLink = `https://link.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n//deeplink;\nexports.okxAppDeepLink = \"okx://web3/wallet/connect\";\nexports.okxWalletDeepLink = \"okxwallet://web3/wallet/connect\";\n//for android\nexports.okxAppStackDeepLink = 'okx://web3?stack=true';\nexports.okxWalletStackDeepLink = 'okxwallet://web3?stack=true';\n//for wallet sdk\nexports.standardDeeplink = exports.okxAppStackDeepLink;\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosNetwork = exports.UserResponseStatus = void 0;\nexports.getArgs = getArgs;\nconst protocol_1 = require(\"../../../protocol\");\nvar UserResponseStatus;\n(function (UserResponseStatus) {\n    UserResponseStatus[\"APPROVED\"] = \"Approved\";\n    UserResponseStatus[\"REJECTED\"] = \"Rejected\";\n})(UserResponseStatus || (exports.UserResponseStatus = UserResponseStatus = {}));\nfunction getArgs(response) {\n    if (typeof response === 'object' && response !== null && 'status' in response) {\n        if (response.status === UserResponseStatus.REJECTED) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n        }\n        return response.args;\n    }\n    return response;\n}\nvar AptosNetwork;\n(function (AptosNetwork) {\n    AptosNetwork[\"MAINNET\"] = \"mainnet\";\n    AptosNetwork[\"TESTNET\"] = \"testnet\";\n    AptosNetwork[\"DEVNET\"] = \"devnet\";\n})(AptosNetwork || (exports.AptosNetwork = AptosNetwork = {}));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./StandardWallet\"), exports);\n__exportStar(require(\"./IInjectProvider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletAppConnector = exports.ThirdpartInjectConnector = exports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKXAppConnector = void 0;\nvar okx_app_connector_1 = require(\"./okx-app-connector\");\nObject.defineProperty(exports, \"OKXAppConnector\", { enumerable: true, get: function () { return okx_app_connector_1.OKXAppConnector; } });\n__exportStar(require(\"./iconnector\"), exports);\nvar InjectConnector_1 = require(\"./InjectConnector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return InjectConnector_1.InjectConnector; } });\nvar tgwalletConnector_1 = require(\"./tgwalletConnector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwalletConnector_1.TgwalletConnector; } });\nvar wsConnector_1 = require(\"./wsConnector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return wsConnector_1.WsConnector; } });\nvar okxwalletInjectConnector_1 = require(\"./okxwalletInjectConnector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwalletInjectConnector_1.OkxwalletInjectConnector; } });\nvar okxwalletInjectTonsdkConnector_1 = require(\"./okxwalletInjectTonsdkConnector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwalletInjectTonsdkConnector_1.OkxwalletInjectTonsdkConnector; } });\nvar thirdpartInjectConnector_1 = require(\"./thirdpartInjectConnector\");\nObject.defineProperty(exports, \"ThirdpartInjectConnector\", { enumerable: true, get: function () { return thirdpartInjectConnector_1.ThirdpartInjectConnector; } });\nvar okx_wallet_app_connector_1 = require(\"./okx-wallet-app-connector\");\nObject.defineProperty(exports, \"OKXWalletAppConnector\", { enumerable: true, get: function () { return okx_wallet_app_connector_1.OKXWalletAppConnector; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendSubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () { }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_SUB,\n                params: {\n                    topic: topic\n                }\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectWalletType = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\nvar session_1 = require(\"./session\");\nObject.defineProperty(exports, \"ConnectWalletType\", { enumerable: true, get: function () { return session_1.ConnectWalletType; } });\n__exportStar(require(\"./ton\"), exports);\n__exportStar(require(\"./wallet-info\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst packages_2 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            if ((0, packages_1.isMobileDiscover)()) {\n                opts.connector = [new core_1.OkxwalletInjectConnector()];\n            }\n            else {\n                opts.connector = [new core_1.OKXAppConnector(), new core_1.OKXWalletAppConnector(), new core_1.TgwalletConnector()];\n            }\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            // if (!this.session) {\n            //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            // }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_2.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        this.client.setConnectConnector(this.session);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    tryToReconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.checkStorage();\n        });\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.connected())\n                return;\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    if (!this.connected()) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n                    }\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    // let cleanSession = e.code !== OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR\n                    yield this.cleanup(false);\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.tryToReconnect();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, arguments, void 0, function* (cleanSession = true) {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            if (cleanSession) {\n                this.persist(\"connectSession\", undefined);\n            }\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n    getEngine() {\n        return this.client.engine;\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAptosWalletAdapter = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass BaseAptosWalletAdapter extends eventemitter3_1.EventEmitter {\n    get connected() {\n        return !!this.publicAccount.publicKey;\n    }\n}\nexports.BaseAptosWalletAdapter = BaseAptosWalletAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosThirdpartInjectProvider = void 0;\nconst protocol_1 = require(\"../../../protocol\");\nconst walletAdapter_1 = require(\"./walletAdapter\");\nconst utils_1 = require(\"../../../utils\");\nconst misc_1 = require(\"./misc\");\nclass AptosThirdpartInjectProvider {\n    constructor(walletAdapter) {\n        this.walletAdapter = walletAdapter;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.walletAdapter.disconnect();\n        });\n    }\n    getVersion() {\n        return this.walletAdapter.version;\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.walletAdapter.connect();\n            let publicAccount = this.walletAdapter.publicAccount;\n            let address = publicAccount.address;\n            let publicKey = publicAccount.publicKey.toString();\n            let extra = {};\n            extra[protocol_1.APTOS_CHAINS.MAINNET] = { publicKey: publicKey };\n            return {\n                namespace: protocol_1.NameSpaceKeyAptos,\n                addresses: [`${protocol_1.APTOS_CHAINS.MAINNET}:${address}`],\n                methods: [],\n                extra: extra\n            };\n        });\n    }\n    supportChains(chains) {\n        if (this.walletAdapter.readyState !== walletAdapter_1.WalletReadyState.Installed) {\n            return false;\n        }\n        if (chains.length === 1 && chains[0] === protocol_1.APTOS_CHAINS.MAINNET) {\n            return true;\n        }\n        return false;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                try {\n                    (0, utils_1.logDebug)(\"AptosStandardProvider send request:\", JSON.stringify(request));\n                }\n                catch (e) {\n                }\n                this.confirmNetwrok(request.chainId);\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.walletAdapter) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"aptos_signTransaction\":\n                            let injectSignResult = yield this.walletAdapter.signTransaction(request.params);\n                            result = {\n                                method: \"aptos_signTransaction\",\n                                result: injectSignResult\n                            };\n                            break;\n                        case \"aptos_signMessage\":\n                            let signMessageResult = yield this.walletAdapter.signMessage(originalRarams);\n                            if (typeof signMessageResult === 'object' && \"signature\" in signMessageResult) {\n                                signMessageResult = signMessageResult.signature;\n                            }\n                            result = {\n                                method: \"aptos_signMessage\",\n                                result: signMessageResult\n                            };\n                            break;\n                        case \"aptos_signAndSubmitTransaction\":\n                            let transactionResult = yield this.walletAdapter.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: \"aptos_signAndSubmitTransaction\",\n                                result: transactionResult.hash\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"aptosProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    removeListener() {\n    }\n    addAccountChangedListener(listener) {\n        this.walletAdapter.onAccountChange((account) => {\n            listener === null || listener === void 0 ? void 0 : listener(account === null || account === void 0 ? void 0 : account.address);\n        });\n    }\n    confirmNetwrok(chainid) {\n        var _a;\n        if (chainid !== utils_1.chainName2IdMap.get(protocol_1.APTOS_CHAINS.MAINNET)) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n        }\n        let walletNetwork = this.walletAdapter.network;\n        if (((_a = walletNetwork.name) === null || _a === void 0 ? void 0 : _a.toLowerCase()) == misc_1.AptosNetwork.MAINNET) {\n            return;\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n    }\n}\nexports.AptosThirdpartInjectProvider = AptosThirdpartInjectProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECTOR_TYPE = exports.STANDARD_INJECT_WALLET = exports.OKX_TG_WALLET = exports.OKX_WALLET_APP_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = wallet_info_1.OKXInjectWalletName;\nexports.OKX_APP_WALLET = protocol_1.OKXWalletName;\nexports.OKX_WALLET_APP_WALLET = protocol_1.OKXWalletName;\nexports.OKX_TG_WALLET = wallet_info_1.OKXMiniWalletName;\nexports.STANDARD_INJECT_WALLET = \"standard_inject_wallet\";\nexports.CONNECTOR_TYPE = {\n    WS: {\n        OKX_APP_WALLET: 100,\n        OKX_TG_WALLET: 110,\n        OKX_WALLET_APP_WALLET: 120,\n    },\n    INJECT: {\n        OKX_INJECT_WALLET: 200,\n        STANDARD_INJECT_WALLET: 210\n    },\n    KEYLESS: {\n        APPLE_WALLET: 300,\n        GOOGLE_WALLET: 310\n    }\n};\n// export function getTagByappName(appName: string | undefined) {\n//     var tag = ''\n//     if (appName) {\n//         switch (appName) {\n//             case OKXWalletName:\n//                 tag = OKX_APP_WALLET\n//                 break\n//             case OKXMiniWalletName:\n//                 tag = OKX_TG_WALLET\n//                 break\n//             case OKXInjectWalletName:\n//                 tag = OKX_INJECT_WALLET\n//         }\n//     }\n//     return tag || appName || ''\n// }\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletReadyState = void 0;\nvar WalletReadyState;\n(function (WalletReadyState) {\n    WalletReadyState[\"Installed\"] = \"Installed\";\n    WalletReadyState[\"NotDetected\"] = \"NotDetected\";\n    WalletReadyState[\"Loadable\"] = \"Loadable\";\n    WalletReadyState[\"Unsupported\"] = \"Unsupported\";\n})(WalletReadyState || (exports.WalletReadyState = WalletReadyState = {}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK1] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK1] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK1] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.sessionRetryTimer = null;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    getAllConnectors() {\n        return this.connectors;\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return Object.values(iconnector_1.CONNECTOR_TYPE.WS).includes(connector.getType());\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return Object.values(iconnector_1.CONNECTOR_TYPE.INJECT).includes(connector.getType())\n            || Object.values(iconnector_1.CONNECTOR_TYPE.KEYLESS).includes(connector.getType());\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    // let universalLink = \"\";\n                    // let deepLink = \"\";\n                    //\n                    // if (openUniversalLink) {\n                    //     let linkInfo = getOKXLink(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                    //     universalLink = linkInfo.universalLink\n                    //     deepLink = linkInfo.deepLink || \"\"\n                    //     logDebug('engine universalConnect ==>>openOKXLink:', universalLink);\n                    // }\n                    const openMethod = () => {\n                        // if (this.connectors.length == 1 && this.connectors[0].getTag() === OKX_INJECT_WALLET){\n                        //     return this.connectors[0].openWallet({\n                        //         connectRequest:universalConnectRequest,\n                        //     },linkType)\n                        // }else{\n                        //     if (sessionConfig.useMini){\n                        //         return openOKXTMAWalletlinkWithFallback(universalLink)\n                        //     }\n                        //     return openOKXDeeplinkWithFallback(deepLink,universalLink,linkType)\n                        // }\n                        let connector;\n                        if (this.connectors.length == 1 && this.connectors[0].getType() === iconnector_1.CONNECTOR_TYPE.INJECT.OKX_INJECT_WALLET) {\n                            connector = this.connectors[0];\n                        }\n                        else {\n                            switch (sessionConfig.connectWalletType) {\n                                case protocol_1.ConnectWalletType.OKX_WALLET:\n                                    connector = this.connectors.find(connector => connector.getType() === iconnector_1.CONNECTOR_TYPE.WS.OKX_WALLET_APP_WALLET);\n                                    break;\n                                case protocol_1.ConnectWalletType.OKX_MINI:\n                                    connector = this.connectors.find(connector => connector.getType() === iconnector_1.CONNECTOR_TYPE.WS.OKX_TG_WALLET);\n                                    break;\n                                default:\n                                    connector = this.connectors.find(connector => connector.getType() === iconnector_1.CONNECTOR_TYPE.WS.OKX_APP_WALLET);\n                                    break;\n                            }\n                        }\n                        return connector === null || connector === void 0 ? void 0 : connector.openWallet({\n                            connectRequest: universalConnectRequest,\n                        }, linkType);\n                    };\n                    // logDebug('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response, connector) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.stopSendSessionRetry();\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    //for ws connector;\n                                    var tag = appName;\n                                    var realConector;\n                                    if (connector) {\n                                        realConector = connector;\n                                    }\n                                    else if (tag) {\n                                        realConector = (0, sessionUtils_1.findConnectorBySession)(this.connectors, { appName: tag }, { connectWalletType: sessionConfig.connectWalletType });\n                                    }\n                                    if (!realConector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(realConector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(realConector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded, universalConnectRequest.topic, openUniversalLink);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getType().toString()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                if (!this.getConnector()) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n                }\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getType().toString()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getType().toString()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getType().toString()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                if ((0, sessionUtils_1.findConnectorBySession)(this.connectors, session.wallet, session.sessionConfig)) {\n                    return session;\n                }\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet, sessionConfig) {\n        var tag = wallet === null || wallet === void 0 ? void 0 : wallet.appName;\n        if (!tag)\n            return;\n        this.setUseConnector((0, sessionUtils_1.findConnectorBySession)(this.connectors, wallet, sessionConfig));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector()) {\n                this.getConnector().restoreconnect(sessionInfo, (session) => {\n                    var _a, _b;\n                    onConnectResult(session);\n                    if (session) {\n                        this.deviceInfo = Object.assign({}, session.wallet);\n                        (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                    }\n                });\n            }\n            else {\n                onConnectResult(null);\n            }\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a, _b;\n            if (this.getConnector()) {\n                (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore);\n            }\n            else {\n                yield ((_b = this.connectors.find(connector => this.isWsConnector(connector))) === null || _b === void 0 ? void 0 : _b.connectManagerDisconnect(fromRestore));\n            }\n            this.stopSendSessionRetry();\n            this.setUseConnector(undefined);\n        });\n    }\n    sendSession(sessionInfo, topic, openUniversalLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            if (this.sessionRetryTimer) {\n                clearInterval(this.sessionRetryTimer);\n            }\n            if (!openUniversalLink) {\n                // connect msg retry\n                this.sessionRetryTimer = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n                    const retryRequestId = Date.now().toString();\n                    (0, utils_1.logDebug)('[Connect] Retrying sendSession...');\n                    yield this.connectionManager.sendSubscribe(topic);\n                    yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: retryRequestId })));\n                }), constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    stopSendSessionRetry() {\n        if (this.sessionRetryTimer) {\n            clearInterval(this.sessionRetryTimer);\n            this.sessionRetryTimer = null;\n            (0, utils_1.logDebug)('[Connect] Stopped retry for session');\n        }\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === 'connect_error') {\n                this.connectManagerDisconnect(false)\n                    .catch(() => { })\n                    .finally(() => {\n                    if (this.connectResultListener) {\n                        this.connectResultListener(jsonResponse);\n                    }\n                });\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MartainWalletAdapter = void 0;\nconst baseAptosWalletAdapter_1 = require(\"./baseAptosWalletAdapter\");\nconst aptosWalletAdapter_1 = require(\"./aptosWalletAdapter\");\nconst protocol_1 = require(\"../../../../protocol\");\nconst utils_1 = require(\"../../../../utils/utils\");\nconst utils_2 = require(\"../../../../utils\");\nclass MartainWalletAdapter extends baseAptosWalletAdapter_1.BaseAptosWalletAdapter {\n    get readyState() {\n        throw new Error(\"Method not implemented.\");\n    }\n    constructor() {\n        super();\n        this.name = 'Martian';\n        this.icon = 'https://raw.githubusercontent.com/hippospace/aptos-wallet-adapter/main/logos/martian.png';\n        this.url = '';\n        this._version = \"unknown\";\n        this._readyState = typeof window === 'undefined' || typeof document === 'undefined'\n            ? aptosWalletAdapter_1.WalletReadyState.Unsupported\n            : aptosWalletAdapter_1.WalletReadyState.NotDetected;\n        this._provider = typeof window !== 'undefined' ? window.martian : undefined;\n        this._network = undefined;\n        this._connecting = false;\n        this._wallet = null;\n        if (typeof window !== 'undefined' && this._readyState !== aptosWalletAdapter_1.WalletReadyState.Unsupported) {\n            (0, utils_1.scopePollingDetectionStrategy)(() => {\n                if (window.martian) {\n                    this._readyState = aptosWalletAdapter_1.WalletReadyState.Installed;\n                    this.emit('readyStateChange', this._readyState);\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n    get publicAccount() {\n        var _a, _b, _c;\n        return {\n            publicKey: ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null,\n            address: ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.address) || null,\n            authKey: ((_c = this._wallet) === null || _c === void 0 ? void 0 : _c.authKey) || null\n        };\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get version() {\n        return this._version;\n    }\n    get network() {\n        return {\n            name: this._network,\n            chainId: this._chainId\n        };\n    }\n    onAccountChange(listener) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const handleChangeAccount = (newAccount) => __awaiter(this, void 0, void 0, function* () {\n                    const { publicKey } = yield (provider === null || provider === void 0 ? void 0 : provider.account());\n                    this._wallet = Object.assign(Object.assign({}, this._wallet), { address: newAccount, publicKey });\n                    // this.emit('accountChange', newAccount);\n                });\n                yield (provider === null || provider === void 0 ? void 0 : provider.onAccountChange(handleChangeAccount));\n            }\n            catch (error) {\n                const errMsg = error.message;\n                // this.emit('error', new WalletAccountChangeError(errMsg));\n                throw error;\n            }\n            (0, utils_2.logDebug)('MartainWalletAdapter.onAccountChange()');\n        });\n    }\n    onNetworkChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_2.logDebug)('MartainWalletAdapter.onNetworkChange()');\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!(this._readyState === aptosWalletAdapter_1.WalletReadyState.Loadable ||\n                    this._readyState === aptosWalletAdapter_1.WalletReadyState.Installed)) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                if (this.connecting)\n                    return;\n                if (this.connected) {\n                    yield this.initNetWork();\n                    return;\n                }\n                this._connecting = true;\n                const provider = this._provider || window.martian;\n                const isConnected = yield (provider === null || provider === void 0 ? void 0 : provider.isConnected());\n                if (isConnected) {\n                    yield (provider === null || provider === void 0 ? void 0 : provider.disconnect());\n                }\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.connect());\n                if (!response) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                }\n                yield this.initNetWork();\n                // this.emit('connect', this._wallet?.address || '');\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    initNetWork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this._provider || window.martian;\n            const walletAccount = yield (provider === null || provider === void 0 ? void 0 : provider.account());\n            if (walletAccount) {\n                this._wallet = Object.assign(Object.assign({}, walletAccount), { isConnected: true });\n                const name = yield (provider === null || provider === void 0 ? void 0 : provider.network());\n                const { chainId } = yield provider.getChainId();\n                this._network = name;\n                this._chainId = chainId.toString();\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            const provider = this._provider || window.martian;\n            if (wallet) {\n                this._wallet = null;\n                try {\n                    yield (provider === null || provider === void 0 ? void 0 : provider.disconnect());\n                }\n                catch (error) {\n                }\n            }\n        });\n    }\n    signAndSubmitTransaction(payload, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const transaction = yield provider.generateTransaction(wallet.address || '', payload, options);\n                if (!transaction)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, 'generate transaction error');\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signAndSubmitTransaction(transaction));\n                if (!response) {\n                    throw new Error('No response');\n                }\n                return { hash: response };\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signTransaction(payload, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const transaction = yield provider.generateTransaction(wallet.address || '', payload, options);\n                if (!transaction)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, 'generate transaction error');\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signTransaction(transaction));\n                if (!response) {\n                    throw new Error('No response');\n                }\n                return response;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this._provider || window.martian;\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                if (typeof message !== 'object' || !message.nonce) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"Invalid signMessage Payload\");\n                }\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signMessage(message));\n                if (response) {\n                    return response;\n                }\n                else {\n                    throw new Error('Sign Message failed');\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n}\nexports.MartainWalletAdapter = MartainWalletAdapter;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiStandardProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nclass SuiStandardProvider {\n    constructor(wallet) {\n        this.wallet = wallet;\n    }\n    getVersion() {\n        return this.wallet.version;\n    }\n    supportChains(chains) {\n        if (chains.length === 1 && chains[0] === protocol_1.SUI_CHAINS.MAINNET) {\n            return true;\n        }\n        return false;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // await this.restoreConnect()\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.wallet) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            let injectSignResult;\n                            if (this.wallet.features['sui:signTransaction']) {\n                                injectSignResult = yield this.wallet.features['sui:signTransaction'].signTransaction(originalRarams);\n                            }\n                            else if (this.wallet.features['sui:signTransactionBlock']) {\n                                injectSignResult = yield this.wallet.features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult === null || injectSignResult === void 0 ? void 0 : injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            let injectSendResult;\n                            if (this.wallet.features['sui:signAndExecuteTransaction']) {\n                                injectSendResult = yield this.wallet.features['sui:signAndExecuteTransaction'].signAndExecuteTransaction(originalRarams);\n                            }\n                            else if (this.wallet.features['sui:signAndExecuteTransactionBlock']) {\n                                injectSendResult = yield this.wallet.features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.wallet.features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.wallet.features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    addAccountChangedListener() {\n    }\n    removeListener() {\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.wallet.features['standard:connect'].connect();\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let firstAccount = yield this.connect();\n            if (!firstAccount) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n            let address = (_a = firstAccount === null || firstAccount === void 0 ? void 0 : firstAccount.address) !== null && _a !== void 0 ? _a : \"\";\n            let publicKey = (_b = firstAccount === null || firstAccount === void 0 ? void 0 : firstAccount.publicKey) !== null && _b !== void 0 ? _b : \"\";\n            if (publicKey instanceof Uint8Array) {\n                publicKey = this.normalizeUint8Array(publicKey);\n                publicKey = btoa(String.fromCharCode(...publicKey));\n            }\n            let extra = {};\n            extra[protocol_1.SUI_CHAINS.MAINNET] = { publicKey: publicKey };\n            return {\n                namespace: protocol_1.NameSpaceKeySui,\n                addresses: [`${protocol_1.SUI_CHAINS.MAINNET}:${firstAccount.address}`],\n                methods: firstAccount.features,\n                extra: extra\n            };\n        });\n    }\n    normalizeUint8Array(data) {\n        if (data.length === 33 && data[0] === 0) {\n            return data.slice(1);\n        }\n        return data;\n    }\n}\nexports.SuiStandardProvider = SuiStandardProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addAccountChangedListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectWalletType = void 0;\nvar ConnectWalletType;\n(function (ConnectWalletType) {\n    ConnectWalletType[ConnectWalletType[\"OKX_MINI\"] = 1] = \"OKX_MINI\";\n    ConnectWalletType[ConnectWalletType[\"OKX_APP\"] = 2] = \"OKX_APP\";\n    ConnectWalletType[ConnectWalletType[\"OKX_WALLET\"] = 3] = \"OKX_WALLET\";\n})(ConnectWalletType || (exports.ConnectWalletType = ConnectWalletType = {}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.icon = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: Date.now().toString(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        return true;\n        // const allReady = namespaceKeys!.every(namespaceKey =>\n        //     this.getInjectProvider(namespaceKey)?.connectReady()\n        // );\n        // return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getSupportNameSpaces() {\n        return Array.from(this.providerMap.keys());\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./aptosStandardProvider\"), exports);\n__exportStar(require(\"./aptosThirdpartInjectProvider\"), exports);\n__exportStar(require(\"./walletAdapter\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAppConnector = void 0;\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nconst wsConnector_1 = require(\"./wsConnector\");\nclass OKXAppConnector extends wsConnector_1.WsConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.WS.OKX_APP_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        // walletNameKey: string = 'walletModal.mobileConnectionModal.connectApp';\n        this.walletNameKey = '';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if ((engineConnectInfo && engineConnectInfo.connectRequest) || !(0, utils_1.isOS)('android')) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.connectRequest;\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest, protocol_1.ConnectWalletType.OKX_APP);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            (0, utils_1.openDeeplinkWithFallback)(constants_1.okxAppStackDeepLink, () => { });\n        }\n    }\n}\nexports.OKXAppConnector = OKXAppConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (args.injectParams) {\n                if (\"chain\" in args && core_1.SUI_CHAINS.MAINNET != args[\"chain\"]) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                args.injectParams[\"chain\"] = core_1.SUI_CHAINS.MAINNET;\n                if (\"account\" in args && args[\"account\"].address != this.getAccounts[0]) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n                args.injectParams[\"account\"] = {\n                    address: this.getAccounts()[0]\n                };\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./aptosWalletAdapter\"), exports);\n__exportStar(require(\"./martainWalletAdapter\"), exports);\n__exportStar(require(\"./petraWalletAdapter\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.icon = '';\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PetraWalletAdapter = void 0;\nconst baseAptosWalletAdapter_1 = require(\"./baseAptosWalletAdapter\");\nconst aptosWalletAdapter_1 = require(\"./aptosWalletAdapter\");\nconst utils_1 = require(\"../../../../utils/utils\");\nconst protocol_1 = require(\"../../../../protocol\");\nclass PetraWalletAdapter extends baseAptosWalletAdapter_1.BaseAptosWalletAdapter {\n    get readyState() {\n        return this._readyState;\n    }\n    getPerta() {\n        var _a;\n        if (this._provider) {\n            return this._provider;\n        }\n        if (!window.petra) {\n            return undefined;\n        }\n        let perta = window.petra;\n        if (perta && (perta.isOKExWallet || perta.isOkxWallet || ((_a = window.okxwallet) === null || _a === void 0 ? void 0 : _a.aptos) === perta)) {\n            return undefined;\n        }\n        this._provider = perta;\n        return perta;\n    }\n    constructor() {\n        super();\n        this.name = 'Petra';\n        this.icon = 'https://raw.githubusercontent.com/hippospace/aptos-wallet-adapter/main/logos/petra.png';\n        this.url = '';\n        this._version = \"unknown\";\n        this._readyState = typeof window === 'undefined' || typeof document === 'undefined'\n            ? aptosWalletAdapter_1.WalletReadyState.Unsupported\n            : aptosWalletAdapter_1.WalletReadyState.NotDetected;\n        this._network = undefined;\n        this._connecting = false;\n        this._wallet = null;\n        if (typeof window !== 'undefined' && this._readyState !== aptosWalletAdapter_1.WalletReadyState.Unsupported) {\n            (0, utils_1.scopePollingDetectionStrategy)(() => {\n                if (this.getPerta()) {\n                    this._readyState = aptosWalletAdapter_1.WalletReadyState.Installed;\n                    // this.emit('readyStateChange', this._readyState);\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n    get publicAccount() {\n        var _a, _b, _c;\n        return {\n            publicKey: ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null,\n            address: ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.address) || null,\n            authKey: ((_c = this._wallet) === null || _c === void 0 ? void 0 : _c.authKey) || null\n        };\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get version() {\n        return this._version;\n    }\n    get network() {\n        return {\n            name: this._network,\n        };\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!(this._readyState === aptosWalletAdapter_1.WalletReadyState.Loadable ||\n                    this._readyState === aptosWalletAdapter_1.WalletReadyState.Installed)) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                // if (this.connecting) return;\n                if (this.connected) {\n                    yield this.initNetWork();\n                    return;\n                }\n                this._connecting = true;\n                const provider = this.getPerta();\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.connect());\n                this._wallet = {\n                    address: response === null || response === void 0 ? void 0 : response.address,\n                    publicKey: response === null || response === void 0 ? void 0 : response.publicKey,\n                    isConnected: true\n                };\n                yield this.initNetWork();\n                // this.emit('connect', this._wallet?.address || '');\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    initNetWork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.getPerta();\n            const name = yield (provider === null || provider === void 0 ? void 0 : provider.network());\n            const chainId = null;\n            const api = null;\n            this._network = name;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            const provider = this.getPerta();\n            if (wallet) {\n                this._wallet = null;\n                try {\n                    yield (provider === null || provider === void 0 ? void 0 : provider.disconnect());\n                }\n                catch (error) {\n                }\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const response = yield provider.signAndSubmitTransaction(transaction, options);\n                if (response.code) {\n                    throw new Error(response.message);\n                }\n                return response;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signTransaction(transaction));\n                if (response.code) {\n                    throw new Error(response.message);\n                }\n                return response;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                if (!wallet || !provider)\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                const response = yield (provider === null || provider === void 0 ? void 0 : provider.signMessage(message));\n                if (response) {\n                    return response;\n                }\n                else {\n                    throw new Error('Sign Message failed');\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    onAccountChange(listener) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                const handleAccountChange = (newAccount) => __awaiter(this, void 0, void 0, function* () {\n                    var _a, _b, _c, _d, _e, _f;\n                    if (newAccount === null || newAccount === void 0 ? void 0 : newAccount.publicKey) {\n                        this._wallet = Object.assign(Object.assign({}, this._wallet), { publicKey: newAccount.publicKey || ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey), authKey: newAccount.authKey || ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.authKey), address: newAccount.address || ((_c = this._wallet) === null || _c === void 0 ? void 0 : _c.address) });\n                    }\n                    else {\n                        const response = yield (provider === null || provider === void 0 ? void 0 : provider.connect());\n                        this._wallet = Object.assign(Object.assign({}, this._wallet), { authKey: (response === null || response === void 0 ? void 0 : response.authKey) || ((_d = this._wallet) === null || _d === void 0 ? void 0 : _d.authKey), address: (response === null || response === void 0 ? void 0 : response.address) || ((_e = this._wallet) === null || _e === void 0 ? void 0 : _e.address), publicKey: (response === null || response === void 0 ? void 0 : response.publicKey) || ((_f = this._wallet) === null || _f === void 0 ? void 0 : _f.publicKey) });\n                    }\n                    // this.emit('accountChange', newAccount.publicKey);\n                    listener === null || listener === void 0 ? void 0 : listener(this._wallet);\n                });\n                provider === null || provider === void 0 ? void 0 : provider.onAccountChange(handleAccountChange);\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    onNetworkChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                const provider = this.getPerta();\n                const handleNetworkChange = (newNetwork) => __awaiter(this, void 0, void 0, function* () {\n                    if (newNetwork) {\n                        this._network = newNetwork.networkName;\n                    }\n                });\n                // provider?.onNetworkChange(handleNetworkChange);\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n}\nexports.PetraWalletAdapter = PetraWalletAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileDiscover = exports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\nObject.defineProperty(exports, \"isMobileDiscover\", { enumerable: true, get: function () { return ConnectMethodUtils_1.isMobileDiscover; } });\n","<template>\n  <div id=\"app\">\n    <RouterView/>\n  </div>\n</template>\n\n<script setup>\n</script>\n\n<style scoped>\n</style>","import { render } from \"./App.vue?vue&type=template&id=51450677\"\nconst script = {}\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">WalletType</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"connectWalletType\" @change=\"handleWalletType\" placeholder=\"WalletType\">\n                <el-option label=\"OKX_APP\" :value=\"ConnectWalletType.OKX_APP\"/>\n                <el-option label=\"OKX_TG\" :value=\"ConnectWalletType.OKX_MINI\"/>\n                <el-option label=\"OKX_WALLET\" :value=\"ConnectWalletType.OKX_WALLET\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,ConnectWalletType} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./BtcTransactionPanel.vue\";\nimport FractalPanel from \"./FractalTransactionPanel.vue\"\nimport SuiPanel from \"./SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\nvar selectedWalletType = ConnectWalletType.OKX_APP;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      connectWalletType: selectedWalletType,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    ConnectWalletType() {\n      return ConnectWalletType\n    },\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n            if (this.isPC()) {\n              if (uri && !this.withUI) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      // let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      // console.log(\"字符串编码5>>>>\", showUrl)\n      // this.qrValue = showUrl;\n      // this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        connectData.sessionConfig = {\n          connectWalletType:selectedWalletType,\n          openUniversalUrl: true,\n          tmaReturnUrl: 'back',\n          redirect: selectedReturnStrategy\n        }\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                console.error(error.message);\n              }, 0.5);\n            } else if (error.message) {\n              console.error(error.message);\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        // const transaction = await aptos.transaction.build.simple({\n        //   sender: provider.getAccount(this.selectedChain).address,\n        //   data: {\n        //     // The Move entry-function\n        //     function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n        //     // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n        //     typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n        //     functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        //   },\n        // });\n        // console.log(\"获取地址aptos 222222：\");\n\n        const recipient = '0x0b6c915bb78c6a98d094661a1fccdffb16f73b48a003aa860feae1684bab8cb3'\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address, // 发送者的地址\n          data: {\n            function: \"0x1::aptos_account::transfer\", // Aptos 的转账函数\n            typeArguments: [], // 转账不需要 type 参数\n            functionArguments: [recipient, '1000000'], // 参数：[接收地址，金额]\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transaction.build.simple({\n      //   sender: provider.getAccount(this.selectedChain).address,\n      //   data: {\n      //     // The Move entry-function\n      //     function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //     // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n      //     typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n      //     functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n      //   },\n      // });\n\n// 转账\n      const recipient = '0x0b6c915bb78c6a98d094661a1fccdffb16f73b48a003aa860feae1684bab8cb3'\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address, // 发送者的地址\n        data: {\n          function: \"0x1::aptos_account::transfer\", // Aptos 的转账函数\n          typeArguments: [], // 转账不需要 type 参数\n          functionArguments: [recipient, '1000000'], // 参数：[接收地址，金额]\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleWalletType(walletType) {\n      selectedWalletType = walletType;\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    // this.initBtnClicked()\n    // setTimeout(()=>{\n      this.initBtnClicked()\n    // },2000)\n\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./Home.vue?vue&type=template&id=4a7ab798&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=4a7ab798&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a7ab798\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\nimport Home from \"./components/Home.vue\";\nimport {createRouter, createWebHashHistory} from \"vue-router\";\n\nconst app = createApp(App)\n\nconst routes = [\n    {\n        path: '/',\n        name: 'home',\n        component:Home\n    },\n    // {\n    //     path: '/aptosAdapter',\n    //     name: 'goAptosAdapter',\n    //     component: AptosAdapter\n    // }\n];\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes\n});\n\napp.use(router)\napp.use(ElementPlus)\napp.mount('#app')","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addAccountChangedListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst InjectConnector_1 = require(\"./InjectConnector\");\nconst protocol_1 = require(\"../protocol\");\nconst inject_1 = require(\"../inject\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nconst utils_1 = require(\"../utils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst media_1 = require(\"../utils/media\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst iconnector_1 = require(\"./iconnector\");\nclass OkxwalletInjectConnector extends InjectConnector_1.InjectConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.INJECT.OKX_INJECT_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result, this);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    }, this);\n                }\n            }\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_1.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_1.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addAccountChangedListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache instanceof Object) {\n            try {\n                let topicExpireMap = new Map(Object.entries(topicExpireCache));\n                let lastTimestamp = topicExpireMap.get(topic);\n                if (lastTimestamp) {\n                    if (Date.now() > lastTimestamp) {\n                        (0, log_1.logDebug)('checkExpire: connection is Expired');\n                        isExpired = true;\n                    }\n                }\n                else {\n                    (0, log_1.logDebug)('checkExpire: not same connection');\n                    isExpired = false;\n                }\n            }\n            catch (error) {\n                (0, log_1.logDebug)('checkExpire: cache error');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        try {\n            let cacheMapCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n            let cacheMap = new Map();\n            if (cacheMapCache) {\n                cacheMap = new Map(Object.entries(cacheMapCache));\n            }\n            let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n            cacheMap.set(topic, expireTimestamp);\n            this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, Object.fromEntries(cacheMap));\n        }\n        catch (error) {\n            (0, log_1.logDebug)(\"update cache failed\");\n        }\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nexports.scopePollingDetectionStrategy = scopePollingDetectionStrategy;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\nfunction scopePollingDetectionStrategy(detect) {\n    // Early return when server-side rendering\n    if (typeof window === 'undefined' || typeof document === 'undefined')\n        return;\n    const disposers = [];\n    function detectAndDispose() {\n        const detected = detect();\n        if (detected) {\n            for (const dispose of disposers) {\n                dispose();\n            }\n        }\n    }\n    // Strategy #1: Try detecting every second.\n    const interval = \n    // TODO: #334 Replace with idle callback strategy.\n    setInterval(detectAndDispose, 1000);\n    disposers.push(() => clearInterval(interval));\n    // Strategy #2: Detect as soon as the DOM becomes 'ready'/'interactive'.\n    if (\n    // Implies that `DOMContentLoaded` has not yet fired.\n    document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', detectAndDispose, { once: true });\n        disposers.push(() => document.removeEventListener('DOMContentLoaded', detectAndDispose));\n    }\n    // Strategy #3: Detect after the `window` has fully loaded.\n    if (\n    // If the `complete` state has been reached, we're too late.\n    document.readyState !== 'complete') {\n        window.addEventListener('load', detectAndDispose, { once: true });\n        disposers.push(() => window.removeEventListener('load', detectAndDispose));\n    }\n    // Strategy #4: Detect synchronously, now.\n    detectAndDispose();\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addAccountChangedListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./thirdpartprovider\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.okxWalletUniversalLink = exports.okxAppUniversalLink = exports.okxWalletDeepLink = exports.okxAppDeepLink = exports.okxWalletStackDeepLink = exports.okxAppStackDeepLink = exports.standardDeeplink = exports.downloadUrl = exports.tonConnectSdkVersion = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"okxAppStackDeepLink\", { enumerable: true, get: function () { return constants_1.okxAppStackDeepLink; } });\nObject.defineProperty(exports, \"okxWalletStackDeepLink\", { enumerable: true, get: function () { return constants_1.okxWalletStackDeepLink; } });\nObject.defineProperty(exports, \"okxAppDeepLink\", { enumerable: true, get: function () { return constants_1.okxAppDeepLink; } });\nObject.defineProperty(exports, \"okxWalletDeepLink\", { enumerable: true, get: function () { return constants_1.okxWalletDeepLink; } });\nObject.defineProperty(exports, \"okxAppUniversalLink\", { enumerable: true, get: function () { return constants_1.okxAppUniversalLink; } });\nObject.defineProperty(exports, \"okxWalletUniversalLink\", { enumerable: true, get: function () { return constants_1.okxWalletUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosStandardProvider = void 0;\nconst protocol_1 = require(\"../../../protocol\");\nconst utils_1 = require(\"../../../utils\");\nconst misc_1 = require(\"./misc\");\nclass AptosStandardProvider {\n    constructor(wallet) {\n        this.wallet = wallet;\n        this.mainNetWorkInfo = {\n            chainId: \"1\",\n            name: misc_1.AptosNetwork.MAINNET\n        };\n    }\n    getVersion() {\n        return this.wallet.version;\n    }\n    supportChains(chains) {\n        if (chains.length === 1 && chains[0] === protocol_1.APTOS_CHAINS.MAINNET) {\n            return true;\n        }\n        return false;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                try {\n                    (0, utils_1.logDebug)(\"AptosStandardProvider send request:\", JSON.stringify(request));\n                }\n                catch (error) {\n                }\n                yield this.confirmNetwrok(request.chainId);\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.wallet) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"aptos_signTransaction\":\n                            let injectSignResult;\n                            if (this.wallet.features['aptos:signTransaction']) {\n                                let result = yield this.wallet.features['aptos:signTransaction'].signTransaction(originalRarams);\n                                injectSignResult = (0, misc_1.getArgs)(result);\n                                if (injectSignResult instanceof Uint8Array) {\n                                    injectSignResult = this.normalizeUint8Array(injectSignResult);\n                                    injectSignResult = btoa(String.fromCharCode(...injectSignResult));\n                                }\n                                else if (injectSignResult.signature) {\n                                    injectSignResult = injectSignResult.signature.toString();\n                                }\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"aptos_signTransaction\",\n                                result: injectSignResult\n                            };\n                            break;\n                        case \"aptos_signMessage\":\n                            let signMessageResult;\n                            if (this.wallet.features['aptos:signMessage']) {\n                                let result = yield this.wallet.features['aptos:signMessage'].signMessage(originalRarams);\n                                signMessageResult = (0, misc_1.getArgs)(result);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"aptos_signMessage\",\n                                result: signMessageResult === null || signMessageResult === void 0 ? void 0 : signMessageResult.signature.toString()\n                            };\n                            break;\n                        case \"aptos_signAndSubmitTransaction\":\n                            let transactionResult;\n                            if (this.wallet.features['aptos:signAndSubmitTransaction']) {\n                                if (this.wallet.features['aptos:signAndSubmitTransaction'].version !== '1.1.0') {\n                                    let result = yield this.wallet.features['aptos:signAndSubmitTransaction'].signAndSubmitTransaction(originalRarams);\n                                    transactionResult = (0, misc_1.getArgs)(result);\n                                }\n                                else {\n                                    let params = request.params;\n                                    let realParams = { payload: {} };\n                                    if (request.params && typeof request.params === \"object\" && \"type_arguments\" in request.params) {\n                                        realParams.payload.typeArguments = request.params.type_arguments;\n                                    }\n                                    if (request.params && typeof request.params === \"object\" && \"arguments\" in request.params) {\n                                        realParams.payload.functionArguments = request.params.arguments;\n                                    }\n                                    if (request.params && typeof request.params === \"object\" && \"function\" in request.params) {\n                                        realParams.payload.function = request.params.function;\n                                    }\n                                    let result = yield this.wallet.features['aptos:signAndSubmitTransaction'].signAndSubmitTransaction(realParams);\n                                    transactionResult = (0, misc_1.getArgs)(result);\n                                }\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"aptos_signAndSubmitTransaction\",\n                                result: transactionResult.hash.toString()\n                            };\n                            break;\n                        case \"aptos_changeNetwork\":\n                            const injectPersonalResult = yield this.wallet.features['aptos:changeNetwork'].changeNetwork(originalRarams);\n                            result = {\n                                method: \"aptos_signPersonalMessage\",\n                                result: injectPersonalResult.signature.toString()\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"aptosProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    removeListener() {\n        if (this.wallet.features['aptos:onAccountChange']) {\n            this.wallet.features['aptos:onAccountChange'].onAccountChange((accountInfo) => { });\n        }\n    }\n    addAccountChangedListener(accountChangedListener) {\n        if (this.wallet.features['aptos:onAccountChange']) {\n            this.wallet.features['aptos:onAccountChange'].onAccountChange((accountInfo) => {\n                var _a, _b;\n                try {\n                    accountChangedListener((_b = (_a = (0, misc_1.getArgs)(accountInfo)) === null || _a === void 0 ? void 0 : _a.address) === null || _b === void 0 ? void 0 : _b.toString());\n                }\n                catch (e) {\n                    accountChangedListener(undefined);\n                }\n            });\n        }\n        if (this.wallet.features['aptos:onNetworkChange']) {\n            this.wallet.features['aptos:onNetworkChange'].onNetworkChange((networkInfo) => {\n            });\n        }\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.wallet.features[\"aptos:connect\"].connect();\n        });\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let account = (0, misc_1.getArgs)(yield this.connect());\n            let address = account.address;\n            if (address instanceof Uint8Array) {\n                address = this.normalizeUint8Array(address);\n                address = btoa(String.fromCharCode(...address));\n            }\n            let publicKey = account.publicKey.toString();\n            let extra = {};\n            extra[protocol_1.APTOS_CHAINS.MAINNET] = { publicKey: publicKey };\n            return {\n                namespace: protocol_1.NameSpaceKeyAptos,\n                addresses: [`${protocol_1.APTOS_CHAINS.MAINNET}:${address}`],\n                methods: [],\n                extra: extra\n            };\n        });\n    }\n    normalizeUint8Array(data) {\n        if (data.length === 33 && data[0] === 0) {\n            return data.slice(1);\n        }\n        return data;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wallet.features['aptos:disconnect']) {\n                return this.wallet.features[\"aptos:disconnect\"].disconnect();\n            }\n        });\n    }\n    confirmNetwrok(chainid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (chainid !== utils_1.chainName2IdMap.get(protocol_1.APTOS_CHAINS.MAINNET)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n            }\n            if (this.wallet.features['aptos:network']) {\n                let walletNetwork = yield this.wallet.features['aptos:network'].network();\n                if (walletNetwork.chainId == 1 && walletNetwork.name.toLowerCase() == misc_1.AptosNetwork.MAINNET) {\n                    return Promise.resolve();\n                }\n                yield this.changeMainNetwork();\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    changeMainNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wallet.features['aptos:changeNetwork']) {\n                let result = yield (this.wallet.features['aptos:changeNetwork'].changeNetwork(this.mainNetWorkInfo));\n                let changeNetworkResult = (0, misc_1.getArgs)(result);\n                if (changeNetworkResult.success) {\n                    return Promise.resolve();\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n}\nexports.AptosStandardProvider = AptosStandardProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosAppleWalletName = exports.AptosGoogleWalletName = exports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletAppName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXWalletAppName = \"OKX Wallet App\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nexports.AptosGoogleWalletName = \"Continue with Google\";\nexports.AptosAppleWalletName = \"Continue with Apple\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addAccountChangedListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nexports.versionStr = '1.8.5';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        // this.currentUUID = toHexString(nacl.randomBytes(16))\n        this.currentUUID = \"fjdkakfjsadkfklasdkfsdjkljfklsdjklfioruer3239084dkskfsa\";\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThirdpartInjectConnector = void 0;\nconst InjectConnector_1 = require(\"./InjectConnector\");\nconst protocol_1 = require(\"../protocol\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass ThirdpartInjectConnector extends InjectConnector_1.InjectConnector {\n    getType() {\n        if (this.walletName === protocol_1.AptosGoogleWalletName) {\n            return iconnector_1.CONNECTOR_TYPE.KEYLESS.GOOGLE_WALLET;\n        }\n        else if (this.walletName === protocol_1.AptosAppleWalletName) {\n            return iconnector_1.CONNECTOR_TYPE.KEYLESS.APPLE_WALLET;\n        }\n        else {\n            return iconnector_1.CONNECTOR_TYPE.INJECT.STANDARD_INJECT_WALLET;\n        }\n    }\n    constructor(thirdpartInjectWallet) {\n        super();\n        this.walletName = thirdpartInjectWallet.walletName;\n        thirdpartInjectWallet.wallets.forEach((value, key) => {\n            this.providerMap.set(key, value);\n        });\n        this.icon = thirdpartInjectWallet.icon;\n    }\n    registerWallet(nameSpace, wallet) {\n        this.providerMap.set(nameSpace, wallet);\n    }\n    getTag() {\n        var _a;\n        return iconnector_1.STANDARD_INJECT_WALLET + ((_a = this.walletName) !== null && _a !== void 0 ? _a : \"\");\n    }\n    getWalletVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const firstWallet = this.providerMap.values().next().value;\n            if (!firstWallet) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n            return firstWallet.getVersion();\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (universalConnectRequest.requests) {\n                    let requestAccounts = universalConnectRequest.requests\n                        .find(item => item.name === \"requestAccounts\");\n                    const required = (_a = requestAccounts.requiredNamespaces) !== null && _a !== void 0 ? _a : [];\n                    const optional = (_b = requestAccounts.optionalNamespaces) !== null && _b !== void 0 ? _b : [];\n                    let result = undefined;\n                    if (required.length + optional.length === 1) {\n                        const singleItem = required.length === 1 ? required[0] : optional[0];\n                        const singleProvider = this.providerMap.get(singleItem.namespace);\n                        this.addListener(singleItem.namespace);\n                        // await this.disconnect()\n                        if (singleProvider) {\n                            result = yield this.getResponseByConnect(singleProvider);\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"openWallet: provider not found\");\n                        }\n                    }\n                    if (this.connectResultListener && result) {\n                        this.connectResultListener(result, this);\n                    }\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    getResponseByConnect(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let result = {\n                method: \"connect\",\n                requestId: Date.now().toString(),\n                payload: {\n                    wallet: {\n                        platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                        appName: iconnector_1.STANDARD_INJECT_WALLET + this.walletName,\n                        appVersion: (_b = this.getWalletVersion()) !== null && _b !== void 0 ? _b : \"1.0.0\",\n                        maxProtocolVersion: 1,\n                    },\n                    responses: []\n                },\n            };\n            let responseItem = {\n                name: \"requestAccounts\",\n                accounts: [],\n            };\n            result.payload.responses.push(responseItem);\n            responseItem.accounts.push(yield this.getAccount(provider));\n            return result;\n        });\n    }\n    getAccount(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return provider.getAccount();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield Promise.all([...this.providerMap.values()].map(provider => provider.disconnect()));\n        });\n    }\n    onDisconnect() {\n        this.disconnectListener.forEach(listener => listener());\n        this.disconnectListener = [];\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        const keys = Object.keys(sessionInfo.namespaces);\n        const isSingleChain = keys.length === 1;\n        if (!isSingleChain) {\n            onConnectResult(null);\n            return;\n        }\n        const provider = this.getInjectProvider(keys[0]);\n        if (!provider)\n            return onConnectResult(null);\n        provider.getAccount().then(account => {\n            var _a;\n            let address = (_a = account === null || account === void 0 ? void 0 : account.addresses) !== null && _a !== void 0 ? _a : [\"\"];\n            if (sessionInfo.namespaces[keys[0]].accounts[0].includes(address[0])) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                onConnectResult(null);\n            }\n        }).catch(error => {\n            onConnectResult(null);\n        });\n    }\n    checkAccountChanged(nameSpace, newAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (newAddress) {\n                    if (sessionLocal.namespaces[nameSpace].accounts.includes(newAddress)) {\n                        return;\n                    }\n                }\n                let provider = this.getInjectProvider(nameSpace);\n                if (provider) {\n                    let sessionNew = yield this.getResponseByConnect(provider);\n                    if (!!sessionNew && sessionLocal) {\n                        let universalResponses = sessionNew.payload.responses;\n                        let universalAccountItem = universalResponses[0].accounts[0];\n                        sessionLocal.namespaces[nameSpace].accounts = universalAccountItem.addresses;\n                        sessionLocal.namespaces[nameSpace].extra = universalAccountItem.extra;\n                        sessionLocal.namespaces[nameSpace].rpcMap = undefined;\n                        sessionLocal.namespaces[nameSpace].methods = universalAccountItem.methods;\n                        (_b = this.accountChangeListener) === null || _b === void 0 ? void 0 : _b.call(this, sessionLocal);\n                    }\n                }\n            }\n            catch (error) {\n                yield this.disconnect();\n            }\n        });\n    }\n    addListener(nameSpace) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(nameSpace)) === null || _b === void 0 ? void 0 : _b.addAccountChangedListener((newAddress) => {\n            if (newAddress) {\n                this.checkAccountChanged(nameSpace, newAddress).catch(e => {\n                });\n            }\n            else {\n                this.onDisconnect();\n            }\n        });\n    }\n    supportNamespaceAndChains(nameSpace, chains) {\n        let provider = this.providerMap.get(nameSpace);\n        if (!provider) {\n            return false;\n        }\n        return provider.supportChains(chains);\n    }\n}\nexports.ThirdpartInjectConnector = ThirdpartInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor(wallet = window.okxwallet.sui) {\n        // const chainName = \"sui:mainnet\";\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         console.log('suiGlobalWallet',wallet)\n        //         if (wallet.chains.includes(chainName)) {\n        //             console.log('suiGlobalWallet', wallet.name)\n        //         }\n        //         GlobalWallet[wallet.chainName] = wallet;\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n        this.wallet = wallet;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return this.wallet;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            let injectSignResult;\n                            if (this.getSuiWallet().features['sui:signTransaction']) {\n                                injectSignResult = yield this.getSuiWallet().features['sui:signTransaction'].signTransaction(originalRarams);\n                            }\n                            else if (this.getSuiWallet().features['sui:signTransactionBlock']) {\n                                injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult === null || injectSignResult === void 0 ? void 0 : injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            let injectSendResult;\n                            if (this.getSuiWallet().features['sui:signAndExecuteTransaction']) {\n                                injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransaction'].signAndExecuteTransaction(originalRarams);\n                            }\n                            else if (this.getSuiWallet().features['sui:signAndExecuteTransactionBlock']) {\n                                injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                            }\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addStandardEventListener(standardEventListener) {\n        var _a, _b;\n        if ((_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:events']) {\n            (0, utils_1.logDebug)(\"sui-provider standard:events change\");\n            (_b = this.getSuiWallet()) === null || _b === void 0 ? void 0 : _b.features['standard:events'].on('change', (event) => {\n                standardEventListener(event);\n            });\n        }\n        else {\n            (0, utils_1.logDebug)(\"sui-provider standard:events null\");\n        }\n    }\n    addAccountChangedListener(accountChangeListener) {\n        var _a;\n        console.log(\"configEventWithKey:\", 'sui');\n        if (this.getSuiWallet().on) {\n            this.accountChangedHandler = (publicKey) => {\n                console.log(\"configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n                if (publicKey) {\n                    accountChangeListener();\n                }\n            };\n            (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.on('accountChanged', this.accountChangedHandler);\n        }\n    }\n    removeListener() {\n        var _a;\n        if (this.accountChangedHandler) {\n            (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst wsConnector_1 = require(\"./wsConnector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends wsConnector_1.WsConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.WS.OKX_TG_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        // walletNameKey:string = 'walletModal.mobileConnectionModal.connectMini'\n        this.walletNameKey = '';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var tgUrl = (0, utils_1.getOKXLink)(engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.connectRequest, protocol_1.ConnectWalletType.OKX_MINI, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl.universalLink);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletAppConnector = void 0;\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nconst wsConnector_1 = require(\"./wsConnector\");\nclass OKXWalletAppConnector extends wsConnector_1.WsConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.WS.OKX_WALLET_APP_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet App';\n    }\n    getTag() {\n        return iconnector_1.OKX_WALLET_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if ((engineConnectInfo && engineConnectInfo.connectRequest) || !(0, utils_1.isOS)('android')) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.connectRequest;\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest, protocol_1.ConnectWalletType.OKX_WALLET);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            (0, utils_1.openDeeplinkWithFallback)(constants_1.okxWalletStackDeepLink, () => { });\n        }\n    }\n}\nexports.OKXWalletAppConnector = OKXWalletAppConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nconst okxwalletInjectConnector_1 = require(\"./okxwalletInjectConnector\");\nconst iconnector_1 = require(\"./iconnector\");\nclass OkxwalletInjectTonsdkConnector extends okxwalletInjectConnector_1.OkxwalletInjectConnector {\n    getType() {\n        return iconnector_1.CONNECTOR_TYPE.INJECT.OKX_INJECT_WALLET;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./suiStandardProvider\"), exports);\n__exportStar(require(\"./aptos\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            let universalLink = (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.connectWalletType);\n                            (0, core_1.logDebug)(`universalConect url:`, universalLink);\n                            this.events.emit(\"display_uri\", universalLink);\n                            this.events.emit(\"short_display_uri\", universalLink);\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(session) {\n        this.engine.setConnectConnector(session === null || session === void 0 ? void 0 : session.wallet, session === null || session === void 0 ? void 0 : session.sessionConfig);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !Object.values(core_1.CONNECTOR_TYPE.INJECT).includes(this.engine.getConnector().getType())\n                && !Object.values(core_1.CONNECTOR_TYPE.KEYLESS).includes(this.engine.getConnector().getType());\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.isMobileDiscover = isMobileDiscover;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction isMobileDiscover() {\n    return !!(window.okxwallet) && window.okxwallet.mobileDiscoverWallet;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('injectResult' in signedMessage) {\n                    let injectResult = signedMessage.injectResult;\n                    console.error('aptos_signMessage --injectResult--', JSON.stringify(injectResult));\n                    return new Promise((resolve, reject) => {\n                        resolve(injectResult);\n                    });\n                }\n                else if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx,\n                    injectParams: transaction\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx,\n                    injectParams: transaction\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\n// export function getUniversalLink(deeplinkUrl: string, useStandardUniversalLink: boolean = false): string {\n//     console.log(\"getUniversalLink deeplinkUrl:\",deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink)\n//     /*const replaceStrWithParam = `${standardDeeplink}?param=`\n//     if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n//         const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n//         logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n//         const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n//         logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n//         logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n//         return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n//     }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n//         logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n//         return shortUniversalLink;\n//     }else {\n//         const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n//         console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n//\n//         return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n//     }*/\n//     const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n//     console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n//     console.log(\"getUniversalLink standardUniversalLink:\",`${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`)\n//     return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n// }\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    // const downloadUrl = standardUniversalLink\n    // console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\",standardUniversalLink)\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\n// export function getAppWalletDeepLink(connectParam: string|undefined): string {\n//     return `${standardDeeplink}?param=${connectParam}`\n// }\n// function getAppWalletShortDeepLink(topic:string,clientId:string): string {\n//     return `${shortUniversalLink}?topic=${topic}${getLastSixMd5Hash(clientId)}`\n// }\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, walletType = protocol_1.ConnectWalletType.OKX_APP, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  walletType=> ${walletType}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    switch (walletType) {\n        case protocol_1.ConnectWalletType.OKX_WALLET:\n            let deepLink = connectRequest\n                ? `${protocol_1.okxWalletDeepLink}?param=${encodeConnectParams(connectRequest)}`\n                : protocol_1.okxWalletDeepLink;\n            let shortUniversalLinkResult = connectRequest\n                ? `${protocol_1.okxWalletUniversalLink}?topic=${connectRequest.topic}${(0, utils_1.getLastSixMd5Hash)(connectRequest.clientId)}`\n                : protocol_1.okxWalletUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        case protocol_1.ConnectWalletType.OKX_MINI:\n            return connectRequest\n                ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n                : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n        default:\n            let deepLinkApp = connectRequest\n                ? `${protocol_1.okxAppDeepLink}?param=${encodeConnectParams(connectRequest)}`\n                : protocol_1.okxAppDeepLink;\n            let shortUniversalLinkResultApp = connectRequest\n                ? `${protocol_1.okxAppUniversalLink}?topic=${connectRequest.topic}${(0, utils_1.getLastSixMd5Hash)(connectRequest.clientId)}`\n                : protocol_1.okxAppUniversalLink;\n            return { universalLink: shortUniversalLinkResultApp, deepLink: deepLinkApp };\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addAccountChangedListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"1baccad8\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"okxconnectdemo:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/testtg/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(52771); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","buildNameSpacesByConnectResponse","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","findConnectorBySession","log_1","protocol_1","connector_1","connectResponse","requestAccountNameSpaces","result","logDebug","JSON","stringify","universalResponse","payload","responses","find","item","name","accounts","filterAccount","namespace","data","ton_addr","address","length","push","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","forEach","chains","addressItem","addressArr","split","chain","slice","join","connectors","wallet","sessionConfig","connector","connectWalletType","ConnectWalletType","OKX_WALLET","getType","CONNECTOR_TYPE","WS","OKX_WALLET_APP_WALLET","OKX_MINI","OKX_TG_WALLET","OKX_APP","OKX_APP_WALLET","tag","appName","getTag","TONCHAIN","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","url","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","tgwalletAppName","tgwalletName","tonConnectSdkVersion","standardDeeplink","okxWalletStackDeepLink","okxAppStackDeepLink","okxWalletDeepLink","okxAppDeepLink","downloadUrl","okxWalletUniversalLink","okxAppUniversalLink","AptosNetwork","UserResponseStatus","getArgs","response","status","REJECTED","OKXConnectError","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","args","__importDefault","this","mod","__esModule","openLink","openLinkBlank","openDeeplinkWithFallback","isMobileUserAgent","getUserAgent","isOS","isBrowser","ua_parser_js_1","tma_api_1","href","target","open","fallback","doFallback","fallbackTimeout","setTimeout","addEventListener","clearTimeout","once","inTg","check","a","test","navigator","userAgent","vendor","opera","_a","_b","_c","results","default","getResult","osName","os","toLowerCase","deviceModel","device","model","includes","browserName","browser","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","OKXWalletAppConnector","ThirdpartInjectConnector","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","WsConnector","TgwalletConnector","InjectConnector","OKXAppConnector","okx_app_connector_1","InjectConnector_1","tgwalletConnector_1","wsConnector_1","okxwalletInjectConnector_1","okxwalletInjectTonsdkConnector_1","thirdpartInjectConnector_1","okx_wallet_app_connector_1","checkMetaData","dappMetaData","BAD_REQUEST_ERROR","OKXStarknetProvider","OKXTronProvider","OKXTonProvider","OKXCosmosProvider","OKXBtcProvider","OKXUniversalProvider","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","misc_1","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyBtc","values","NameSpaceKeySOL","NameSpaceKeyTON","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyCosmos","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","core_1","constructor","provider","STARKNET_CHAIN_ID","getChain","chainId","CHAIN_NOT_SUPPORTED","getAccount","_d","_e","account","session","namespaces","NameSpaceKeyStarknet","startsWith","accountArray","publicKey","pubKey","signMessage","signerAddress","typedData","signData","ret","request","parse","errorData","error","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","i","ConnectionManager","connect_1","commands_1","storageconstants_1","jwtconstants_1","constants_1","eventemitter3_1","storage_1","utils_1","crypto_1","jwt_1","safejson_1","log","report_1","url_1","connectionSplitPackages_1","appname","events","EventEmitter","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","Storage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","reportEvent","OKXReportType","LOG","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","OKXWalletConnector","OKXCONNECTOR_WS_URL_1","packageId","Date","now","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","safeJsonStringify","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","safeJsonParse","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","arguments","input","ignoreACK","_f","_g","_h","_j","_k","_l","_m","_o","emit","id","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","params","messageId","method","CONNECT_METHOD_PUSH","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","message","msgObject","topicId","messageObject","publishedAt","checkResult","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","toString","restoreConnect","Error","disconnect","saveContent","connect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","logError","jwtToken","onOpen","timeOne","rsp","code","timeF","sendFetchAndConsumeMessages","init","sendRaw","bind","checkExpired","checkExpire","activateDisconnect","timeTh","send","catch","err","jsonrpc","CONNECT_JSONRPC_VER","CONNECT_METHOD_SUB","CONNECT_METHOD_LOGIN","token","addPackageParse","event","rawMsg","replace","parsedMessage","CONNECT_METHOD_RECEIVE","sendSubscribe","sendDisconnect","CONNECT_METHOD_DISCONNECT","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","CONNECT_METHOD_RECV_DISCONNECT","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","addListener","success","fail","msgObj","msg","trimStart","decrypt","inputDataObj","msgResult","isSplitPackage","CONNECT_METHOD_PUBLISH","OKXCONNECTOR_MESSAGE_TTL","toUTCString","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","getMsgPayloadFromHistory","timeFive","CONNECT_METHOD_FETCHMSG","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","ISignClientEvents","IEngine","IEngineEvents","ISignClient","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","engine_1","session_1","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","packages_2","provider_1","starknet_1","opts","setGlobal","getDefaultReporter","configVersionAndSide","okxConnectUniversalinwindow","initialize","rpcProviders","isMobileDiscover","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","location","isSpecial","getOpenAppLinkType","connected","NOT_CONNECTED_ERROR","requestParam","buildRequestParamFromRequest","getProvider","validateChain","UNKNOWN_ERROR","keyArr","keys","realChain","replaceChainNameToChainId","assign","redirect","enable","client","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","map","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","disconnectInner","connectAndSign","signRequest","updatedOpts","openUniversalUrl","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","METHOD_NOT_SUPPORTED","on","listener","removeListener","off","setDefaultChain","rpcUrl","tryToReconnect","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","hostname","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","console","cleanSession","sessionProperties","showRequestModal","openWallet","engineConnectInfo","setAccountChangeListener","listenerCount","getEngine","BaseAptosWalletAdapter","publicAccount","getRpcUrl","getChainId","fromAccountToAddress","convertChainIdToNumber","parseChainId","mergeArrays","syncAddressHostAvailable","rpc","projectId","rpcMap","reference","parseInt","isNaN","Number","CAIP_DELIMITER","b","versionCompare","appVersion","okxGlobal","getGlobal","globals","JsonRpcProvider_1","JsonRpcConnection_1","httpProviders","createHttpProviders","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","parsedChainId","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","injectParams","needCheckRequestMethod","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","trim","resultData","rpcUrls","setHttpProvider","eip155","updateNamespace","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","parsedRpc","httpProvider","AptosThirdpartInjectProvider","walletAdapter_1","walletAdapter","getVersion","supportChains","readyState","WalletReadyState","Installed","confirmNetwrok","originalRarams","injectSignResult","signTransaction","signMessageResult","signature","transactionResult","signAndSubmitTransaction","hash","addAccountChangedListener","onAccountChange","chainid","chainName2IdMap","walletNetwork","STANDARD_INJECT_WALLET","OKX_INJECT_WALLET","wallet_info_1","OKXInjectWalletName","OKXWalletName","OKXMiniWalletName","INJECT","KEYLESS","APPLE_WALLET","GOOGLE_WALLET","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","str","hex","charCodeAt","padStart","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signAndSendTransaction","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","from","boc","logVersion","logWarning","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","type_1","action_1","content_1","type","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","BtcProvider","Engine","iconnector_1","connectionManager_1","sessionUtils_1","useConnector","sessionRetryTimer","connectionManager","addConnectionListener","getConnector","accountChangeListener","setConnectionManager","getAllConnectors","hasWsConnector","isWsConnector","isInjectedConnector","universalConnect","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","universalConnectRequest","protocolVer","dAppInfo","fixDappName","requests","base64Encoded","encodeConnectParams","openMethod","connectRequest","isIOS","isIos","addOnConnectResultListener","stopSendSessionRetry","walletName","realConector","methodsResponse","connectRequestMethods","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","tmaReturnUrl","title","document","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","disconnecter","setSessionConnectingListener","sessionConnectingListener","onConnectResult","restoreconnectFromTopic","namespaceKeys","CONNECT_PROTOCOL_VER","clearInterval","setInterval","retryRequestId","jsonResponse","finally","AptosUtils","getTransaction","rawTransaction","entryFunction","typeArgs","type_args","typeArguments","typeTag","realArguments","getTypeArguments","function","module_name","identifier","function_name","type_arguments","getArguments","array","j","y","subArray","dealArrayElements","Uint8Array","r","n","OKXCONNECTOR_JWT_WALLET_SIDE","TronProvider","MartainWalletAdapter","baseAptosWalletAdapter_1","aptosWalletAdapter_1","utils_2","super","_version","_readyState","Unsupported","NotDetected","_provider","martian","_network","_connecting","_wallet","scopePollingDetectionStrategy","authKey","connecting","_chainId","WALLET_NOT_SUPPORTED","handleChangeAccount","newAccount","onNetworkChange","Loadable","initNetWork","isConnected","walletAccount","options","generateTransaction","SuiStandardProvider","media_1","features","signTransactionBlock","injectSendResult","signAndExecuteTransaction","signAndExecuteTransactionBlock","digest","injectResult","injectPersonalResult","signPersonalMessage","isDevice","firstAccount","normalizeUint8Array","btoa","fromCharCode","getNamespaceKeyByChain","useShortLink","toSafeBase64FromBase64","isValidObject","base64decode","base64encode","splitToUint8Arrays","concatUint8Arrays","getOKXLink","encodeTWAConnectURLParams","openOKXTMAWalletlinkWithFallback","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplinkWithFallback","openOKXDeeplink","callForSuccess","call_for_success_1","web_api_1","request_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","tweetnacl_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","randomBytes","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","types_1","core_2","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","close","context","requestStrict","onPayload","onClose","_error","InjectUtils_1","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","okxTonWallet","tonconnect","parseConnectResponse","needPop","accountChange","signalChain","connectWalletNameSpace","connectRequestWalletResponse","connectChain","chainStr","selectedAddress","coinType","namespaceChainId","tonResult","tonItem","itmes","items","needProof","restoreConnection","nameSpaceResponse","TONMethods","singleConnect","NameSpaceKeyEip155","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","prefix","setPrototypeOf","toJSON","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","CONNECTION_ERROR","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","sign","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","disconnectListener","providerMap","Map","disconnectHandler","walletNameKey","getInjectProvider","mapKey","entries","newRequest","checkWalletMatch","injectProvider","errorResponse","sessionLocal","_","getSupportNameSpaces","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","setItem","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","lineType","localConnectRequest","universalLink","deepLink","getPubkey","getWalletAddress","components","_1","caip","getAddressForChainId","ns","checkChainId","signStr","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","inscribeTransfer","ticker","suffix","unexistKeys","namespaceKey","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","pendingRequests","beginReport","handleResponse","bindRequestForPromise","set","getRequestId","delete","clear","PetraWalletAdapter","getPerta","petra","perta","isOKExWallet","isOkxWallet","okxwallet","aptos","handleAccountChange","connectMethodsAdaptOldVersion","ConnectMethodUtils_1","_createElementBlock","_hoisted_1","_createVNode","_component_RouterView","script","__exports__","render","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","_component_el_select","handleWalletType","placeholder","_component_el_option","label","modals","handleModalsSelect","multiple","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","res","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","selectedWalletType","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onStatusChange","walletInfo","onModalStateChange","state","substring","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","substr","buffer","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","firstStr","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","ton","sui","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","recipient","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","walletType","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","app","createApp","App","routes","path","component","Home","router","createRouter","history","createWebHashHistory","use","ElementPlus","mount","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","callback","errorsHandler","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","requestParams","SolanaProvider","cross_fetch_1","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","onError","parseError","SolProvider","bs58_1","accountChangedSolanaPublicKeyHandler","encodedMessage","signedMessage","bufferResult","allResult","signAndSendResult","SOLANAMethods","StarknetProvider","inject_1","SolProvider_1","AptosProvider_1","TONProvider_1","sui_provider_1","btc_provider_1","AptosProvider","responseItem","required","requiredNamespaces","optional","singleItem","singleProvider","singleConnectResult","getAccountByRequestWallets","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","sort","allEqual","namespacesKey","accountsItem","sessionAccounts","newSessionAccounts","areEqual","every","aptosAdd","aptosChains","aptosChain","ton_proof_result_Item","proofItem","proof","isAccountChange","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","WalletConnectionManager","walletConnectionConstants_1","communicateEvents","OKXCONNECTOR_CACHE_KEY","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","originContent","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","finalMessage","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","WalletConnectionManagerTopicInfoCacheKey","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","getSessionPublicKey","getCurrentCachedTopicIdList","sendMsg","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","CONNECT_METHOD_UNSUB","sendBatchFetchAndConsumeMessages","topicIdList","CONNECT_METHOD_BATCH_FETCHMSG","topics","withInternalData","finishCount","idx","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","topicExpireMap","lastTimestamp","cacheMapCache","expireTimestamp","fromEntries","RANDOM_LENGTH","hasLocalStorage","hasBuiltInWebSocket","resolveWebSocketImplementation","checkWSUrl","hashKey","generateRandomBytes32","generateGroupId","isInIOSLine","isInIOSLark","isInIOSChrome","isInIOSWeChat","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","decodeUTF8","decodedUint8Array","encodeUTF8","toUint8Array","scheme","WebSocket","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","detect","disposers","detectAndDispose","detected","dispose","interval","removeEventListener","accountChangedBtcHandler","unisat","switchChain","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","BtcMethods","satBytes","signatures","signedPsbt","pushPsbt","txHash","hasFunction","functionName","itemNameSpace","chains_1","JSONStringify","JSONParse","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","ConnectorState","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","OKXCONNECTOR_WS_URL_LIST","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","TIME_OUT","CANCELED","FINISHED","InitState","Connecting","Connected","Disconnected","OnError","AptosStandardProvider","mainNetWorkInfo","realParams","changeNetwork","accountInfo","accountChangedListener","networkInfo","changeMainNetwork","changeNetworkResult","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","creatOKXWalletInfo","creatOKXMiniAppWalletInfo","creatOKXInjectWalletInfo","AptosAppleWalletName","AptosGoogleWalletName","OKXWalletAppName","accountChangedEVMHandler","ethParams","resultSwitch","chainHex","currentChain","Eip55Methods","OKXReportSide","versionStr","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","timeout","controller","AbortController","signal","fetchPromise","timeoutPromise","abort","race","ok","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","ua","reportItem","lang","markRecordItem","sendList","allSettled","keepIndex","splice","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","splitMessageSendArray","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","sendRawMsg","recoverFromCache","payloadList","retryCount","syncCache","protocol_version","protocolMessageObject","package_group_id","senderVersion","msgLength","msg_parts","msg_part_length","groupId","splitMessagePackages","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","messageCache","index_check","messageList","msgList","messageIdList","msgIdList","receivedList","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","rec_array","send_array","CONNECT_ITEM_ERROR_CODES","connect_wallet_1","connect_event_1","thirdpartInjectWallet","wallets","registerWallet","getWalletVersion","firstWallet","getResponseByConnect","onDisconnect","isSingleChain","newAddress","sessionNew","universalResponses","universalAccountItem","supportNamespaceAndChains","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","SuiMethods","getSuiWallet","addStandardEventListener","standardEventListener","tgUrl","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","_path","urlSafeDecode","qIndex","pathParam","query_params","urlParseQueryString","urlencoded","queryString","param","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","algo","bech32Address","hexToUint8Array","chain_id","account_number","sequence","fee","msgs","memo","signOptions","resData","signed","bodyBytes","bufferToHex","authInfoBytes","accountNumber","arr","output","x","arrayBuffer","byteValue","SESSION_CONNECTING","stored","localAddress","localItem","connectEvent","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","fn","attempts","delayMs","lastError","delay","aborted","timeoutId","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","selectedUrlIndex","timeOutLimit","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","socket","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","OPEN","tryRegistOpen","registOpen","inRetry","URLSearchParams","startTimeOutTimer","resetTimeOutTimer","checkMaxRetry","connectionTryNext","nextUrl","getNextSelectUrl","pendingSocket","cacheSuccessUrlSelect","onVisibleChanged","visibilityState","failed","splitCheckComplete","listenPayloadHandler","parsedEvent","skipMsg","failHandler","payloadHandler","doLogin","tmpMsg","jsonstr","openHandler","IJSONRpcConnection","opt","OKXAptosProvider_1","connectSupportMethods","notSupportError","errorItem","mobileDiscoverWallet","callBackParams","solAccount","account1","solAddress","realMessage","encodeMessage","suiMessage","convertedArray","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosData","cosmosBase64Encoded","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","space","includeChain","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","WalletConnectionManagerEvent","RECEIVE_REQUEST","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","CosmosProvider","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","walletConnectionManager_1","buffer_1","AptosUtils_1","chainsSet","getConnectedNamespace","defaultNetwork","currentChainId","getRealChainId","successData","buf","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","count","hidden","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","getTelegramWalletTWAUrl","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","deepLinkApp","shortUniversalLinkResultApp","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","AptosMethods","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encrypted","concatInfo","hexResult","encodedResult","senderPublicKey","messageByteArray","internalMessage","decrypted","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","createCodec","ascii","bufNum","utf8","bases","base16","latin1","aptosChainList","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","f","chunkId","u","miniCssF","g","globalThis","Function","prop","inProgress","dataWebpackPrefix","l","needAttach","scripts","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","head","Symbol","toStringTag","nmd","paths","children","installedChunks","installedChunkData","promise","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}