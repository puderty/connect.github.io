{"version":3,"file":"js/app.7e760e73.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\n// export const stackDeepLink:string = 'okx://web3?stack=true'\nexports.stackDeepLink = 'okx://web3/dapp/open';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.8';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(universalLink, '_self');\n                }\n                else {\n                    window.open(universalLink, '_blank');\n                }\n            }\n        };\n    }\n    else if (iosUseDeeplink) {\n        fallbackToDownloadPage = () => {\n            console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n            if (!deepLinkOpened) {\n                console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                window.open(universalLink, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (document.hidden) {\n                deepLinkOpened = true;\n            }\n            if (count > 10 || document.hidden) {\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            console.log(\"windowOpen :blur\");\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_2.AppwalletConnector(), new core_2.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=46dad1a2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=46dad1a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46dad1a2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(58997); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","error","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","fixDappName","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","toLowerCase","title","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","timestamp","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","localConnectRequest","useShortLink","isOS","openDeeplinkWithFallback","stackDeepLink","standardDeeplink","shortUniversalLink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","console","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","getNamespaceKeyByChain","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","injectParams","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","signMessage","injectResult","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","signedMessage","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","signStr","type","to","satBytes","psbtHexs","options","signatures","isArray","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","values","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","downloadUrl","standardUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","openOKXUniversalLink","getAppWalletShortDeepLink","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","logVersion","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXBtcProvider","_1","core_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","fromAddress","suffix","unexistKeys","OKXCosmosProvider","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","realChain","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}