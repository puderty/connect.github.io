{"version":3,"file":"js/app.c82f14f1.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('injectResult' in signedMessage) {\n                    let injectResult = signedMessage.injectResult;\n                    console.error('aptos_signMessage --injectResult--', JSON.stringify(injectResult));\n                    return new Promise((resolve, reject) => {\n                        resolve(injectResult);\n                    });\n                }\n                else if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink);\n                // openLinkBlank(standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.4';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if (iosUseDeeplink) {\n        fallbackToDownloadPage = () => {\n            console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n            if (!deepLinkOpened) {\n                console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (document.hidden) {\n                deepLinkOpened = true;\n            }\n            if (count > 10 || document.hidden) {\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            console.log(\"windowOpen :blur\");\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_2.AppwalletConnector(), new core_2.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            if (args.method === \"kaia_signTransaction\" && result && typeof result === 'string') {\n                                response.result = JSON.parse(result);\n                                (0, core_1.logDebug)(\"eip155 request --kaia_signTransaction>>>>\", response.result);\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      window.close()\n      // if (window.provider) {\n      //   this.testTonSdk();\n      // } else {\n      //   console.log(`connectBtnClicked provider not finish init`);\n      // }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=243932ee&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=243932ee&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-243932ee\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(37078); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","injectResult","error","JSON","stringify","successData","signStr","slice","signature","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","index_check","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","sessionConfig","connectInfoAndUrl","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","fixDappName","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","toLowerCase","title","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","timestamp","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","standardDeeplink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","to","satBytes","psbtHexs","options","signatures","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","downloadUrl","standardUniversalLink","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","logVersion","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXBtcProvider","_1","caip","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","fromAddress","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","requestEVMAccountWithSession","blockExplorerUrls","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","testTonSdk","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}